%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Untitled-5-01.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Анита
%%CreationDate: 19.02.2019
%%BoundingBox: 0 0 726 549
%%HiResBoundingBox: 0 0 726 548.7251
%%CropBox: 0 0 726 548.7251
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="пїњ" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2019-02-19T11:58:03+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2019-02-19T11:58:03+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2019-02-19T11:58:03+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>204</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgAzAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FUu1GRF1LTAWA/eyEgn/il8IIosJRJI/HRMcDN2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpddyINbsQWAPpXFRXxMdMIIosDE8Q+KY4GbsVdirs&#xA;VdirsVdirsVdirsVdiqX63aapd2wg0+5W1LH97KQeVPBSOnzynPCchUTTkaecIyuY4mIyfl1qLPy&#xA;a8jcsfiYhifprmtl2fO+btR2tCvpKdeX/L2uaTMoN8k1mdntyGp80r9k5l6fT5MZ+q49zh6rVYso&#xA;+mpd7JMzXXOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVK9esdWvYFgsLpbRDX1XoeZ8ACOg8&#xA;coz45yFRNOTpsmOBuQ4mKt+XOoF97yNq1JYhs1x7OnfN2g7Wh/NKfeXtD1vSpAkt8txZEGsJDVU9&#xA;ihPT5ZmafBkxnc3FwdVqcWUWI1LvZBmY4DsVdirsVdirsVdirCvNeqalb6w0VvcyRx8EIRGIFSPb&#xA;MnFEEODqJyEtilCa1rjtxW7nLVpTkRvStN8nwxafFn3lV+v+ZP8Alpm/4P8AtwVFPHPvLvr/AJk/&#xA;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&#xA;h2KuxV2KuxV2KuxV2Kv/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:7A656CDDCE2168118083EDC7C5BB7484</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:7A656CDDCE2168118083EDC7C5BB7484</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:62b27018-445f-fe44-a38c-210d437eb5e4</stRef:instanceID>
            <stRef:documentID>xmp.did:3CAC0721BA2068118C1498134FEAF126</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3CAC0721BA2068118C1498134FEAF126</stEvt:instanceID>
                  <stEvt:when>2019-02-13T21:05:18+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7A656CDDCE2168118083EDC7C5BB7484</stEvt:instanceID>
                  <stEvt:when>2019-02-19T11:58:03+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>726.000000</stDim:w>
            <stDim:h>548.725098</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -548.725 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 548.725 li
726 548.725 li
726 0 li
cp
clp
40.5088 422.109 mo
680.168 422.109 li
680.168 422.109 612.636 452.579 530.839 462.579 cv
449.041 472.579 210.819 467.693 176.483 462.581 cv
121.63 454.414 40.5088 422.109 40.5088 422.109 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
.0352941 .45098 .576471 rgb
f
628.008 423.246 mo
628.008 423.246 638.841 430.244 655.008 423.246 cv
655.008 423.246 637.341 422.077 628.008 423.246 cv
cp
0 .388235 .478431 rgb
f
129.509 427.478 mo
129.509 427.478 133.337 430.812 140.376 432.832 cv
140.376 432.832 189.079 440.804 206.396 438.26 cv
223.714 435.716 224.29 431.697 224.29 431.697 cv
224.29 431.697 247.896 434.344 256.703 430.129 cv
256.703 430.129 238.792 424.702 199.484 424.141 cv
160.175 423.581 129.509 427.478 129.509 427.478 cv
cp
f
269.842 429.759 mo
269.842 429.759 279.385 436.766 305.28 429.173 cv
305.28 429.173 282.143 423.34 269.842 429.759 cv
cp
f
430.035 425.226 mo
430.035 425.226 420.045 431.739 392.11 426.186 cv
392.11 426.186 412.328 421.826 430.035 425.226 cv
cp
f
289.706 434.813 mo
288.345 435.35 304.88 439.142 332.926 432.707 cv
332.926 432.707 308.57 427.378 289.706 434.813 cv
cp
f
604.176 425.531 mo
604.176 425.531 570.992 435.169 529.646 425.361 cv
529.646 425.361 544.771 420.593 575.474 422.042 cv
606.176 423.49 604.176 425.531 604.176 425.531 cv
cp
f
87.1733 423.247 mo
266.58 423.247 li
266.58 62.7114 li
87.1733 62.7114 li
87.1733 423.247 li
.607843 .768627 .819608 rgb
f
99.3291 75.7798 mo
99.3291 389.636 li
253.898 389.636 li
253.898 75.7798 li
99.3291 75.7798 li
.74902 .854902 .878431 rgb
f
123.972 385.787 mo
118.181 335.542 li
119.619 335.025 li
125.739 385.168 li
123.972 385.787 li
cp
120.478 334.333 mo
120.464 334.18 120.389 334.054 120.263 333.977 cv
120.136 333.904 119.984 333.889 119.859 333.941 cv
118.143 334.559 li
118.143 332.072 li
118.143 331.809 117.928 331.595 117.663 331.595 cv
115.833 331.595 li
115.568 331.595 115.354 331.809 115.354 332.072 cv
115.354 334.749 li
106.825 334.749 li
106.825 333.12 li
106.825 332.869 106.61 332.654 106.358 332.654 cv
99.3291 332.654 li
99.3291 333.601 li
105.878 333.601 li
105.878 386.721 li
105.878 386.985 106.093 387.187 106.358 387.187 cv
106.61 387.187 106.825 386.985 106.825 386.721 cv
106.825 335.708 li
115.354 335.708 li
115.354 386.721 li
115.354 386.985 115.568 387.187 115.833 387.187 cv
116.086 387.187 116.3 386.985 116.3 386.721 cv
116.3 332.554 li
117.196 332.554 li
117.196 386.721 li
117.196 386.985 117.411 387.187 117.663 387.187 cv
117.928 387.187 118.143 386.985 118.143 386.721 cv
118.143 343.465 li
123.102 386.482 li
123.115 386.621 123.189 386.758 123.316 386.834 cv
123.569 386.898 li
123.72 386.871 li
126.408 385.938 li
126.623 385.864 126.748 385.649 126.724 385.435 cv
120.478 334.333 li
cp
.466667 .686275 .737255 rgb
f
136.035 385.836 mo
135.985 385.08 li
136.06 384.829 li
132.641 333.537 li
139.783 332.602 li
144.288 385.953 li
136.035 385.836 li
cp
127.707 385.75 mo
124.073 334.786 li
131.694 333.663 li
135 384.474 li
127.707 385.75 li
cp
145.271 386.241 mo
140.678 332.035 li
140.678 331.91 140.616 331.783 140.514 331.708 cv
140.414 331.619 140.288 331.595 140.148 331.607 cv
132.073 332.654 li
123.493 333.917 li
123.254 333.953 123.076 334.167 123.088 334.419 cv
126.798 386.342 li
126.811 386.468 126.874 386.595 126.975 386.681 cv
127.063 386.746 127.165 386.783 127.278 386.783 cv
127.355 386.771 li
135.063 385.435 li
135.114 386.33 li
135.14 386.583 135.34 386.771 135.581 386.783 cv
144.804 386.898 li
144.817 386.898 li
145.083 386.912 145.309 386.697 145.309 386.431 cv
145.271 386.241 li
cp
f
152.089 338.118 mo
147.66 338.118 li
147.399 338.118 147.187 338.33 147.187 338.591 cv
147.187 338.853 147.399 339.065 147.66 339.065 cv
152.089 339.065 li
152.35 339.065 152.562 338.853 152.562 338.591 cv
152.562 338.33 152.35 338.118 152.089 338.118 cv
cp
f
161.458 338.118 mo
156.351 338.118 li
156.09 338.118 155.877 338.33 155.877 338.591 cv
155.877 338.853 156.09 339.065 156.351 339.065 cv
161.458 339.065 li
161.72 339.065 161.932 338.853 161.932 338.591 cv
161.932 338.33 161.72 338.118 161.458 338.118 cv
cp
f
169.334 338.118 mo
163.75 338.118 li
163.488 338.118 163.276 338.33 163.276 338.591 cv
163.276 338.853 163.488 339.065 163.75 339.065 cv
169.334 339.065 li
169.596 339.065 169.808 338.853 169.808 338.591 cv
169.808 338.33 169.596 338.118 169.334 338.118 cv
cp
f
207.338 385.953 mo
198.619 385.953 li
198.619 339.065 li
207.338 339.065 li
207.338 385.953 li
cp
192.564 385.976 mo
189.988 384.651 li
189.762 384.526 189.471 384.615 189.345 384.853 cv
189.309 384.955 li
194.947 332.679 li
197.635 333.472 li
192.564 385.976 li
cp
188.261 385.836 mo
185.005 385.836 li
184.829 385.836 184.69 385.925 184.614 386.051 cv
190.834 334.447 li
190.834 334.419 li
190.834 331.632 li
194.013 332.425 li
188.261 385.836 li
cp
183.643 386.205 mo
180.173 385.876 li
187.174 333.763 li
189.851 334.71 li
183.643 386.205 li
cp
179.239 385.735 mo
171.542 384.073 li
177.75 336.88 li
185.422 338.936 li
179.239 385.735 li
cp
252.03 344.426 mo
252.03 334.382 li
252.03 334.13 251.816 333.917 251.564 333.917 cv
240.864 333.917 li
240.612 333.917 240.398 334.13 240.398 334.382 cv
240.398 339.239 li
229.318 339.239 li
229.318 336.275 li
229.318 336.023 229.104 335.809 228.853 335.809 cv
223.438 335.809 li
223.438 333.12 li
223.438 332.869 223.224 332.654 222.96 332.654 cv
207.818 332.654 li
207.552 332.654 207.338 332.869 207.338 333.12 cv
207.338 338.118 li
198.141 338.118 li
198.619 333.171 li
198.631 332.942 198.493 332.728 198.278 332.667 cv
194.671 331.619 li
194.659 331.619 li
194.644 331.619 li
190.481 330.56 li
190.343 330.533 190.19 330.56 190.077 330.649 cv
189.952 330.735 189.887 330.875 189.887 331.026 cv
189.887 333.713 li
186.947 332.679 li
186.809 332.627 186.659 332.654 186.543 332.716 cv
186.418 332.792 186.344 332.918 186.316 333.056 cv
185.649 338.017 li
177.472 335.822 li
177.346 335.782 177.208 335.809 177.095 335.882 cv
176.979 335.96 176.905 336.085 176.88 336.21 cv
171.49 377.207 li
171.49 332.072 li
171.49 331.809 171.276 331.595 171.012 331.595 cv
145.776 331.595 li
145.523 331.595 145.309 331.809 145.309 332.072 cv
145.309 386.431 li
145.309 386.697 145.523 386.898 145.776 386.898 cv
146.041 386.898 146.255 386.697 146.255 386.431 cv
146.255 332.554 li
153.751 332.554 li
153.751 386.721 li
153.751 386.985 153.965 387.187 154.23 387.187 cv
154.482 387.187 154.697 386.985 154.697 386.721 cv
154.697 332.554 li
162.141 332.554 li
162.141 386.721 li
162.141 386.985 162.356 387.187 162.621 387.187 cv
162.885 387.187 163.088 386.985 163.088 386.721 cv
163.088 332.554 li
170.544 332.554 li
170.544 386.721 li
170.544 386.985 170.758 387.187 171.012 387.187 cv
171.276 387.187 171.49 386.985 171.49 386.721 cv
171.49 385.018 li
179.542 386.771 li
179.591 386.771 li
184.007 387.187 li
184.059 387.187 li
184.286 387.187 184.5 387.012 184.524 386.771 cv
184.564 386.468 li
184.626 386.645 184.791 386.783 185.005 386.783 cv
188.677 386.783 li
188.916 386.783 189.131 386.595 189.155 386.354 cv
189.296 385.068 li
189.296 385.232 189.382 385.407 189.548 385.485 cv
192.751 387.137 li
192.968 387.187 li
193.195 387.137 li
193.333 387.062 193.421 386.922 193.434 386.758 cv
197.673 342.951 li
197.673 386.431 li
197.673 386.697 197.887 386.898 198.141 386.898 cv
207.818 386.898 li
208.083 386.898 208.296 386.697 208.296 386.431 cv
208.296 333.601 li
211.806 333.601 li
211.806 387.3 li
211.806 387.567 212.021 387.769 212.272 387.769 cv
212.538 387.769 212.753 387.567 212.753 387.3 cv
212.753 333.601 li
218.795 333.601 li
218.795 387.895 li
218.795 388.146 219.01 388.36 219.264 388.36 cv
219.527 388.36 219.742 388.146 219.742 387.895 cv
219.742 333.601 li
222.479 333.601 li
222.479 387.895 li
222.479 388.146 222.694 388.36 222.96 388.36 cv
223.224 388.36 223.438 388.146 223.438 387.895 cv
223.438 336.755 li
228.372 336.755 li
228.372 387.3 li
228.372 387.567 228.587 387.769 228.853 387.769 cv
229.104 387.769 229.318 387.567 229.318 387.3 cv
229.318 340.185 li
240.398 340.185 li
240.398 387.895 li
240.398 388.146 240.612 388.36 240.864 388.36 cv
241.13 388.36 241.344 388.146 241.344 387.895 cv
241.344 334.863 li
251.083 334.863 li
251.083 387.895 li
251.083 388.146 251.298 388.36 251.564 388.36 cv
251.816 388.36 252.03 388.146 252.03 387.895 cv
252.03 345.374 li
253.898 345.374 li
253.898 344.426 li
252.03 344.426 li
cp
f
250.088 342.325 mo
242.306 342.325 li
242.044 342.325 241.832 342.537 241.832 342.797 cv
241.832 343.059 242.044 343.271 242.306 343.271 cv
250.088 343.271 li
250.349 343.271 250.562 343.059 250.562 342.797 cv
250.562 342.537 250.349 342.325 250.088 342.325 cv
cp
f
238.466 358.319 mo
231.036 358.319 li
231.036 344.326 li
238.466 344.326 li
238.466 358.319 li
cp
238.947 343.379 mo
230.556 343.379 li
230.29 343.379 230.09 343.594 230.09 343.845 cv
230.09 358.785 li
230.09 359.051 230.29 359.265 230.556 359.265 cv
238.947 359.265 li
239.198 359.265 239.413 359.051 239.413 358.785 cv
239.413 343.845 li
239.413 343.594 239.198 343.379 238.947 343.379 cv
cp
f
102.51 357.057 mo
101.462 357.057 li
101.462 339.065 li
102.51 339.065 li
102.51 357.057 li
cp
102.989 338.118 mo
100.983 338.118 li
100.73 338.118 100.516 338.333 100.516 338.596 cv
100.516 357.535 li
100.516 357.801 100.73 358.004 100.983 358.004 cv
102.989 358.004 li
103.241 358.004 103.456 357.801 103.456 357.535 cv
103.456 338.596 li
103.456 338.333 103.241 338.118 102.989 338.118 cv
cp
f
140.59 192.274 mo
131.379 194.37 li
120.162 144.63 li
128.679 142.484 li
140.59 192.274 li
cp
119.404 194.343 mo
109.323 145.538 li
118.698 142.434 li
119.139 144.39 li
119.202 144.693 li
129.713 191.581 li
119.404 194.343 li
cp
173.006 141.425 mo
158.684 141.425 li
158.419 141.425 158.205 141.639 158.205 141.904 cv
158.205 149.499 li
145.549 149.499 li
145.549 143.532 li
145.549 143.267 145.335 143.053 145.083 143.053 cv
134.735 143.053 li
134.47 143.053 134.256 143.267 134.256 143.532 cv
134.256 161.739 li
129.486 141.791 li
129.462 141.665 129.385 141.564 129.272 141.5 cv
129.171 141.437 129.032 141.411 128.906 141.437 cv
119.96 143.708 li
119.505 141.714 li
119.48 141.576 119.392 141.476 119.278 141.399 cv
119.165 141.336 119.026 141.324 118.9 141.362 cv
109.248 144.565 li
109.248 141.815 li
109.248 141.55 109.033 141.35 108.768 141.35 cv
99.3291 141.35 li
99.3291 142.296 li
108.301 142.296 li
108.301 194.925 li
108.301 195.188 108.503 195.405 108.768 195.405 cv
109.033 195.405 109.248 195.188 109.248 194.925 cv
109.248 149.841 li
118.585 195.025 li
118.61 195.151 118.686 195.264 118.8 195.329 cv
119.052 195.405 li
119.165 195.391 li
129.991 192.489 li
130.558 195.038 li
130.597 195.151 130.673 195.264 130.774 195.329 cv
131.025 195.405 li
131.126 195.391 li
141.259 193.096 li
141.385 193.069 141.499 192.995 141.562 192.881 cv
141.625 192.78 141.649 192.652 141.625 192.527 cv
135.203 165.702 li
135.203 143.999 li
144.603 143.999 li
144.603 194.925 li
144.603 195.188 144.817 195.405 145.083 195.405 cv
145.335 195.405 145.549 195.188 145.549 194.925 cv
145.549 150.446 li
158.205 150.446 li
158.205 195.947 li
158.205 196.199 158.419 196.413 158.684 196.413 cv
158.937 196.413 159.15 196.199 159.15 195.947 cv
159.15 142.371 li
165.283 142.371 li
165.283 195.947 li
165.283 196.199 165.497 196.413 165.763 196.413 cv
166.015 196.413 166.229 196.199 166.229 195.947 cv
166.229 142.371 li
172.526 142.371 li
172.526 196.477 li
172.526 196.741 172.74 196.955 173.006 196.955 cv
173.27 196.955 173.472 196.741 173.472 196.477 cv
173.472 141.904 li
173.472 141.639 173.27 141.425 173.006 141.425 cv
cp
f
193.421 194.458 mo
183.894 194.458 li
183.894 140.806 li
193.421 140.806 li
193.421 194.458 li
cp
180.047 194.722 mo
175.995 193.233 li
178.923 142.471 li
182.923 143.86 li
180.047 194.722 li
cp
219.264 147.633 mo
206.82 147.633 li
206.82 143.532 li
206.82 143.267 206.606 143.053 206.342 143.053 cv
194.367 143.053 li
194.367 140.327 li
194.367 140.062 194.153 139.86 193.887 139.86 cv
183.428 139.86 li
183.162 139.86 182.948 140.062 182.948 140.327 cv
182.948 142.863 li
178.633 141.374 li
178.494 141.324 178.341 141.336 178.216 141.425 cv
178.09 141.5 178.014 141.639 178.014 141.791 cv
175.037 193.537 li
175.024 193.739 175.15 193.927 175.34 194.002 cv
180.323 195.834 li
180.476 195.858 li
180.577 195.858 180.666 195.834 180.74 195.782 cv
180.865 195.693 180.942 195.567 180.954 195.417 cv
182.948 160.212 li
182.948 194.925 li
182.948 195.188 183.162 195.405 183.428 195.405 cv
193.887 195.405 li
194.153 195.405 194.367 195.188 194.367 194.925 cv
194.367 143.999 li
205.875 143.999 li
205.875 194.925 li
205.875 195.188 206.089 195.405 206.342 195.405 cv
206.606 195.405 206.82 195.188 206.82 194.925 cv
206.82 148.591 li
213.23 148.591 li
213.23 195.391 li
213.23 195.644 213.445 195.858 213.711 195.858 cv
213.975 195.858 214.177 195.644 214.177 195.391 cv
214.177 148.591 li
218.795 148.591 li
218.795 195.668 li
218.795 195.92 219.01 196.134 219.264 196.134 cv
219.527 196.134 219.742 195.92 219.742 195.668 cv
219.742 148.112 li
219.742 147.847 219.527 147.633 219.264 147.633 cv
cp
f
235.4 194.282 mo
231.009 192.034 li
250.239 152.781 li
253.317 155.392 li
235.4 194.282 li
cp
229.961 192.034 mo
228.675 194.646 li
225.08 191.783 li
248.183 144.213 li
252.119 146.813 li
229.961 192.034 li
cp
250.68 151.91 mo
253.155 146.85 li
253.255 146.636 253.191 146.371 252.989 146.244 cv
248.245 143.128 li
248.132 143.053 247.994 143.028 247.855 143.065 cv
247.728 143.102 247.614 143.19 247.565 143.318 cv
224.057 191.707 li
223.968 191.909 224.02 192.149 224.197 192.287 cv
228.549 195.757 li
228.638 195.819 228.739 195.858 228.853 195.858 cv
228.954 195.846 li
229.092 195.819 229.205 195.72 229.269 195.592 cv
230.592 192.894 li
235.413 195.353 li
235.627 195.405 li
235.78 195.378 li
235.906 195.341 236.007 195.24 236.056 195.126 cv
253.898 156.389 li
253.898 154.647 li
250.68 151.91 li
cp
f
202.67 188.855 mo
196.512 188.855 li
196.512 152.503 li
202.67 152.503 li
202.67 188.855 li
cp
203.136 151.557 mo
196.046 151.557 li
195.78 151.557 195.565 151.771 195.565 152.022 cv
195.565 189.334 li
195.565 189.599 195.78 189.801 196.046 189.801 cv
203.136 189.801 li
203.402 189.801 203.617 189.599 203.617 189.334 cv
203.617 152.022 li
203.617 151.771 203.402 151.557 203.136 151.557 cv
cp
f
191.489 188.855 mo
185.811 188.855 li
185.811 152.264 li
191.489 152.264 li
191.489 188.855 li
cp
191.97 151.317 mo
185.346 151.317 li
185.082 151.317 184.865 151.531 184.865 151.784 cv
184.865 189.334 li
184.865 189.599 185.082 189.801 185.346 189.801 cv
191.97 189.801 li
192.236 189.801 192.436 189.599 192.436 189.334 cv
192.436 151.784 li
192.436 151.531 192.236 151.317 191.97 151.317 cv
cp
f
156.666 297.758 mo
140.691 297.758 li
140.691 285.811 li
156.666 285.811 li
156.666 297.758 li
201.143 283.073 mo
201.559 275.943 li
201.571 275.817 201.522 275.692 201.434 275.591 cv
201.345 275.502 201.219 275.438 201.094 275.438 cv
177.346 275.438 li
177.294 275.45 li
177.196 275.477 li
177.132 275.502 li
177.043 275.564 li
176.993 275.627 li
176.93 275.704 li
176.905 275.792 li
176.88 275.855 li
174.645 291.942 li
174.645 271.174 li
174.645 270.908 174.43 270.694 174.167 270.694 cv
157.132 270.694 li
156.88 270.694 156.666 270.908 156.666 271.174 cv
156.666 284.864 li
140.691 284.864 li
140.691 275.918 li
140.691 275.652 140.476 275.438 140.211 275.438 cv
121.449 275.438 li
121.449 270.403 li
121.449 270.139 121.234 269.924 120.981 269.924 cv
99.3291 269.924 li
99.3291 270.872 li
102.51 270.872 li
102.51 326.075 li
102.51 326.338 102.724 326.54 102.989 326.54 cv
103.241 326.54 103.456 326.338 103.456 326.075 cv
103.456 270.872 li
109.134 270.872 li
109.134 326.075 li
109.134 326.338 109.336 326.54 109.601 326.54 cv
109.866 326.54 110.08 326.338 110.08 326.075 cv
110.08 270.872 li
116.187 270.872 li
116.187 326.075 li
116.187 326.338 116.401 326.54 116.654 326.54 cv
116.919 326.54 117.133 326.338 117.133 326.075 cv
117.133 270.872 li
120.503 270.872 li
120.503 325.795 li
120.503 326.062 120.717 326.276 120.981 326.276 cv
121.234 326.276 121.449 326.062 121.449 325.795 cv
121.449 276.397 li
129.802 276.397 li
129.802 326.35 li
129.802 326.604 130.004 326.819 130.269 326.819 cv
130.534 326.819 130.748 326.604 130.748 326.35 cv
130.748 276.397 li
139.744 276.397 li
139.744 326.957 li
139.744 327.222 139.946 327.424 140.211 327.424 cv
140.476 327.424 140.691 327.222 140.691 326.957 cv
140.691 298.705 li
156.666 298.705 li
156.666 325.517 li
156.666 325.784 156.88 325.998 157.132 325.998 cv
157.397 325.998 157.611 325.784 157.611 325.517 cv
157.611 271.64 li
165.283 271.64 li
165.283 325.517 li
165.283 325.784 165.497 325.998 165.763 325.998 cv
166.015 325.998 166.229 325.784 166.229 325.517 cv
166.229 271.64 li
173.699 271.64 li
173.699 325.517 li
173.699 325.784 173.913 325.998 174.167 325.998 cv
174.43 325.998 174.645 325.784 174.645 325.517 cv
174.645 298.806 li
177.762 276.397 li
185.434 276.397 li
181.055 326.98 li
181.043 327.235 181.233 327.474 181.484 327.486 cv
181.536 327.5 li
181.775 327.5 181.977 327.312 182.002 327.058 cv
186.381 276.397 li
193.446 276.397 li
189.887 326.919 li
189.875 327.183 190.065 327.41 190.329 327.424 cv
190.368 327.424 li
190.607 327.424 190.822 327.235 190.834 326.996 cv
194.393 276.397 li
200.588 276.397 li
200.159 283.551 li
197.673 325.771 li
197.66 326.023 197.85 326.249 198.114 326.265 cv
198.141 326.276 li
198.392 326.276 198.606 326.075 198.619 325.821 cv
200.159 299.588 li
200.159 326.075 li
200.159 326.338 200.374 326.54 200.638 326.54 cv
200.904 326.54 201.105 326.338 201.105 326.075 cv
201.105 284.019 li
204.827 284.019 li
204.827 325.795 li
204.827 326.062 205.029 326.276 205.295 326.276 cv
205.559 326.276 205.773 326.062 205.773 325.795 cv
205.773 284.019 li
213.23 284.019 li
213.23 326.075 li
213.23 326.338 213.445 326.54 213.711 326.54 cv
213.975 326.54 214.177 326.338 214.177 326.075 cv
214.177 284.019 li
219.753 284.019 li
219.753 325.795 li
219.753 326.062 219.968 326.276 220.222 326.276 cv
220.485 326.276 220.7 326.062 220.7 325.795 cv
220.7 284.019 li
227.135 284.019 li
226.947 288.775 227.122 319.927 227.162 326.491 cv
227.162 326.754 227.377 326.969 227.64 326.969 cv
227.894 326.969 228.108 326.754 228.108 326.491 cv
228.044 315.511 227.906 287.638 228.068 284.019 cv
233.419 284.019 li
233.306 286.151 233.257 294.275 233.407 326.35 cv
233.407 326.616 233.621 326.819 233.875 326.819 cv
233.887 326.819 li
234.139 326.819 234.353 326.604 234.353 326.35 cv
234.304 315.386 234.203 287.627 234.316 284.019 cv
247.299 284.019 li
247.299 325.795 li
247.299 326.062 247.513 326.276 247.779 326.276 cv
248.031 326.276 248.245 326.062 248.245 325.795 cv
248.245 284.019 li
253.898 284.019 li
253.898 283.073 li
201.143 283.073 li
f
135.241 281.9 mo
134.979 281.9 134.768 282.112 134.768 282.373 cv
134.768 301.438 li
134.768 301.699 134.979 301.911 135.241 301.911 cv
135.502 301.911 135.714 301.699 135.714 301.438 cv
135.714 282.373 li
135.714 282.112 135.502 281.9 135.241 281.9 cv
cp
f
125.229 281.9 mo
124.968 281.9 124.756 282.112 124.756 282.373 cv
124.756 300.429 li
124.756 300.691 124.968 300.903 125.229 300.903 cv
125.49 300.903 125.702 300.691 125.702 300.429 cv
125.702 282.373 li
125.702 282.112 125.49 281.9 125.229 281.9 cv
cp
f
246.178 130.645 mo
239.148 128.854 li
246.922 81.9282 li
253.38 85.209 li
252.916 88.4258 248.573 115.605 246.178 130.645 cv
cp
234.239 130.558 mo
225.419 83.0771 li
225.028 80.9946 li
230.014 79.5308 li
230.329 81.8525 231.817 91.0381 238.077 128.917 cv
234.239 130.558 li
cp
227.894 130.608 mo
219.818 84.2881 li
224.562 83.6699 li
232.966 128.892 li
227.894 130.608 li
cp
205.875 94.2554 mo
198.833 94.2554 li
198.833 85.4106 li
205.875 85.4106 li
205.875 94.2554 li
cp
205.875 101.549 mo
198.833 101.549 li
198.833 95.2021 li
205.875 95.2021 li
205.875 101.549 li
cp
197.875 94.2554 mo
192.436 94.2554 li
192.436 85.4106 li
197.875 85.4106 li
197.875 94.2554 li
cp
197.875 101.549 mo
192.436 101.549 li
192.436 95.2021 li
197.875 95.2021 li
197.875 101.549 li
cp
177.662 130.633 mo
164.513 89.5361 li
169.081 88.25 li
183.137 128.904 li
177.662 130.633 li
cp
169.687 130.659 mo
155.29 86.1431 li
161.902 84.4521 li
163.454 89.3477 li
163.454 89.3604 li
163.529 89.562 li
176.008 128.88 li
169.687 130.659 li
cp
160.917 128.841 mo
152.249 130.671 li
151.644 127.403 li
151.656 127.189 li
151.392 126.116 li
143.366 83.5176 li
153.586 81.7646 li
160.917 128.841 li
cp
142.545 130.57 mo
133.373 94.3062 li
133.348 94.1685 li
133.108 93.1714 131.934 88.0229 131.581 86.5215 cv
139.884 83.7451 li
150.47 126.33 li
150.609 127.05 li
142.545 130.57 li
cp
135.581 130.608 mo
126.824 92.0352 li
131.619 90.9756 li
132.426 94.4077 li
132.451 94.5083 li
132.464 94.5205 li
140.604 128.892 li
135.581 130.608 li
cp
246.769 80.7925 mo
246.63 80.73 246.479 80.73 246.34 80.7925 cv
246.214 80.8687 246.113 80.9946 246.088 81.1338 cv
238.606 126.306 li
235.728 108.867 230.972 79.9595 230.858 78.9258 cv
230.858 78.8242 230.822 78.7236 230.757 78.6348 cv
230.632 78.4834 230.43 78.4331 230.252 78.4834 cv
224.36 80.1997 li
224.121 80.2627 223.98 80.5034 224.02 80.7417 cv
224.384 82.7354 li
219.199 83.4175 li
219.074 83.4434 218.96 83.5059 218.884 83.6069 cv
218.808 83.7075 218.783 83.8457 218.795 83.9727 cv
221.573 99.8467 li
217.962 99.8467 li
217.962 87.6689 li
217.962 87.4175 217.748 87.2026 217.497 87.2026 cv
206.82 87.2026 li
206.82 84.9316 li
206.82 84.6665 206.606 84.4644 206.342 84.4644 cv
192.436 84.4644 li
192.436 80.7925 li
192.436 80.5273 192.236 80.3135 191.97 80.3135 cv
183.074 80.3135 li
182.822 80.3135 182.607 80.5273 182.607 80.7925 cv
182.607 124.488 li
169.825 87.5181 li
169.75 87.2778 169.497 87.1519 169.258 87.2148 cv
164.224 88.6284 li
162.671 83.7451 li
162.596 83.5059 162.343 83.3667 162.104 83.4292 cv
155.076 85.2207 li
154.445 81.146 li
154.419 81.0195 154.356 80.9053 154.255 80.8306 cv
154.142 80.7544 154.016 80.73 153.889 80.7544 cv
142.723 82.6729 li
142.595 82.6973 142.482 82.7617 142.42 82.875 cv
142.345 82.9756 142.318 83.1021 142.345 83.2275 cv
147.416 110.117 li
140.678 83.0269 li
140.64 82.8994 140.553 82.7861 140.438 82.7231 cv
140.325 82.6606 140.187 82.647 140.06 82.6851 cv
130.874 85.751 li
130.647 85.8271 130.509 86.0664 130.558 86.3066 cv
130.558 86.3066 130.975 88.124 131.43 90.0415 cv
126.724 91.0771 li
126.724 87.6689 li
126.724 87.4175 126.521 87.2026 126.256 87.2026 cv
122.963 87.2026 li
122.963 80.2383 li
122.963 79.9854 122.761 79.7715 122.496 79.7715 cv
115.833 79.7715 li
115.833 76.7676 li
115.833 76.5156 115.619 76.3013 115.354 76.3013 cv
106.37 76.3013 li
101.929 76.1494 100.111 76.1743 99.3291 76.2368 cv
99.3291 77.1836 li
100.125 77.1084 103.078 77.1465 105.878 77.2339 cv
105.878 133.068 li
105.878 133.333 106.093 133.535 106.358 133.535 cv
106.61 133.535 106.825 133.333 106.825 133.068 cv
106.825 77.2476 li
114.887 77.2476 li
114.887 133.068 li
114.887 133.333 115.101 133.535 115.354 133.535 cv
115.619 133.535 115.833 133.333 115.833 133.068 cv
115.833 80.7178 li
122.017 80.7178 li
122.017 131.226 li
122.017 131.491 122.231 131.707 122.496 131.707 cv
122.761 131.707 122.963 131.491 122.963 131.226 cv
122.963 88.1489 li
125.777 88.1489 li
125.777 133.068 li
125.777 133.333 125.991 133.535 126.256 133.535 cv
126.521 133.535 126.724 133.333 126.724 133.068 cv
126.724 95.8833 li
134.786 131.34 li
134.811 131.466 134.899 131.58 135.012 131.642 cv
135.241 131.707 li
135.391 131.68 li
141.31 129.649 li
141.334 129.637 li
141.776 131.353 li
141.801 131.479 141.902 131.592 142.015 131.655 cv
142.23 131.707 li
142.42 131.668 li
150.785 127.996 li
151.416 131.314 li
151.442 131.44 151.505 131.555 151.618 131.629 cv
151.694 131.68 151.782 131.707 151.883 131.707 cv
151.972 131.693 li
161.549 129.674 li
161.788 129.624 161.953 129.384 161.915 129.132 cv
156.073 91.6191 li
168.93 131.377 li
168.994 131.58 169.182 131.707 169.383 131.707 cv
169.509 131.68 li
176.387 129.763 li
176.905 131.377 li
176.966 131.58 177.144 131.707 177.346 131.707 cv
177.496 131.68 li
183.882 129.663 li
184.007 129.624 184.108 129.535 184.16 129.422 cv
184.222 129.308 184.222 129.169 184.185 129.056 cv
183.554 127.226 li
183.554 81.2598 li
191.489 81.2598 li
191.489 131.226 li
191.489 131.491 191.706 131.707 191.97 131.707 cv
192.236 131.707 192.436 131.491 192.436 131.226 cv
192.436 102.496 li
197.875 102.496 li
197.875 131.226 li
197.875 131.491 198.089 131.707 198.355 131.707 cv
198.619 131.707 198.833 131.491 198.833 131.226 cv
198.833 102.496 li
205.875 102.496 li
205.875 133.068 li
205.875 133.333 206.089 133.535 206.342 133.535 cv
206.606 133.535 206.82 133.333 206.82 133.068 cv
206.82 88.1489 li
217.016 88.1489 li
217.016 131.226 li
217.016 131.491 217.23 131.707 217.497 131.707 cv
217.748 131.707 217.962 131.491 217.962 131.226 cv
217.962 100.792 li
221.383 100.792 li
221.383 133.068 li
221.383 133.333 221.598 133.535 221.861 133.535 cv
222.127 133.535 222.329 133.333 222.329 133.068 cv
222.329 104.25 li
227.061 131.314 li
227.074 131.454 227.162 131.567 227.275 131.642 cv
227.514 131.707 li
227.667 131.68 li
233.143 129.826 li
233.419 131.314 li
233.444 131.454 233.533 131.58 233.661 131.642 cv
233.875 131.707 li
234.062 131.668 li
238.643 129.699 li
246.441 131.693 li
246.554 131.707 li
246.82 131.629 li
246.935 131.555 247.008 131.44 247.023 131.302 cv
248.447 122.419 252.523 96.9063 253.898 88.0229 cv
253.898 84.4019 li
246.769 80.7925 li
cp
f
153.039 85.5293 mo
144.981 87.2109 li
144.725 87.2642 144.561 87.5156 144.614 87.7705 cv
144.661 87.9951 144.858 88.1475 145.078 88.1475 cv
145.174 88.1377 li
153.23 86.4561 li
153.487 86.4028 153.651 86.1514 153.598 85.8965 cv
153.545 85.6401 153.292 85.4839 153.039 85.5293 cv
cp
f
139.449 88.1968 mo
132.978 89.9517 li
132.725 90.021 132.576 90.2803 132.643 90.5317 cv
132.701 90.7441 132.892 90.8818 133.1 90.8818 cv
133.223 90.8657 li
139.695 89.1113 li
139.947 89.0425 140.097 88.7822 140.029 88.5308 cv
139.96 88.2769 139.698 88.1265 139.449 88.1968 cv
cp
f
109.94 81.7339 mo
109.68 81.7339 109.468 81.9458 109.468 82.207 cv
109.468 127.3 li
109.468 127.561 109.68 127.773 109.94 127.773 cv
110.202 127.773 110.414 127.561 110.414 127.3 cv
110.414 82.207 li
110.414 81.9458 110.202 81.7339 109.94 81.7339 cv
cp
f
253.898 210.99 mo
253.898 211.937 li
251.274 211.937 li
251.274 260.442 li
250.328 260.442 li
250.328 217.44 li
240.662 217.44 li
240.662 260.442 li
239.716 260.442 li
239.716 216.959 li
239.716 216.708 239.93 216.494 240.185 216.494 cv
250.328 216.494 li
250.328 211.459 li
250.328 211.193 250.542 210.99 250.792 210.99 cv
253.898 210.99 li
cp
f
210.847 259.317 mo
210.505 257.879 li
202.291 223.017 li
201.268 218.411 li
205.987 217.514 li
215.515 257.526 li
210.847 259.317 li
cp
203.492 259.354 mo
193.168 213.187 li
198.897 212.013 li
200.196 217.906 li
200.171 218.159 li
209.485 257.676 li
203.492 259.354 li
cp
155.429 259.104 mo
148.022 217.327 li
153.586 216.139 li
154.305 220.594 159.617 249.778 160.917 256.895 cv
155.429 259.104 li
cp
145.448 258.498 mo
136.83 213.453 li
145.814 212.519 li
153.915 256.013 li
145.448 258.498 li
cp
113.929 259.051 mo
113.74 258.233 li
101.968 209.036 li
106.03 207.762 li
119.064 256.581 li
118.307 257.009 115.859 258.157 113.929 259.051 cv
cp
108.477 259.14 mo
99.519 222.145 li
103.682 220.252 li
112.705 258.02 li
108.477 259.14 li
cp
206.808 216.858 mo
206.747 216.607 206.518 216.441 206.253 216.506 cv
201.068 217.489 li
199.718 211.358 li
199.654 211.104 199.415 210.941 199.161 210.99 cv
192.512 212.354 li
192.436 212.393 li
192.436 208.102 li
192.436 207.849 192.236 207.634 191.97 207.634 cv
181.536 207.634 li
181.27 207.634 181.055 207.849 181.055 208.102 cv
181.055 215.104 li
174.167 215.104 li
173.913 215.104 173.699 215.306 173.699 215.572 cv
173.699 221.4 li
161.447 221.4 li
161.182 221.4 160.98 221.615 160.98 221.881 cv
160.98 251.95 li
158.331 237.415 154.508 216.304 154.445 215.572 cv
154.445 215.419 154.382 215.293 154.268 215.205 cv
154.154 215.118 154.002 215.079 153.877 215.104 cv
147.518 216.466 li
146.66 211.925 li
146.622 211.686 146.395 211.521 146.154 211.536 cv
136.224 212.555 li
136.085 212.58 135.972 212.645 135.884 212.745 cv
135.808 212.859 135.783 212.984 135.808 213.125 cv
136.944 219.119 li
128.25 219.119 li
127.985 219.119 127.77 219.32 127.77 219.584 cv
127.77 221.465 li
124.918 221.465 li
124.918 214.359 li
124.918 214.095 124.704 213.882 124.439 213.882 cv
119.594 213.882 li
119.342 213.882 119.127 214.095 119.127 214.359 cv
119.127 253.174 li
106.812 207.042 li
106.774 206.917 106.699 206.803 106.584 206.74 cv
106.471 206.688 106.333 206.675 106.206 206.715 cv
101.26 208.265 li
101.033 208.341 100.894 208.595 100.945 208.834 cv
103.456 219.32 li
99.3291 221.199 li
99.3291 225.375 li
107.682 259.835 li
107.708 259.949 107.783 260.062 107.896 260.125 cv
108.137 260.188 li
108.263 260.175 li
112.932 258.925 li
113.146 259.824 li
113.172 259.961 113.273 260.086 113.398 260.139 cv
113.601 260.188 li
113.802 260.151 li
116.743 258.8 118.294 258.069 119.127 257.615 cv
119.127 260.442 li
120.073 260.442 li
120.073 214.828 li
123.972 214.828 li
123.972 260.442 li
124.918 260.442 li
124.918 222.411 li
127.77 222.411 li
127.77 259.949 li
127.77 260.212 127.985 260.43 128.25 260.43 cv
128.516 260.43 128.716 260.212 128.716 259.949 cv
128.716 220.065 li
136.527 220.065 li
136.527 260.353 li
136.54 260.442 li
137.461 260.442 li
137.474 260.353 li
137.474 221.881 li
144.615 259.192 li
144.64 259.317 144.716 259.431 144.83 259.507 cv
145.083 259.57 li
145.208 259.544 li
154.091 256.945 li
154.596 259.848 li
154.621 259.986 154.71 260.099 154.835 260.175 cv
155.063 260.24 li
155.239 260.201 li
160.98 257.89 li
160.98 260.442 li
161.915 260.442 li
161.915 222.346 li
173.699 222.346 li
173.699 260.442 li
174.645 260.442 li
174.645 216.05 li
181.055 216.05 li
181.055 260.442 li
182.001 260.442 li
182.001 208.581 li
191.489 208.581 li
191.489 260.442 li
192.436 260.442 li
192.436 214.273 li
202.683 260.062 li
202.708 260.188 202.784 260.29 202.897 260.365 cv
203.136 260.43 li
203.277 260.403 li
209.699 258.598 li
210.052 260.062 li
210.076 260.188 210.165 260.3 210.291 260.365 cv
210.505 260.43 li
210.682 260.39 li
216.235 258.27 li
216.461 258.181 216.575 257.942 216.525 257.716 cv
206.808 216.858 li
cp
f
96.2817 393.615 mo
253.051 393.615 li
253.051 386.627 li
96.2817 386.627 li
96.2817 393.615 li
cp
.607843 .768627 .819608 rgb
f
99.3291 266.652 mo
256.097 266.652 li
256.097 259.661 li
99.3291 259.661 li
99.3291 266.652 li
cp
f
99.3291 331.789 mo
258.31 331.233 li
257.363 324.801 li
99.3291 324.801 li
99.3291 331.789 li
cp
f
99.3291 201.515 mo
256.102 201.515 li
256.102 194.523 li
99.3291 194.523 li
99.3291 201.515 li
cp
f
99.3291 136.375 mo
256.102 136.375 li
256.102 129.384 li
99.3291 129.384 li
99.3291 136.375 li
cp
f
626.809 423.246 mo
447.404 423.246 li
447.404 62.7105 li
626.809 62.7105 li
626.809 423.246 li
f
614.154 73.2548 mo
614.154 387.111 li
459.585 387.111 li
459.585 73.2548 li
614.154 73.2548 li
.74902 .854902 .878431 rgb
f
484.227 258.661 mo
478.435 208.417 li
479.875 207.899 li
485.994 258.042 li
484.227 258.661 li
cp
480.732 207.207 mo
480.72 207.053 480.644 206.928 480.519 206.852 cv
480.393 206.777 480.239 206.763 480.114 206.814 cv
478.398 207.434 li
478.398 204.946 li
478.398 204.683 478.185 204.469 477.918 204.469 cv
476.09 204.469 li
475.824 204.469 475.609 204.683 475.609 204.946 cv
475.609 207.623 li
467.079 207.623 li
467.079 205.994 li
467.079 205.743 466.866 205.528 466.614 205.528 cv
459.585 205.528 li
459.585 206.475 li
466.133 206.475 li
466.133 259.595 li
466.133 259.859 466.349 260.06 466.614 260.06 cv
466.866 260.06 467.079 259.859 467.079 259.595 cv
467.079 208.582 li
475.609 208.582 li
475.609 259.595 li
475.609 259.859 475.824 260.06 476.09 260.06 cv
476.341 260.06 476.555 259.859 476.555 259.595 cv
476.555 205.427 li
477.453 205.427 li
477.453 259.595 li
477.453 259.859 477.667 260.06 477.918 260.06 cv
478.185 260.06 478.398 259.859 478.398 259.595 cv
478.398 216.34 li
483.357 259.357 li
483.369 259.494 483.446 259.633 483.571 259.708 cv
483.825 259.773 li
483.977 259.745 li
486.664 258.811 li
486.879 258.738 487.004 258.524 486.979 258.309 cv
480.732 207.207 li
cp
.466667 .686275 .737255 rgb
f
496.29 258.71 mo
496.241 257.954 li
496.314 257.702 li
492.897 206.411 li
500.039 205.477 li
504.544 258.827 li
496.29 258.71 li
cp
487.964 258.625 mo
484.328 207.66 li
491.951 206.536 li
495.256 257.348 li
487.964 258.625 li
cp
505.527 259.114 mo
500.934 204.91 li
500.934 204.784 500.872 204.656 500.77 204.582 cv
500.67 204.493 500.544 204.469 500.403 204.48 cv
492.328 205.528 li
483.749 206.79 li
483.51 206.827 483.332 207.042 483.345 207.292 cv
487.055 259.215 li
487.065 259.342 487.131 259.469 487.231 259.555 cv
487.32 259.62 487.421 259.657 487.534 259.657 cv
487.611 259.644 li
495.319 258.309 li
495.368 259.204 li
495.396 259.457 495.595 259.644 495.838 259.657 cv
505.06 259.773 li
505.073 259.773 li
505.337 259.785 505.564 259.571 505.564 259.304 cv
505.527 259.114 li
cp
f
512.343 210.991 mo
507.915 210.991 li
507.654 210.991 507.441 211.204 507.441 211.465 cv
507.441 211.726 507.654 211.938 507.915 211.938 cv
512.343 211.938 li
512.605 211.938 512.816 211.726 512.816 211.465 cv
512.816 211.204 512.605 210.991 512.343 210.991 cv
cp
f
521.713 210.991 mo
516.608 210.991 li
516.346 210.991 516.134 211.204 516.134 211.465 cv
516.134 211.726 516.346 211.938 516.608 211.938 cv
521.713 211.938 li
521.976 211.938 522.188 211.726 522.188 211.465 cv
522.188 211.204 521.976 210.991 521.713 210.991 cv
cp
f
529.59 210.991 mo
524.006 210.991 li
523.743 210.991 523.531 211.204 523.531 211.465 cv
523.531 211.726 523.743 211.938 524.006 211.938 cv
529.59 211.938 li
529.852 211.938 530.063 211.726 530.063 211.465 cv
530.063 211.204 529.852 210.991 529.59 210.991 cv
cp
f
567.595 258.827 mo
558.875 258.827 li
558.875 211.938 li
567.595 211.938 li
567.595 258.827 li
cp
552.82 258.851 mo
550.245 257.525 li
550.017 257.4 549.727 257.489 549.601 257.727 cv
549.563 257.829 li
555.203 205.553 li
557.891 206.346 li
552.82 258.851 li
cp
548.517 258.71 mo
545.261 258.71 li
545.084 258.71 544.946 258.799 544.869 258.924 cv
551.09 207.319 li
551.09 207.292 li
551.09 204.505 li
554.269 205.299 li
548.517 258.71 li
cp
543.898 259.078 mo
540.429 258.75 li
547.431 206.637 li
550.106 207.583 li
543.898 259.078 li
cp
539.495 258.609 mo
531.798 256.946 li
538.006 209.755 li
545.678 211.81 li
539.495 258.609 li
cp
612.286 217.301 mo
612.286 207.256 li
612.286 207.004 612.071 206.79 611.82 206.79 cv
601.12 206.79 li
600.868 206.79 600.653 207.004 600.653 207.256 cv
600.653 212.113 li
589.574 212.113 li
589.574 209.148 li
589.574 208.897 589.36 208.683 589.108 208.683 cv
583.694 208.683 li
583.694 205.994 li
583.694 205.743 583.48 205.528 583.216 205.528 cv
568.074 205.528 li
567.808 205.528 567.595 205.743 567.595 205.994 cv
567.595 210.991 li
558.396 210.991 li
558.875 206.045 li
558.887 205.816 558.749 205.602 558.534 205.54 cv
554.927 204.493 li
554.914 204.493 li
554.9 204.493 li
550.736 203.433 li
550.599 203.406 550.446 203.433 550.333 203.522 cv
550.208 203.609 550.143 203.749 550.143 203.899 cv
550.143 206.587 li
547.203 205.553 li
547.064 205.501 546.915 205.528 546.798 205.589 cv
546.673 205.667 546.6 205.792 546.572 205.93 cv
545.904 210.891 li
537.728 208.694 li
537.603 208.656 537.463 208.683 537.351 208.756 cv
537.234 208.833 537.161 208.958 537.136 209.084 cv
531.746 250.08 li
531.746 204.946 li
531.746 204.683 531.531 204.469 531.269 204.469 cv
506.032 204.469 li
505.779 204.469 505.564 204.683 505.564 204.946 cv
505.564 259.304 li
505.564 259.571 505.779 259.773 506.032 259.773 cv
506.296 259.773 506.51 259.571 506.51 259.304 cv
506.51 205.427 li
514.008 205.427 li
514.008 259.595 li
514.008 259.859 514.223 260.06 514.486 260.06 cv
514.739 260.06 514.953 259.859 514.953 259.595 cv
514.953 205.427 li
522.396 205.427 li
522.396 259.595 li
522.396 259.859 522.611 260.06 522.877 260.06 cv
523.14 260.06 523.343 259.859 523.343 259.595 cv
523.343 205.427 li
530.801 205.427 li
530.801 259.595 li
530.801 259.859 531.014 260.06 531.269 260.06 cv
531.531 260.06 531.746 259.859 531.746 259.595 cv
531.746 257.892 li
539.797 259.644 li
539.847 259.644 li
544.263 260.06 li
544.314 260.06 li
544.542 260.06 544.756 259.885 544.781 259.644 cv
544.819 259.342 li
544.882 259.519 545.047 259.657 545.261 259.657 cv
548.933 259.657 li
549.172 259.657 549.387 259.469 549.411 259.228 cv
549.552 257.941 li
549.552 258.107 549.637 258.281 549.803 258.358 cv
553.006 260.011 li
553.224 260.06 li
553.45 260.011 li
553.588 259.935 553.677 259.796 553.689 259.633 cv
557.929 215.825 li
557.929 259.304 li
557.929 259.571 558.143 259.773 558.396 259.773 cv
568.074 259.773 li
568.338 259.773 568.552 259.571 568.552 259.304 cv
568.552 206.475 li
572.062 206.475 li
572.062 260.174 li
572.062 260.441 572.276 260.643 572.528 260.643 cv
572.794 260.643 573.009 260.441 573.009 260.174 cv
573.009 206.475 li
579.051 206.475 li
579.051 260.769 li
579.051 261.019 579.267 261.234 579.519 261.234 cv
579.783 261.234 579.997 261.019 579.997 260.769 cv
579.997 206.475 li
582.735 206.475 li
582.735 260.769 li
582.735 261.019 582.95 261.234 583.216 261.234 cv
583.48 261.234 583.694 261.019 583.694 260.769 cv
583.694 209.629 li
588.628 209.629 li
588.628 260.174 li
588.628 260.441 588.842 260.643 589.108 260.643 cv
589.36 260.643 589.574 260.441 589.574 260.174 cv
589.574 213.059 li
600.653 213.059 li
600.653 260.769 li
600.653 261.019 600.868 261.234 601.12 261.234 cv
601.386 261.234 601.601 261.019 601.601 260.769 cv
601.601 207.736 li
611.34 207.736 li
611.34 260.769 li
611.34 261.019 611.554 261.234 611.82 261.234 cv
612.071 261.234 612.286 261.019 612.286 260.769 cv
612.286 218.247 li
614.154 218.247 li
614.154 217.301 li
612.286 217.301 li
cp
f
610.344 215.199 mo
602.562 215.199 li
602.3 215.199 602.089 215.411 602.089 215.672 cv
602.089 215.933 602.3 216.145 602.562 216.145 cv
610.344 216.145 li
610.605 216.145 610.818 215.933 610.818 215.672 cv
610.818 215.411 610.605 215.199 610.344 215.199 cv
cp
f
598.722 231.192 mo
591.291 231.192 li
591.291 217.2 li
598.722 217.2 li
598.722 231.192 li
cp
599.202 216.253 mo
590.811 216.253 li
590.544 216.253 590.346 216.468 590.346 216.719 cv
590.346 231.658 li
590.346 231.924 590.544 232.139 590.811 232.139 cv
599.202 232.139 li
599.455 232.139 599.668 231.924 599.668 231.658 cv
599.668 216.719 li
599.668 216.468 599.455 216.253 599.202 216.253 cv
cp
f
462.765 229.931 mo
461.718 229.931 li
461.718 211.938 li
462.765 211.938 li
462.765 229.931 li
cp
463.245 210.991 mo
461.239 210.991 li
460.985 210.991 460.771 211.206 460.771 211.47 cv
460.771 230.409 li
460.771 230.675 460.985 230.877 461.239 230.877 cv
463.245 230.877 li
463.497 230.877 463.71 230.675 463.71 230.409 cv
463.71 211.47 li
463.71 211.206 463.497 210.991 463.245 210.991 cv
cp
f
500.846 384.581 mo
491.635 386.675 li
480.418 336.936 li
488.935 334.792 li
500.846 384.581 li
cp
479.66 386.651 mo
469.578 337.845 li
478.954 334.741 li
479.394 336.697 li
479.459 337 li
489.97 383.888 li
479.66 386.651 li
cp
533.262 333.733 mo
518.939 333.733 li
518.676 333.733 518.461 333.948 518.461 334.21 cv
518.461 341.807 li
505.806 341.807 li
505.806 335.84 li
505.806 335.573 505.592 335.36 505.337 335.36 cv
494.991 335.36 li
494.726 335.36 494.511 335.573 494.511 335.84 cv
494.511 354.047 li
489.742 334.097 li
489.718 333.971 489.642 333.871 489.528 333.806 cv
489.428 333.746 489.287 333.717 489.16 333.746 cv
480.215 336.015 li
479.762 334.021 li
479.736 333.882 479.648 333.782 479.534 333.705 cv
479.422 333.644 479.281 333.631 479.155 333.667 cv
469.502 336.872 li
469.502 334.122 li
469.502 333.858 469.287 333.657 469.023 333.657 cv
459.585 333.657 li
459.585 334.603 li
468.557 334.603 li
468.557 387.23 li
468.557 387.497 468.758 387.71 469.023 387.71 cv
469.287 387.71 469.502 387.497 469.502 387.23 cv
469.502 342.148 li
478.84 387.331 li
478.864 387.459 478.94 387.572 479.054 387.634 cv
479.309 387.71 li
479.422 387.699 li
490.247 384.795 li
490.814 387.346 li
490.852 387.459 490.928 387.572 491.029 387.634 cv
491.279 387.71 li
491.381 387.699 li
501.515 385.401 li
501.641 385.377 501.754 385.3 501.817 385.186 cv
501.88 385.086 501.904 384.96 501.88 384.835 cv
495.457 358.009 li
495.457 336.306 li
504.858 336.306 li
504.858 387.23 li
504.858 387.497 505.073 387.71 505.337 387.71 cv
505.592 387.71 505.806 387.497 505.806 387.23 cv
505.806 342.752 li
518.461 342.752 li
518.461 388.253 li
518.461 388.507 518.676 388.721 518.939 388.721 cv
519.192 388.721 519.406 388.507 519.406 388.253 cv
519.406 334.678 li
525.539 334.678 li
525.539 388.253 li
525.539 388.507 525.753 388.721 526.02 388.721 cv
526.27 388.721 526.484 388.507 526.484 388.253 cv
526.484 334.678 li
532.781 334.678 li
532.781 388.784 li
532.781 389.049 532.996 389.264 533.262 389.264 cv
533.525 389.264 533.728 389.049 533.728 388.784 cv
533.728 334.21 li
533.728 333.948 533.525 333.733 533.262 333.733 cv
cp
f
553.677 386.764 mo
544.149 386.764 li
544.149 333.114 li
553.677 333.114 li
553.677 386.764 li
540.303 387.031 mo
536.251 385.539 li
539.179 334.777 li
543.179 336.167 li
540.303 387.031 li
579.518 339.94 mo
567.076 339.94 li
567.076 335.84 li
567.076 335.573 566.861 335.36 566.598 335.36 cv
554.623 335.36 li
554.623 332.633 li
554.623 332.37 554.409 332.167 554.143 332.167 cv
543.684 332.167 li
543.418 332.167 543.203 332.37 543.203 332.633 cv
543.203 335.169 li
538.889 333.681 li
538.75 333.631 538.598 333.644 538.472 333.733 cv
538.346 333.806 538.27 333.948 538.27 334.097 cv
535.292 385.843 li
535.28 386.044 535.406 386.234 535.596 386.311 cv
540.579 388.139 li
540.731 388.165 li
540.832 388.165 540.921 388.139 540.995 388.09 cv
541.12 388.001 541.198 387.875 541.209 387.723 cv
543.203 352.519 li
543.203 387.23 li
543.203 387.497 543.418 387.71 543.684 387.71 cv
554.143 387.71 li
554.409 387.71 554.623 387.497 554.623 387.23 cv
554.623 336.306 li
566.131 336.306 li
566.131 387.23 li
566.131 387.497 566.345 387.71 566.598 387.71 cv
566.861 387.71 567.076 387.497 567.076 387.23 cv
567.076 340.899 li
573.485 340.899 li
573.485 387.699 li
573.485 387.95 573.7 388.165 573.966 388.165 cv
574.231 388.165 574.433 387.95 574.433 387.699 cv
574.433 340.899 li
579.051 340.899 li
579.051 387.977 li
579.051 388.228 579.267 388.443 579.518 388.443 cv
579.783 388.443 579.997 388.228 579.997 387.977 cv
579.997 340.419 li
579.997 340.156 579.783 339.94 579.518 339.94 cv
f
595.656 386.586 mo
591.264 384.341 li
610.494 345.088 li
613.572 347.698 li
595.656 386.586 li
cp
590.217 384.341 mo
588.931 386.955 li
585.336 384.091 li
608.439 336.52 li
612.375 339.12 li
590.217 384.341 li
cp
610.936 344.216 mo
613.41 339.156 li
613.511 338.943 613.446 338.679 613.245 338.55 cv
608.5 335.436 li
608.388 335.36 608.249 335.334 608.111 335.371 cv
607.983 335.408 607.869 335.497 607.82 335.625 cv
584.313 384.014 li
584.225 384.216 584.275 384.456 584.452 384.593 cv
588.805 388.064 li
588.894 388.128 588.994 388.165 589.108 388.165 cv
589.21 388.153 li
589.348 388.128 589.46 388.026 589.524 387.9 cv
590.848 385.2 li
595.668 387.661 li
595.883 387.71 li
596.035 387.686 li
596.161 387.648 596.263 387.545 596.312 387.432 cv
614.154 348.696 li
614.154 346.954 li
610.936 344.216 li
cp
f
562.927 381.164 mo
556.768 381.164 li
556.768 344.809 li
562.927 344.809 li
562.927 381.164 li
cp
563.392 343.864 mo
556.302 343.864 li
556.036 343.864 555.821 344.079 555.821 344.329 cv
555.821 381.641 li
555.821 381.908 556.036 382.108 556.302 382.108 cv
563.392 382.108 li
563.658 382.108 563.872 381.908 563.872 381.641 cv
563.872 344.329 li
563.872 344.079 563.658 343.864 563.392 343.864 cv
cp
f
551.745 381.164 mo
546.067 381.164 li
546.067 344.57 li
551.745 344.57 li
551.745 381.164 li
cp
552.226 343.625 mo
545.602 343.625 li
545.338 343.625 545.121 343.839 545.121 344.089 cv
545.121 381.641 li
545.121 381.908 545.338 382.108 545.602 382.108 cv
552.226 382.108 li
552.491 382.108 552.691 381.908 552.691 381.641 cv
552.691 344.089 li
552.691 343.839 552.491 343.625 552.226 343.625 cv
cp
f
516.921 166.29 mo
500.946 166.29 li
500.946 154.341 li
516.921 154.341 li
516.921 166.29 li
cp
561.397 151.603 mo
561.814 144.473 li
561.827 144.348 561.777 144.222 561.688 144.121 cv
561.6 144.032 561.475 143.97 561.35 143.97 cv
537.603 143.97 li
537.55 143.981 li
537.452 144.007 li
537.387 144.032 li
537.299 144.095 li
537.25 144.158 li
537.186 144.234 li
537.161 144.323 li
537.136 144.385 li
534.9 160.474 li
534.9 139.705 li
534.9 139.439 534.687 139.226 534.423 139.226 cv
517.389 139.226 li
517.135 139.226 516.921 139.439 516.921 139.705 cv
516.921 153.395 li
500.946 153.395 li
500.946 144.449 li
500.946 144.184 500.731 143.97 500.468 143.97 cv
481.704 143.97 li
481.704 138.934 li
481.704 138.669 481.489 138.455 481.237 138.455 cv
459.585 138.455 li
459.585 139.401 li
462.765 139.401 li
462.765 194.605 li
462.765 194.869 462.979 195.071 463.245 195.071 cv
463.497 195.071 463.71 194.869 463.71 194.605 cv
463.71 139.401 li
469.388 139.401 li
469.388 194.605 li
469.388 194.869 469.591 195.071 469.857 195.071 cv
470.121 195.071 470.335 194.869 470.335 194.605 cv
470.335 139.401 li
476.443 139.401 li
476.443 194.605 li
476.443 194.869 476.656 195.071 476.91 195.071 cv
477.174 195.071 477.389 194.869 477.389 194.605 cv
477.389 139.401 li
480.757 139.401 li
480.757 194.327 li
480.757 194.593 480.972 194.807 481.237 194.807 cv
481.489 194.807 481.704 194.593 481.704 194.327 cv
481.704 144.928 li
490.058 144.928 li
490.058 194.881 li
490.058 195.135 490.26 195.349 490.524 195.349 cv
490.79 195.349 491.004 195.135 491.004 194.881 cv
491.004 144.928 li
500 144.928 li
500 195.488 li
500 195.754 500.201 195.956 500.468 195.956 cv
500.731 195.956 500.946 195.754 500.946 195.488 cv
500.946 167.236 li
516.921 167.236 li
516.921 194.048 li
516.921 194.314 517.135 194.529 517.389 194.529 cv
517.651 194.529 517.867 194.314 517.867 194.048 cv
517.867 140.171 li
525.539 140.171 li
525.539 194.048 li
525.539 194.314 525.753 194.529 526.02 194.529 cv
526.27 194.529 526.484 194.314 526.484 194.048 cv
526.484 140.171 li
533.954 140.171 li
533.954 194.048 li
533.954 194.314 534.17 194.529 534.423 194.529 cv
534.687 194.529 534.9 194.314 534.9 194.048 cv
534.9 167.337 li
538.018 144.928 li
545.689 144.928 li
541.311 195.512 li
541.298 195.766 541.489 196.005 541.739 196.018 cv
541.791 196.03 li
542.03 196.03 542.233 195.842 542.257 195.588 cv
546.637 144.928 li
553.702 144.928 li
550.143 195.451 li
550.131 195.715 550.32 195.941 550.585 195.956 cv
550.624 195.956 li
550.863 195.956 551.077 195.766 551.09 195.527 cv
554.648 144.928 li
560.844 144.928 li
560.414 152.082 li
557.929 194.302 li
557.916 194.553 558.105 194.78 558.369 194.795 cv
558.396 194.807 li
558.647 194.807 558.862 194.605 558.875 194.351 cv
560.414 168.12 li
560.414 194.605 li
560.414 194.869 560.63 195.071 560.893 195.071 cv
561.158 195.071 561.361 194.869 561.361 194.605 cv
561.361 152.549 li
565.083 152.549 li
565.083 194.327 li
565.083 194.593 565.284 194.807 565.551 194.807 cv
565.814 194.807 566.029 194.593 566.029 194.327 cv
566.029 152.549 li
573.485 152.549 li
573.485 194.605 li
573.485 194.869 573.7 195.071 573.966 195.071 cv
574.23 195.071 574.434 194.869 574.434 194.605 cv
574.434 152.549 li
580.01 152.549 li
580.01 194.327 li
580.01 194.593 580.224 194.807 580.478 194.807 cv
580.741 194.807 580.956 194.593 580.956 194.327 cv
580.956 152.549 li
587.391 152.549 li
587.202 157.307 587.378 188.46 587.418 195.021 cv
587.418 195.286 587.632 195.5 587.896 195.5 cv
588.149 195.5 588.364 195.286 588.364 195.021 cv
588.3 184.043 588.162 156.171 588.324 152.549 cv
593.675 152.549 li
593.562 154.682 593.513 162.808 593.663 194.881 cv
593.663 195.148 593.877 195.349 594.13 195.349 cv
594.144 195.349 li
594.394 195.349 594.608 195.135 594.608 194.881 cv
594.56 183.917 594.458 156.159 594.572 152.549 cv
607.555 152.549 li
607.555 194.327 li
607.555 194.593 607.769 194.807 608.035 194.807 cv
608.286 194.807 608.5 194.593 608.5 194.327 cv
608.5 152.549 li
614.154 152.549 li
614.154 151.603 li
561.397 151.603 li
cp
f
495.497 150.43 mo
495.236 150.43 495.023 150.642 495.023 150.903 cv
495.023 169.968 li
495.023 170.229 495.236 170.441 495.497 170.441 cv
495.758 170.441 495.97 170.229 495.97 169.968 cv
495.97 150.903 li
495.97 150.642 495.758 150.43 495.497 150.43 cv
cp
f
485.483 150.43 mo
485.223 150.43 485.012 150.642 485.012 150.903 cv
485.012 168.96 li
485.012 169.221 485.223 169.433 485.483 169.433 cv
485.745 169.433 485.957 169.221 485.957 168.96 cv
485.957 150.903 li
485.957 150.642 485.745 150.43 485.483 150.43 cv
cp
f
606.434 324.902 mo
599.404 323.111 li
607.178 276.186 li
613.636 279.466 li
613.171 282.681 608.828 309.862 606.434 324.902 cv
594.496 324.813 mo
585.675 277.333 li
585.284 275.252 li
590.269 273.789 li
590.585 276.109 592.072 285.294 598.332 323.172 cv
594.496 324.813 li
588.149 324.866 mo
580.074 278.543 li
584.816 277.925 li
593.222 323.147 li
588.149 324.866 li
566.131 288.513 mo
559.089 288.513 li
559.089 279.668 li
566.131 279.668 li
566.131 288.513 li
566.131 295.805 mo
559.089 295.805 li
559.089 289.459 li
566.131 289.459 li
566.131 295.805 li
558.13 288.513 mo
552.691 288.513 li
552.691 279.668 li
558.13 279.668 li
558.13 288.513 li
558.13 295.805 mo
552.691 295.805 li
552.691 289.459 li
558.13 289.459 li
558.13 295.805 li
537.917 324.891 mo
524.769 283.794 li
529.337 282.507 li
543.393 323.161 li
537.917 324.891 li
529.942 324.914 mo
515.546 280.4 li
522.156 278.709 li
523.709 283.604 li
523.709 283.616 li
523.786 283.818 li
536.265 323.136 li
529.942 324.914 li
521.174 323.099 mo
512.504 324.927 li
511.9 321.659 li
511.912 321.444 li
511.647 320.372 li
503.622 277.776 li
513.843 276.021 li
521.174 323.099 li
502.802 324.826 mo
493.629 288.562 li
493.604 288.424 li
493.363 287.428 492.189 282.281 491.837 280.776 cv
500.14 278.002 li
510.725 320.588 li
510.865 321.307 li
502.802 324.826 li
495.838 324.866 mo
487.079 286.291 li
491.874 285.232 li
492.683 288.664 li
492.706 288.764 li
492.72 288.776 li
500.859 323.147 li
495.838 324.866 li
607.024 275.049 mo
606.886 274.986 606.733 274.986 606.596 275.049 cv
606.471 275.125 606.369 275.252 606.344 275.389 cv
598.862 320.563 li
595.983 303.124 591.227 274.217 591.114 273.182 cv
591.114 273.081 591.076 272.979 591.014 272.891 cv
590.888 272.74 590.686 272.689 590.508 272.74 cv
584.616 274.456 li
584.377 274.519 584.236 274.758 584.275 274.998 cv
584.64 276.992 li
579.455 277.674 li
579.329 277.698 579.217 277.763 579.139 277.864 cv
579.063 277.964 579.038 278.103 579.051 278.228 cv
581.829 294.102 li
578.218 294.102 li
578.218 281.925 li
578.218 281.674 578.003 281.459 577.752 281.459 cv
567.076 281.459 li
567.076 279.187 li
567.076 278.924 566.861 278.722 566.598 278.722 cv
552.691 278.722 li
552.691 275.049 li
552.691 274.784 552.491 274.569 552.226 274.569 cv
543.329 274.569 li
543.078 274.569 542.863 274.784 542.863 275.049 cv
542.863 318.744 li
530.081 281.775 li
530.006 281.534 529.753 281.409 529.514 281.472 cv
524.478 282.884 li
522.926 278.002 li
522.853 277.763 522.599 277.623 522.359 277.687 cv
515.331 279.478 li
514.7 275.403 li
514.675 275.276 514.611 275.164 514.509 275.086 cv
514.397 275.01 514.271 274.986 514.144 275.01 cv
502.978 276.93 li
502.851 276.955 502.737 277.019 502.676 277.132 cv
502.601 277.233 502.574 277.358 502.601 277.484 cv
507.671 304.374 li
500.934 277.283 li
500.897 277.157 500.809 277.043 500.694 276.978 cv
500.581 276.917 500.442 276.903 500.315 276.942 cv
491.13 280.008 li
490.904 280.085 490.766 280.323 490.814 280.562 cv
490.814 280.562 491.232 282.381 491.685 284.298 cv
486.979 285.334 li
486.979 281.925 li
486.979 281.674 486.778 281.459 486.512 281.459 cv
483.22 281.459 li
483.22 274.495 li
483.22 274.242 483.018 274.027 482.751 274.027 cv
476.09 274.027 li
476.09 271.025 li
476.09 270.772 475.876 270.557 475.609 270.557 cv
466.627 270.557 li
462.185 270.406 460.366 270.431 459.585 270.493 cv
459.585 271.439 li
460.381 271.365 463.334 271.403 466.133 271.491 cv
466.133 327.325 li
466.133 327.589 466.349 327.791 466.614 327.791 cv
466.866 327.791 467.079 327.589 467.079 327.325 cv
467.079 271.503 li
475.144 271.503 li
475.144 327.325 li
475.144 327.589 475.356 327.791 475.609 327.791 cv
475.876 327.791 476.09 327.589 476.09 327.325 cv
476.09 274.973 li
482.273 274.973 li
482.273 325.481 li
482.273 325.747 482.487 325.962 482.751 325.962 cv
483.018 325.962 483.22 325.747 483.22 325.481 cv
483.22 282.406 li
486.033 282.406 li
486.033 327.325 li
486.033 327.589 486.248 327.791 486.512 327.791 cv
486.778 327.791 486.979 327.589 486.979 327.325 cv
486.979 290.139 li
495.04 325.597 li
495.065 325.723 495.154 325.836 495.268 325.897 cv
495.497 325.962 li
495.648 325.938 li
501.565 323.905 li
501.59 323.892 li
502.033 325.61 li
502.057 325.736 502.158 325.849 502.272 325.913 cv
502.486 325.962 li
502.676 325.925 li
511.04 322.252 li
511.67 325.57 li
511.698 325.697 511.76 325.812 511.873 325.886 cv
511.95 325.938 512.039 325.962 512.14 325.962 cv
512.229 325.95 li
521.806 323.932 li
522.045 323.88 522.208 323.641 522.17 323.388 cv
516.328 285.875 li
529.185 325.635 li
529.25 325.836 529.438 325.962 529.639 325.962 cv
529.766 325.938 li
536.643 324.02 li
537.161 325.635 li
537.222 325.836 537.4 325.962 537.602 325.962 cv
537.751 325.938 li
544.138 323.918 li
544.263 323.88 544.364 323.792 544.416 323.677 cv
544.478 323.564 544.478 323.427 544.44 323.313 cv
543.809 321.482 li
543.809 275.515 li
551.745 275.515 li
551.745 325.481 li
551.745 325.747 551.962 325.962 552.226 325.962 cv
552.491 325.962 552.691 325.747 552.691 325.481 cv
552.691 296.75 li
558.13 296.75 li
558.13 325.481 li
558.13 325.747 558.345 325.962 558.61 325.962 cv
558.875 325.962 559.089 325.747 559.089 325.481 cv
559.089 296.75 li
566.131 296.75 li
566.131 327.325 li
566.131 327.589 566.345 327.791 566.598 327.791 cv
566.861 327.791 567.076 327.589 567.076 327.325 cv
567.076 282.406 li
577.272 282.406 li
577.272 325.481 li
577.272 325.747 577.486 325.962 577.752 325.962 cv
578.003 325.962 578.218 325.747 578.218 325.481 cv
578.218 295.047 li
581.638 295.047 li
581.638 327.325 li
581.638 327.589 581.852 327.791 582.116 327.791 cv
582.383 327.791 582.586 327.589 582.586 327.325 cv
582.586 298.505 li
587.316 325.57 li
587.33 325.71 587.418 325.824 587.53 325.897 cv
587.769 325.962 li
587.923 325.938 li
593.398 324.083 li
593.675 325.57 li
593.699 325.71 593.788 325.836 593.916 325.897 cv
594.13 325.962 li
594.318 325.925 li
598.898 323.956 li
606.697 325.95 li
606.81 325.962 li
607.076 325.886 li
607.19 325.812 607.264 325.697 607.279 325.558 cv
608.703 316.676 612.779 291.162 614.154 282.281 cv
614.154 278.658 li
607.024 275.049 li
f
513.295 279.787 mo
505.236 281.466 li
504.979 281.521 504.818 281.773 504.869 282.026 cv
504.917 282.251 505.113 282.404 505.333 282.404 cv
505.428 282.393 li
513.487 280.713 li
513.744 280.658 513.905 280.408 513.854 280.153 cv
513.8 279.897 513.546 279.74 513.295 279.787 cv
cp
f
499.703 282.453 mo
493.232 284.208 li
492.98 284.277 492.831 284.538 492.899 284.79 cv
492.956 285.001 493.148 285.139 493.354 285.139 cv
493.478 285.122 li
499.95 283.367 li
500.204 283.298 500.352 283.04 500.285 282.788 cv
500.217 282.534 499.953 282.384 499.703 282.453 cv
cp
f
470.197 275.991 mo
469.936 275.991 469.724 276.203 469.724 276.463 cv
469.724 321.556 li
469.724 321.817 469.936 322.029 470.197 322.029 cv
470.459 322.029 470.671 321.817 470.671 321.556 cv
470.671 276.463 li
470.671 276.203 470.459 275.991 470.197 275.991 cv
cp
f
613.129 81.0278 mo
613.129 81.9741 li
610.507 81.9741 li
610.507 130.479 li
609.561 130.479 li
609.561 87.4761 li
599.895 87.4761 li
599.895 130.479 li
598.949 130.479 li
598.949 86.9971 li
598.949 86.7446 599.164 86.5298 599.414 86.5298 cv
609.561 86.5298 li
609.561 81.4946 li
609.561 81.23 609.775 81.0278 610.026 81.0278 cv
613.129 81.0278 li
cp
f
570.078 129.354 mo
569.737 127.917 li
561.523 93.0527 li
560.501 88.4473 li
565.221 87.5513 li
574.746 127.562 li
570.078 129.354 li
cp
562.722 129.392 mo
552.4 83.2236 li
558.128 82.0513 li
559.429 87.9429 li
559.405 88.1953 li
568.715 127.714 li
562.722 129.392 li
cp
514.66 129.14 mo
507.254 87.3628 li
512.816 86.1763 li
513.537 90.6309 518.851 119.815 520.148 126.932 cv
514.66 129.14 li
cp
504.68 128.534 mo
496.062 83.4888 li
505.046 82.5542 li
513.147 126.049 li
504.68 128.534 li
cp
473.16 129.089 mo
472.972 128.27 li
461.199 79.0723 li
465.261 77.7983 li
478.296 126.616 li
477.538 127.045 475.091 128.193 473.16 129.089 cv
cp
467.709 129.177 mo
458.75 92.1821 li
462.915 90.2891 li
471.938 128.055 li
467.709 129.177 li
cp
566.041 86.8955 mo
565.977 86.6431 565.751 86.4795 565.484 86.542 cv
560.298 87.5269 li
558.948 81.3936 li
558.887 81.1416 558.646 80.9775 558.395 81.0278 cv
551.745 82.3906 li
551.669 82.4292 li
551.669 78.1382 li
551.669 77.8853 551.467 77.6709 551.203 77.6709 cv
540.767 77.6709 li
540.503 77.6709 540.288 77.8853 540.288 78.1382 cv
540.288 85.1406 li
533.397 85.1406 li
533.146 85.1406 532.932 85.3433 532.932 85.6079 cv
532.932 91.438 li
520.679 91.438 li
520.415 91.438 520.213 91.6514 520.213 91.9165 cv
520.213 121.986 li
517.563 107.45 513.738 86.3403 513.677 85.6079 cv
513.677 85.4565 513.612 85.3306 513.5 85.2422 cv
513.387 85.1543 513.232 85.1162 513.107 85.1406 cv
506.749 86.5044 li
505.892 81.9619 li
505.853 81.7212 505.626 81.5571 505.387 81.5713 cv
495.455 82.5933 li
495.317 82.6177 495.204 82.6816 495.116 82.7827 cv
495.038 82.896 495.014 83.0215 495.038 83.1611 cv
496.175 89.1543 li
487.482 89.1543 li
487.216 89.1543 487.002 89.3564 487.002 89.6216 cv
487.002 91.5005 li
484.151 91.5005 li
484.151 84.397 li
484.151 84.1318 483.937 83.9175 483.671 83.9175 cv
478.825 83.9175 li
478.574 83.9175 478.359 84.1318 478.359 84.397 cv
478.359 123.21 li
466.044 77.0781 li
466.006 76.9531 465.932 76.8398 465.816 76.7754 cv
465.702 76.7251 465.563 76.7129 465.438 76.751 cv
460.492 78.3022 li
460.266 78.3789 460.125 78.6313 460.178 78.8701 cv
462.688 89.3564 li
458.561 91.2354 li
458.561 95.4126 li
466.916 129.872 li
466.939 129.985 467.016 130.099 467.129 130.162 cv
467.368 130.225 li
467.494 130.213 li
472.164 128.963 li
472.378 129.859 li
472.403 129.999 472.505 130.124 472.63 130.174 cv
472.832 130.225 li
473.033 130.187 li
475.974 128.838 477.527 128.106 478.359 127.651 cv
478.359 130.479 li
479.305 130.479 li
479.305 84.8638 li
483.205 84.8638 li
483.205 130.479 li
484.151 130.479 li
484.151 92.4473 li
487.002 92.4473 li
487.002 129.985 li
487.002 130.25 487.216 130.465 487.482 130.465 cv
487.746 130.465 487.949 130.25 487.949 129.985 cv
487.949 90.1011 li
495.758 90.1011 li
495.758 130.389 li
495.771 130.479 li
496.692 130.479 li
496.705 130.389 li
496.705 91.9165 li
503.846 129.229 li
503.871 129.354 503.948 129.469 504.061 129.544 cv
504.315 129.606 li
504.44 129.582 li
513.321 126.982 li
513.827 129.884 li
513.852 130.023 513.94 130.137 514.066 130.213 cv
514.296 130.276 li
514.471 130.237 li
520.213 127.929 li
520.213 130.479 li
521.146 130.479 li
521.146 92.3838 li
532.932 92.3838 li
532.932 130.479 li
533.878 130.479 li
533.878 86.0874 li
540.288 86.0874 li
540.288 130.479 li
541.234 130.479 li
541.234 78.6177 li
550.723 78.6177 li
550.723 130.479 li
551.669 130.479 li
551.669 84.3091 li
561.912 130.099 li
561.94 130.225 562.015 130.326 562.127 130.401 cv
562.369 130.465 li
562.507 130.439 li
568.929 128.635 li
569.282 130.099 li
569.31 130.225 569.398 130.338 569.523 130.401 cv
569.737 130.465 li
569.913 130.427 li
575.466 128.307 li
575.692 128.219 575.808 127.979 575.756 127.752 cv
566.041 86.8955 li
cp
f
615.177 393.614 mo
458.407 393.614 li
458.407 386.626 li
615.177 386.626 li
615.177 393.614 li
cp
.607843 .768627 .819608 rgb
f
615.09 266.651 mo
458.324 266.651 li
458.324 259.66 li
615.09 259.66 li
615.09 266.651 li
cp
f
616.042 331.788 mo
457.061 331.232 li
458.007 324.798 li
616.042 324.798 li
616.042 331.788 li
f
615.096 201.514 mo
458.324 201.514 li
458.324 194.522 li
615.096 194.522 li
615.096 201.514 li
cp
f
615.096 136.374 mo
458.324 136.374 li
458.324 129.382 li
615.096 129.382 li
615.096 136.374 li
cp
f
446.673 423.246 mo
267.269 423.246 li
267.269 62.7104 li
446.673 62.7104 li
446.673 423.246 li
cp
f
435.363 73.2578 mo
435.363 387.115 li
280.796 387.115 li
280.796 73.2578 li
435.363 73.2578 li
cp
.74902 .854902 .878431 rgb
f
437.564 393.614 mo
280.796 393.614 li
280.796 386.626 li
437.564 386.626 li
437.564 393.614 li
cp
.607843 .768627 .819608 rgb
f
436.463 201.514 mo
279.691 201.514 li
279.691 194.522 li
436.463 194.522 li
436.463 201.514 li
cp
f
437.2 266.651 mo
280.431 266.651 li
280.431 259.66 li
437.2 259.66 li
437.2 266.651 li
cp
f
438.305 331.788 mo
279.324 331.232 li
280.27 324.798 li
438.305 324.798 li
438.305 331.788 li
cp
f
436.097 136.374 mo
279.324 136.374 li
279.324 129.382 li
436.097 129.382 li
436.097 136.374 li
cp
f
305.438 128.864 mo
299.646 78.6201 li
301.085 78.1021 li
307.204 128.246 li
305.438 128.864 li
cp
301.943 77.4092 mo
301.93 77.2573 301.854 77.1309 301.728 77.0552 cv
301.603 76.98 301.449 76.9668 301.324 77.0176 cv
299.609 77.6362 li
299.609 75.1504 li
299.609 74.8853 299.395 74.6709 299.128 74.6709 cv
297.3 74.6709 li
297.033 74.6709 296.819 74.8853 296.819 75.1504 cv
296.819 77.8252 li
288.289 77.8252 li
288.289 76.1978 li
288.289 75.9448 288.074 75.731 287.824 75.731 cv
280.796 75.731 li
280.796 76.6772 li
287.344 76.6772 li
287.344 129.798 li
287.344 130.063 287.558 130.266 287.824 130.266 cv
288.074 130.266 288.289 130.063 288.289 129.798 cv
288.289 78.7842 li
296.819 78.7842 li
296.819 129.798 li
296.819 130.063 297.033 130.266 297.3 130.266 cv
297.551 130.266 297.766 130.063 297.766 129.798 cv
297.766 75.6299 li
298.662 75.6299 li
298.662 129.798 li
298.662 130.063 298.876 130.266 299.128 130.266 cv
299.395 130.266 299.609 130.063 299.609 129.798 cv
299.609 86.5439 li
304.567 129.559 li
304.579 129.698 304.657 129.836 304.782 129.912 cv
305.035 129.975 li
305.185 129.95 li
307.874 129.016 li
308.089 128.94 308.215 128.726 308.189 128.511 cv
301.943 77.4092 li
cp
.466667 .686275 .737255 rgb
f
317.501 128.915 mo
317.451 128.158 li
317.524 127.906 li
314.106 76.6143 li
321.249 75.6802 li
325.754 129.029 li
317.501 128.915 li
cp
309.173 128.826 mo
305.538 77.8628 li
313.16 76.7397 li
316.465 127.552 li
309.173 128.826 li
cp
326.737 129.319 mo
322.144 75.1128 li
322.144 74.9863 322.082 74.8599 321.98 74.7837 cv
321.879 74.6958 321.754 74.6709 321.613 74.6831 cv
313.538 75.731 li
304.959 76.9922 li
304.72 77.0308 304.543 77.2451 304.555 77.4971 cv
308.263 129.419 li
308.276 129.545 308.341 129.672 308.441 129.76 cv
308.529 129.823 308.632 129.861 308.743 129.861 cv
308.821 129.849 li
316.529 128.511 li
316.579 129.407 li
316.606 129.659 316.805 129.849 317.046 129.861 cv
326.269 129.975 li
326.283 129.975 li
326.547 129.987 326.774 129.773 326.774 129.508 cv
326.737 129.319 li
cp
f
333.553 81.1958 mo
329.125 81.1958 li
328.863 81.1958 328.652 81.4082 328.652 81.6694 cv
328.652 81.9302 328.863 82.1421 329.125 82.1421 cv
333.553 82.1421 li
333.814 82.1421 334.027 81.9302 334.027 81.6694 cv
334.027 81.4082 333.814 81.1958 333.553 81.1958 cv
cp
f
342.924 81.1958 mo
337.817 81.1958 li
337.557 81.1958 337.345 81.4082 337.345 81.6694 cv
337.345 81.9302 337.557 82.1421 337.817 82.1421 cv
342.924 82.1421 li
343.185 82.1421 343.396 81.9302 343.396 81.6694 cv
343.396 81.4082 343.185 81.1958 342.924 81.1958 cv
cp
f
350.8 81.1958 mo
345.215 81.1958 li
344.954 81.1958 344.742 81.4082 344.742 81.6694 cv
344.742 81.9302 344.954 82.1421 345.215 82.1421 cv
350.8 82.1421 li
351.061 82.1421 351.273 81.9302 351.273 81.6694 cv
351.273 81.4082 351.061 81.1958 350.8 81.1958 cv
cp
f
388.803 129.029 mo
380.084 129.029 li
380.084 82.1406 li
388.803 82.1406 li
388.803 129.029 li
cp
374.028 129.054 mo
371.453 127.729 li
371.228 127.602 370.937 127.691 370.812 127.931 cv
370.773 128.032 li
376.413 75.7554 li
379.101 76.5503 li
374.028 129.054 li
cp
369.727 128.915 mo
366.471 128.915 li
366.293 128.915 366.155 129.003 366.079 129.129 cv
372.299 77.5225 li
372.299 77.4971 li
372.299 74.7085 li
375.479 75.5029 li
369.727 128.915 li
cp
365.108 129.281 mo
361.64 128.953 li
368.641 76.8408 li
371.316 77.7871 li
365.108 129.281 li
cp
360.704 128.813 mo
353.009 127.148 li
359.216 79.958 li
366.888 82.0137 li
360.704 128.813 li
cp
433.496 87.5034 mo
433.496 77.4595 li
433.496 77.2065 433.281 76.9922 433.03 76.9922 cv
422.33 76.9922 li
422.078 76.9922 421.863 77.2065 421.863 77.4595 cv
421.863 82.3179 li
410.784 82.3179 li
410.784 79.3521 li
410.784 79.0991 410.569 78.8848 410.319 78.8848 cv
404.904 78.8848 li
404.904 76.1978 li
404.904 75.9448 404.689 75.731 404.426 75.731 cv
389.283 75.731 li
389.018 75.731 388.803 75.9448 388.803 76.1978 cv
388.803 81.1938 li
379.606 81.1938 li
380.084 76.248 li
380.097 76.0205 379.959 75.8062 379.745 75.7432 cv
376.137 74.6958 li
376.125 74.6958 li
376.109 74.6958 li
371.947 73.6357 li
371.809 73.6108 371.656 73.6357 371.543 73.7241 cv
371.417 73.8125 371.354 73.9512 371.354 74.103 cv
371.354 76.7905 li
368.412 75.7554 li
368.275 75.7056 368.125 75.731 368.009 75.7935 cv
367.884 75.8696 367.809 75.9951 367.782 76.1343 cv
367.114 81.0933 li
358.937 78.8979 li
358.812 78.8599 358.673 78.8848 358.56 78.9609 cv
358.444 79.0366 358.37 79.1626 358.346 79.2886 cv
352.957 120.284 li
352.957 75.1504 li
352.957 74.8853 352.742 74.6709 352.479 74.6709 cv
327.242 74.6709 li
326.988 74.6709 326.774 74.8853 326.774 75.1504 cv
326.774 129.508 li
326.774 129.773 326.988 129.975 327.242 129.975 cv
327.506 129.975 327.721 129.773 327.721 129.508 cv
327.721 75.6299 li
335.218 75.6299 li
335.218 129.798 li
335.218 130.063 335.431 130.266 335.695 130.266 cv
335.948 130.266 336.164 130.063 336.164 129.798 cv
336.164 75.6299 li
343.606 75.6299 li
343.606 129.798 li
343.606 130.063 343.82 130.266 344.087 130.266 cv
344.351 130.266 344.552 130.063 344.552 129.798 cv
344.552 75.6299 li
352.01 75.6299 li
352.01 129.798 li
352.01 130.063 352.224 130.266 352.479 130.266 cv
352.742 130.266 352.957 130.063 352.957 129.798 cv
352.957 128.094 li
361.007 129.849 li
361.057 129.849 li
365.474 130.266 li
365.525 130.266 li
365.751 130.266 365.965 130.088 365.99 129.849 cv
366.03 129.545 li
366.093 129.723 366.256 129.861 366.471 129.861 cv
370.143 129.861 li
370.382 129.861 370.596 129.672 370.621 129.433 cv
370.762 128.146 li
370.762 128.309 370.848 128.486 371.013 128.562 cv
374.217 130.215 li
374.434 130.266 li
374.661 130.215 li
374.798 130.139 374.887 130 374.9 129.836 cv
379.138 86.0269 li
379.138 129.508 li
379.138 129.773 379.354 129.975 379.606 129.975 cv
389.283 129.975 li
389.548 129.975 389.762 129.773 389.762 129.508 cv
389.762 76.6772 li
393.271 76.6772 li
393.271 130.378 li
393.271 130.644 393.486 130.845 393.736 130.845 cv
394.004 130.845 394.217 130.644 394.217 130.378 cv
394.217 76.6772 li
400.262 76.6772 li
400.262 130.972 li
400.262 131.224 400.475 131.438 400.729 131.438 cv
400.992 131.438 401.207 131.224 401.207 130.972 cv
401.207 76.6772 li
403.945 76.6772 li
403.945 130.972 li
403.945 131.224 404.159 131.438 404.426 131.438 cv
404.689 131.438 404.904 131.224 404.904 130.972 cv
404.904 79.8315 li
409.838 79.8315 li
409.838 130.378 li
409.838 130.644 410.053 130.845 410.319 130.845 cv
410.569 130.845 410.784 130.644 410.784 130.378 cv
410.784 83.2637 li
421.863 83.2637 li
421.863 130.972 li
421.863 131.224 422.078 131.438 422.33 131.438 cv
422.597 131.438 422.811 131.224 422.811 130.972 cv
422.811 77.9385 li
432.55 77.9385 li
432.55 130.972 li
432.55 131.224 432.764 131.438 433.03 131.438 cv
433.281 131.438 433.496 131.224 433.496 130.972 cv
433.496 88.4492 li
435.363 88.4492 li
435.363 87.5034 li
433.496 87.5034 li
cp
f
431.555 85.4019 mo
423.771 85.4019 li
423.511 85.4019 423.299 85.6143 423.299 85.8755 cv
423.299 86.1367 423.511 86.3491 423.771 86.3491 cv
431.555 86.3491 li
431.815 86.3491 432.027 86.1367 432.027 85.8755 cv
432.027 85.6143 431.815 85.4019 431.555 85.4019 cv
cp
f
419.932 101.395 mo
412.502 101.395 li
412.502 87.4019 li
419.932 87.4019 li
419.932 101.395 li
cp
420.413 86.4561 mo
412.021 86.4561 li
411.754 86.4561 411.556 86.6699 411.556 86.9224 cv
411.556 101.862 li
411.556 102.127 411.754 102.342 412.021 102.342 cv
420.413 102.342 li
420.663 102.342 420.878 102.127 420.878 101.862 cv
420.878 86.9224 li
420.878 86.6699 420.663 86.4561 420.413 86.4561 cv
cp
f
283.975 100.133 mo
282.928 100.133 li
282.928 82.1406 li
283.975 82.1406 li
283.975 100.133 li
cp
284.455 81.1938 mo
282.449 81.1938 li
282.194 81.1938 281.98 81.4087 281.98 81.6738 cv
281.98 100.613 li
281.98 100.878 282.194 101.08 282.449 101.08 cv
284.455 101.08 li
284.705 101.08 284.921 100.878 284.921 100.613 cv
284.921 81.6738 li
284.921 81.4087 284.705 81.1938 284.455 81.1938 cv
cp
f
322.055 191.866 mo
312.846 193.959 li
301.627 144.221 li
310.145 142.075 li
322.055 191.866 li
cp
300.87 193.935 mo
290.788 145.129 li
300.163 142.025 li
300.604 143.98 li
300.669 144.283 li
311.18 191.171 li
300.87 193.935 li
cp
354.473 141.016 mo
340.148 141.016 li
339.885 141.016 339.671 141.23 339.671 141.495 cv
339.671 149.09 li
327.016 149.09 li
327.016 143.123 li
327.016 142.857 326.801 142.644 326.547 142.644 cv
316.201 142.644 li
315.936 142.644 315.721 142.857 315.721 143.123 cv
315.721 161.33 li
310.952 141.382 li
310.928 141.255 310.852 141.154 310.737 141.091 cv
310.637 141.028 310.496 141.003 310.371 141.028 cv
301.425 143.299 li
300.971 141.306 li
300.946 141.167 300.858 141.066 300.745 140.99 cv
300.632 140.927 300.49 140.915 300.365 140.952 cv
290.713 144.157 li
290.713 141.407 li
290.713 141.142 290.497 140.939 290.234 140.939 cv
280.796 140.939 li
280.796 141.886 li
289.767 141.886 li
289.767 194.514 li
289.767 194.78 289.968 194.995 290.234 194.995 cv
290.497 194.995 290.713 194.78 290.713 194.514 cv
290.713 149.432 li
300.05 194.615 li
300.074 194.744 300.151 194.856 300.264 194.918 cv
300.519 194.995 li
300.632 194.982 li
311.457 192.08 li
312.024 194.629 li
312.061 194.744 312.138 194.856 312.239 194.918 cv
312.49 194.995 li
312.591 194.982 li
322.725 192.686 li
322.852 192.66 322.964 192.584 323.028 192.471 cv
323.091 192.371 323.114 192.244 323.091 192.118 cv
316.668 165.292 li
316.668 143.59 li
326.069 143.59 li
326.069 194.514 li
326.069 194.78 326.283 194.995 326.547 194.995 cv
326.801 194.995 327.016 194.78 327.016 194.514 cv
327.016 150.037 li
339.671 150.037 li
339.671 195.537 li
339.671 195.791 339.885 196.005 340.148 196.005 cv
340.401 196.005 340.617 195.791 340.617 195.537 cv
340.617 141.962 li
346.749 141.962 li
346.749 195.537 li
346.749 195.791 346.963 196.005 347.229 196.005 cv
347.479 196.005 347.695 195.791 347.695 195.537 cv
347.695 141.962 li
353.991 141.962 li
353.991 196.066 li
353.991 196.333 354.206 196.547 354.473 196.547 cv
354.735 196.547 354.938 196.333 354.938 196.066 cv
354.938 141.495 li
354.938 141.23 354.735 141.016 354.473 141.016 cv
cp
f
374.887 194.048 mo
365.359 194.048 li
365.359 140.397 li
374.887 140.397 li
374.887 194.048 li
cp
361.512 194.314 mo
357.462 192.823 li
360.39 142.063 li
364.39 143.451 li
361.512 194.314 li
cp
400.729 147.223 mo
388.286 147.223 li
388.286 143.123 li
388.286 142.857 388.072 142.644 387.809 142.644 cv
375.833 142.644 li
375.833 139.918 li
375.833 139.653 375.62 139.451 375.354 139.451 cv
364.895 139.451 li
364.628 139.451 364.413 139.653 364.413 139.918 cv
364.413 142.454 li
360.099 140.965 li
359.96 140.915 359.807 140.927 359.682 141.016 cv
359.556 141.091 359.479 141.23 359.479 141.382 cv
356.502 193.126 li
356.49 193.329 356.615 193.519 356.806 193.595 cv
361.788 195.423 li
361.941 195.449 li
362.042 195.449 362.131 195.423 362.204 195.374 cv
362.331 195.286 362.406 195.16 362.42 195.007 cv
364.413 159.803 li
364.413 194.514 li
364.413 194.78 364.628 194.995 364.895 194.995 cv
375.354 194.995 li
375.62 194.995 375.833 194.78 375.833 194.514 cv
375.833 143.59 li
387.34 143.59 li
387.34 194.514 li
387.34 194.78 387.555 194.995 387.809 194.995 cv
388.072 194.995 388.286 194.78 388.286 194.514 cv
388.286 148.182 li
394.695 148.182 li
394.695 194.982 li
394.695 195.234 394.91 195.449 395.176 195.449 cv
395.439 195.449 395.643 195.234 395.643 194.982 cv
395.643 148.182 li
400.262 148.182 li
400.262 195.261 li
400.262 195.512 400.475 195.727 400.729 195.727 cv
400.992 195.727 401.207 195.512 401.207 195.261 cv
401.207 147.703 li
401.207 147.438 400.992 147.223 400.729 147.223 cv
cp
f
416.866 193.871 mo
412.475 191.625 li
431.704 152.372 li
434.782 154.983 li
416.866 193.871 li
cp
411.428 191.625 mo
410.141 194.238 li
406.545 191.374 li
429.649 143.804 li
433.584 146.403 li
411.428 191.625 li
cp
432.146 151.501 mo
434.619 146.441 li
434.722 146.227 434.656 145.962 434.455 145.835 cv
429.71 142.719 li
429.598 142.644 429.459 142.619 429.321 142.656 cv
429.192 142.693 429.08 142.782 429.03 142.908 cv
405.522 191.298 li
405.435 191.499 405.486 191.74 405.663 191.878 cv
410.015 195.347 li
410.104 195.411 410.205 195.449 410.319 195.449 cv
410.42 195.436 li
410.556 195.411 410.67 195.311 410.734 195.185 cv
412.059 192.484 li
416.878 194.945 li
417.093 194.995 li
417.244 194.97 li
417.372 194.93 417.473 194.83 417.522 194.716 cv
435.363 155.98 li
435.363 154.238 li
432.146 151.501 li
cp
f
384.137 188.446 mo
377.979 188.446 li
377.979 152.095 li
384.137 152.095 li
384.137 188.446 li
cp
384.602 151.148 mo
377.512 151.148 li
377.245 151.148 377.031 151.363 377.031 151.614 cv
377.031 188.925 li
377.031 189.19 377.245 189.392 377.512 189.392 cv
384.602 189.392 li
384.867 189.392 385.083 189.19 385.083 188.925 cv
385.083 151.614 li
385.083 151.363 384.867 151.148 384.602 151.148 cv
cp
f
372.955 188.446 mo
367.276 188.446 li
367.276 151.854 li
372.955 151.854 li
372.955 188.446 li
cp
373.437 150.908 mo
366.811 150.908 li
366.548 150.908 366.33 151.122 366.33 151.375 cv
366.33 188.925 li
366.33 189.19 366.548 189.392 366.811 189.392 cv
373.437 189.392 li
373.702 189.392 373.901 189.19 373.901 188.925 cv
373.901 151.375 li
373.901 151.122 373.702 150.908 373.437 150.908 cv
cp
f
338.13 232.634 mo
322.155 232.634 li
322.155 220.685 li
338.13 220.685 li
338.13 232.634 li
cp
382.608 217.946 mo
383.024 210.817 li
383.037 210.69 382.987 210.565 382.898 210.464 cv
382.81 210.375 382.685 210.314 382.559 210.314 cv
358.812 210.314 li
358.76 210.326 li
358.661 210.351 li
358.598 210.375 li
358.508 210.44 li
358.459 210.501 li
358.396 210.578 li
358.37 210.667 li
358.346 210.73 li
356.11 226.818 li
356.11 206.048 li
356.11 205.785 355.896 205.57 355.632 205.57 cv
338.599 205.57 li
338.344 205.57 338.13 205.785 338.13 206.048 cv
338.13 219.738 li
322.155 219.738 li
322.155 210.792 li
322.155 210.529 321.941 210.314 321.677 210.314 cv
302.913 210.314 li
302.913 205.279 li
302.913 205.013 302.699 204.799 302.448 204.799 cv
280.796 204.799 li
280.796 205.745 li
283.975 205.745 li
283.975 260.948 li
283.975 261.214 284.188 261.417 284.455 261.417 cv
284.705 261.417 284.921 261.214 284.921 260.948 cv
284.921 205.745 li
290.599 205.745 li
290.599 260.948 li
290.599 261.214 290.802 261.417 291.067 261.417 cv
291.331 261.417 291.545 261.214 291.545 260.948 cv
291.545 205.745 li
297.651 205.745 li
297.651 260.948 li
297.651 261.214 297.866 261.417 298.12 261.417 cv
298.384 261.417 298.599 261.214 298.599 260.948 cv
298.599 205.745 li
301.967 205.745 li
301.967 260.672 li
301.967 260.936 302.183 261.151 302.448 261.151 cv
302.699 261.151 302.913 260.936 302.913 260.672 cv
302.913 211.273 li
311.268 211.273 li
311.268 261.226 li
311.268 261.478 311.471 261.692 311.733 261.692 cv
312 261.692 312.215 261.478 312.215 261.226 cv
312.215 211.273 li
321.209 211.273 li
321.209 261.833 li
321.209 262.097 321.411 262.298 321.677 262.298 cv
321.941 262.298 322.155 262.097 322.155 261.833 cv
322.155 233.581 li
338.13 233.581 li
338.13 260.394 li
338.13 260.657 338.344 260.875 338.599 260.875 cv
338.862 260.875 339.076 260.657 339.076 260.394 cv
339.076 206.516 li
346.749 206.516 li
346.749 260.394 li
346.749 260.657 346.963 260.875 347.229 260.875 cv
347.479 260.875 347.695 260.657 347.695 260.394 cv
347.695 206.516 li
355.164 206.516 li
355.164 260.394 li
355.164 260.657 355.378 260.875 355.632 260.875 cv
355.896 260.875 356.11 260.657 356.11 260.394 cv
356.11 233.682 li
359.228 211.273 li
366.9 211.273 li
362.521 261.858 li
362.509 262.11 362.698 262.351 362.949 262.363 cv
363.001 262.375 li
363.24 262.375 363.441 262.186 363.468 261.933 cv
367.847 211.273 li
374.911 211.273 li
371.354 261.792 li
371.341 262.059 371.531 262.287 371.794 262.298 cv
371.833 262.298 li
372.072 262.298 372.287 262.11 372.299 261.871 cv
375.859 211.273 li
382.054 211.273 li
381.625 218.427 li
379.138 260.645 li
379.126 260.898 379.315 261.125 379.579 261.137 cv
379.606 261.151 li
379.858 261.151 380.073 260.948 380.084 260.697 cv
381.625 234.463 li
381.625 260.948 li
381.625 261.214 381.839 261.417 382.104 261.417 cv
382.369 261.417 382.57 261.214 382.57 260.948 cv
382.57 218.893 li
386.292 218.893 li
386.292 260.672 li
386.292 260.936 386.494 261.151 386.762 261.151 cv
387.023 261.151 387.238 260.936 387.238 260.672 cv
387.238 218.893 li
394.695 218.893 li
394.695 260.948 li
394.695 261.214 394.91 261.417 395.176 261.417 cv
395.439 261.417 395.643 261.214 395.643 260.948 cv
395.643 218.893 li
401.219 218.893 li
401.219 260.672 li
401.219 260.936 401.434 261.151 401.688 261.151 cv
401.951 261.151 402.165 260.936 402.165 260.672 cv
402.165 218.893 li
408.601 218.893 li
408.413 223.652 408.588 254.804 408.627 261.365 cv
408.627 261.631 408.842 261.845 409.105 261.845 cv
409.359 261.845 409.574 261.631 409.574 261.365 cv
409.51 250.389 409.372 222.516 409.534 218.893 cv
414.884 218.893 li
414.772 221.027 414.723 229.152 414.872 261.226 cv
414.872 261.491 415.087 261.692 415.341 261.692 cv
415.353 261.692 li
415.604 261.692 415.819 261.478 415.819 261.226 cv
415.77 250.262 415.669 222.503 415.781 218.893 cv
428.764 218.893 li
428.764 260.672 li
428.764 260.936 428.979 261.151 429.244 261.151 cv
429.497 261.151 429.71 260.936 429.71 260.672 cv
429.71 218.893 li
435.363 218.893 li
435.363 217.946 li
382.608 217.946 li
cp
f
316.706 216.773 mo
316.445 216.773 316.234 216.986 316.234 217.247 cv
316.234 236.312 li
316.234 236.573 316.445 236.785 316.706 236.785 cv
316.969 236.785 317.18 236.573 317.18 236.312 cv
317.18 217.247 li
317.18 216.986 316.969 216.773 316.706 216.773 cv
cp
f
306.693 216.773 mo
306.433 216.773 306.222 216.986 306.222 217.247 cv
306.222 235.303 li
306.222 235.565 306.433 235.776 306.693 235.776 cv
306.955 235.776 307.168 235.565 307.168 235.303 cv
307.168 217.247 li
307.168 216.986 306.955 216.773 306.693 216.773 cv
cp
f
427.644 324.216 mo
420.613 322.423 li
428.387 275.498 li
434.847 278.778 li
434.381 281.995 430.039 309.174 427.644 324.216 cv
cp
415.705 324.126 mo
406.885 276.647 li
406.493 274.564 li
411.479 273.1 li
411.794 275.422 413.283 284.606 419.542 322.486 cv
415.705 324.126 li
cp
409.359 324.177 mo
401.283 277.856 li
406.027 277.239 li
414.431 322.461 li
409.359 324.177 li
cp
387.34 287.825 mo
380.299 287.825 li
380.299 278.981 li
387.34 278.981 li
387.34 287.825 li
cp
387.34 295.117 mo
380.299 295.117 li
380.299 288.772 li
387.34 288.772 li
387.34 295.117 li
cp
379.34 287.825 mo
373.901 287.825 li
373.901 278.981 li
379.34 278.981 li
379.34 287.825 li
cp
379.34 295.117 mo
373.901 295.117 li
373.901 288.772 li
379.34 288.772 li
379.34 295.117 li
cp
359.126 324.203 mo
345.979 283.106 li
350.546 281.82 li
364.604 322.472 li
359.126 324.203 li
cp
351.152 324.227 mo
336.754 279.711 li
343.367 278.022 li
344.92 282.917 li
344.92 282.928 li
344.996 283.13 li
357.473 322.448 li
351.152 324.227 li
cp
342.384 322.412 mo
333.713 324.239 li
333.109 320.972 li
333.123 320.757 li
332.856 319.685 li
324.832 277.088 li
335.052 275.333 li
342.384 322.412 li
cp
324.012 324.138 mo
314.84 287.875 li
314.814 287.737 li
314.573 286.741 313.399 281.592 313.048 280.089 cv
321.35 277.314 li
331.935 319.9 li
332.075 320.619 li
324.012 324.138 li
cp
317.046 324.177 mo
308.288 285.605 li
313.085 284.544 li
313.893 287.975 li
313.917 288.077 li
313.93 288.089 li
322.069 322.461 li
317.046 324.177 li
cp
428.234 274.362 mo
428.097 274.297 427.944 274.297 427.806 274.362 cv
427.68 274.439 427.578 274.564 427.555 274.703 cv
420.072 319.875 li
417.194 302.436 412.438 273.529 412.324 272.495 cv
412.324 272.393 412.287 272.292 412.223 272.204 cv
412.098 272.053 411.895 272.001 411.718 272.053 cv
405.825 273.768 li
405.586 273.833 405.445 274.072 405.486 274.31 cv
405.851 276.303 li
400.664 276.987 li
400.539 277.011 400.425 277.075 400.35 277.177 cv
400.272 277.278 400.248 277.417 400.262 277.542 cv
403.038 293.414 li
399.428 293.414 li
399.428 281.237 li
399.428 280.986 399.214 280.772 398.962 280.772 cv
388.286 280.772 li
388.286 278.5 li
388.286 278.237 388.072 278.034 387.809 278.034 cv
373.901 278.034 li
373.901 274.362 li
373.901 274.096 373.702 273.881 373.437 273.881 cv
364.539 273.881 li
364.288 273.881 364.073 274.096 364.073 274.362 cv
364.073 318.056 li
351.291 281.086 li
351.216 280.845 350.963 280.72 350.724 280.785 cv
345.688 282.197 li
344.136 277.314 li
344.062 277.075 343.809 276.935 343.569 277 cv
336.541 278.792 li
335.909 274.714 li
335.885 274.588 335.821 274.475 335.72 274.398 cv
335.607 274.323 335.48 274.297 335.354 274.323 cv
324.189 276.243 li
324.061 276.267 323.946 276.332 323.886 276.444 cv
323.809 276.544 323.784 276.672 323.809 276.797 cv
328.881 303.686 li
322.144 276.594 li
322.106 276.469 322.018 276.356 321.904 276.292 cv
321.791 276.23 321.653 276.215 321.525 276.254 cv
312.34 279.321 li
312.112 279.397 311.976 279.636 312.024 279.875 cv
312.024 279.875 312.44 281.694 312.895 283.611 cv
308.189 284.646 li
308.189 281.237 li
308.189 280.986 307.987 280.772 307.722 280.772 cv
304.429 280.772 li
304.429 273.808 li
304.429 273.553 304.228 273.339 303.961 273.339 cv
297.3 273.339 li
297.3 270.338 li
297.3 270.083 297.085 269.87 296.819 269.87 cv
287.835 269.87 li
283.396 269.719 281.576 269.745 280.796 269.805 cv
280.796 270.751 li
281.591 270.678 284.544 270.714 287.344 270.803 cv
287.344 326.637 li
287.344 326.901 287.558 327.102 287.824 327.102 cv
288.074 327.102 288.289 326.901 288.289 326.637 cv
288.289 270.815 li
296.354 270.815 li
296.354 326.637 li
296.354 326.901 296.567 327.102 296.819 327.102 cv
297.085 327.102 297.3 326.901 297.3 326.637 cv
297.3 274.287 li
303.482 274.287 li
303.482 324.794 li
303.482 325.061 303.697 325.274 303.961 325.274 cv
304.228 325.274 304.429 325.061 304.429 324.794 cv
304.429 281.718 li
307.243 281.718 li
307.243 326.637 li
307.243 326.901 307.458 327.102 307.722 327.102 cv
307.987 327.102 308.189 326.901 308.189 326.637 cv
308.189 289.452 li
316.251 324.91 li
316.275 325.036 316.365 325.149 316.478 325.21 cv
316.706 325.274 li
316.857 325.25 li
322.773 323.216 li
322.799 323.206 li
323.243 324.922 li
323.268 325.047 323.368 325.162 323.481 325.224 cv
323.696 325.274 li
323.886 325.238 li
332.249 321.565 li
332.881 324.882 li
332.909 325.008 332.97 325.124 333.083 325.198 cv
333.159 325.25 333.248 325.274 333.349 325.274 cv
333.438 325.262 li
343.015 323.244 li
343.254 323.192 343.419 322.953 343.38 322.703 cv
337.539 285.189 li
350.396 324.947 li
350.459 325.149 350.646 325.274 350.849 325.274 cv
350.974 325.25 li
357.853 323.333 li
358.37 324.947 li
358.432 325.149 358.609 325.274 358.812 325.274 cv
358.962 325.25 li
365.348 323.232 li
365.474 323.192 365.573 323.103 365.625 322.99 cv
365.688 322.877 365.688 322.739 365.65 322.625 cv
365.02 320.794 li
365.02 274.828 li
372.955 274.828 li
372.955 324.794 li
372.955 325.061 373.172 325.274 373.437 325.274 cv
373.702 325.274 373.901 325.061 373.901 324.794 cv
373.901 296.064 li
379.34 296.064 li
379.34 324.794 li
379.34 325.061 379.554 325.274 379.82 325.274 cv
380.084 325.274 380.299 325.061 380.299 324.794 cv
380.299 296.064 li
387.34 296.064 li
387.34 326.637 li
387.34 326.901 387.555 327.102 387.809 327.102 cv
388.072 327.102 388.286 326.901 388.286 326.637 cv
388.286 281.718 li
398.481 281.718 li
398.481 324.794 li
398.481 325.061 398.696 325.274 398.962 325.274 cv
399.214 325.274 399.428 325.061 399.428 324.794 cv
399.428 294.361 li
402.848 294.361 li
402.848 326.637 li
402.848 326.901 403.063 327.102 403.326 327.102 cv
403.592 327.102 403.794 326.901 403.794 326.637 cv
403.794 297.819 li
408.526 324.882 li
408.539 325.024 408.627 325.136 408.741 325.21 cv
408.98 325.274 li
409.133 325.25 li
414.608 323.394 li
414.884 324.882 li
414.909 325.024 414.998 325.149 415.126 325.21 cv
415.341 325.274 li
415.528 325.238 li
420.108 323.269 li
427.906 325.262 li
428.02 325.274 li
428.286 325.198 li
428.399 325.124 428.473 325.008 428.488 324.871 cv
429.913 315.989 433.988 290.474 435.363 281.592 cv
435.363 277.97 li
428.234 274.362 li
cp
f
334.506 279.099 mo
326.446 280.779 li
326.189 280.834 326.027 281.084 326.079 281.339 cv
326.126 281.563 326.323 281.715 326.542 281.715 cv
326.639 281.706 li
334.697 280.026 li
334.954 279.971 335.116 279.719 335.064 279.466 cv
335.011 279.209 334.756 279.052 334.506 279.099 cv
cp
f
320.913 281.765 mo
314.442 283.52 li
314.19 283.588 314.041 283.85 314.108 284.101 cv
314.167 284.313 314.358 284.452 314.565 284.452 cv
314.688 284.434 li
321.159 282.679 li
321.414 282.61 321.562 282.352 321.495 282.1 cv
321.426 281.846 321.162 281.696 320.913 281.765 cv
cp
f
291.407 275.303 mo
291.146 275.303 290.935 275.515 290.935 275.778 cv
290.935 320.868 li
290.935 321.129 291.146 321.341 291.407 321.341 cv
291.668 321.341 291.881 321.129 291.881 320.868 cv
291.881 275.778 li
291.881 275.515 291.668 275.303 291.407 275.303 cv
cp
f
346.55 377.191 mo
342.856 377.191 342.747 377.083 342.653 376.992 cv
342.582 376.921 342.539 376.82 342.539 376.719 cv
342.539 376.456 342.85 376.276 343.072 376.379 cv
343.84 376.49 350.918 376.418 355.284 376.344 cv
355.514 376.333 355.662 376.506 355.665 376.713 cv
355.669 376.92 355.504 377.09 355.296 377.094 cv
351.172 377.164 348.408 377.191 346.55 377.191 cv
cp
f
435.363 337.666 mo
435.363 338.613 li
432.739 338.613 li
432.739 387.115 li
431.794 387.115 li
431.794 344.113 li
422.127 344.113 li
422.127 387.115 li
421.181 387.115 li
421.181 343.635 li
421.181 343.38 421.396 343.167 421.649 343.167 cv
431.794 343.167 li
431.794 338.131 li
431.794 337.869 432.008 337.666 432.259 337.666 cv
435.363 337.666 li
cp
f
392.313 385.991 mo
391.971 384.554 li
383.757 349.689 li
382.733 345.083 li
387.453 344.189 li
396.98 384.199 li
392.313 385.991 li
cp
384.957 386.03 mo
374.633 339.861 li
380.362 338.688 li
381.662 344.582 li
381.638 344.833 li
390.95 384.352 li
384.957 386.03 li
cp
336.896 385.777 mo
329.487 344 li
335.052 342.813 li
335.771 347.266 341.082 376.454 342.384 383.568 cv
336.896 385.777 li
cp
326.914 385.173 mo
318.296 340.125 li
327.279 339.192 li
335.379 382.685 li
326.914 385.173 li
cp
295.395 385.727 mo
295.205 384.907 li
283.432 335.708 li
287.496 334.435 li
300.53 383.252 li
299.771 383.682 297.324 384.831 295.395 385.727 cv
cp
289.943 385.815 mo
280.985 348.819 li
285.147 346.926 li
294.17 384.692 li
289.943 385.815 li
cp
388.273 343.533 mo
388.212 343.28 387.983 343.118 387.719 343.178 cv
382.534 344.166 li
381.184 338.031 li
381.12 337.779 380.881 337.614 380.627 337.666 cv
373.978 339.029 li
373.901 339.066 li
373.901 334.775 li
373.901 334.524 373.702 334.31 373.437 334.31 cv
363.001 334.31 li
362.734 334.31 362.521 334.524 362.521 334.775 cv
362.521 341.779 li
355.632 341.779 li
355.378 341.779 355.164 341.981 355.164 342.245 cv
355.164 348.075 li
342.914 348.075 li
342.647 348.075 342.445 348.291 342.445 348.553 cv
342.445 378.622 li
339.796 364.086 335.974 342.977 335.909 342.245 cv
335.909 342.093 335.849 341.968 335.732 341.88 cv
335.618 341.792 335.469 341.754 335.343 341.779 cv
328.981 343.141 li
328.124 338.599 li
328.087 338.358 327.861 338.196 327.619 338.208 cv
317.69 339.231 li
317.552 339.254 317.437 339.319 317.351 339.42 cv
317.273 339.534 317.249 339.66 317.273 339.797 cv
318.409 345.791 li
309.716 345.791 li
309.451 345.791 309.235 345.994 309.235 346.26 cv
309.235 348.137 li
306.383 348.137 li
306.383 341.036 li
306.383 340.768 306.169 340.555 305.904 340.555 cv
301.06 340.555 li
300.808 340.555 300.592 340.768 300.592 341.036 cv
300.592 379.846 li
288.277 333.715 li
288.24 333.589 288.163 333.476 288.051 333.412 cv
287.938 333.364 287.799 333.35 287.672 333.388 cv
282.725 334.94 li
282.499 335.016 282.36 335.268 282.41 335.507 cv
284.921 345.994 li
280.796 347.874 li
280.796 352.05 li
289.147 386.507 li
289.174 386.622 289.248 386.738 289.361 386.798 cv
289.604 386.863 li
289.729 386.85 li
294.396 385.602 li
294.61 386.497 li
294.638 386.637 294.739 386.762 294.865 386.811 cv
295.066 386.863 li
295.269 386.824 li
298.21 385.475 299.759 384.744 300.592 384.288 cv
300.592 387.115 li
301.538 387.115 li
301.538 341.5 li
305.438 341.5 li
305.438 387.115 li
306.383 387.115 li
306.383 349.083 li
309.235 349.083 li
309.235 386.622 li
309.235 386.887 309.451 387.102 309.716 387.102 cv
309.981 387.102 310.181 386.887 310.181 386.622 cv
310.181 346.737 li
317.993 346.737 li
317.993 387.026 li
318.006 387.115 li
318.928 387.115 li
318.939 387.026 li
318.939 348.553 li
326.082 385.866 li
326.106 385.991 326.182 386.107 326.296 386.18 cv
326.547 386.245 li
326.673 386.22 li
335.558 383.62 li
336.063 386.521 li
336.088 386.661 336.176 386.774 336.302 386.85 cv
336.528 386.913 li
336.705 386.876 li
342.445 384.565 li
342.445 387.115 li
343.38 387.115 li
343.38 349.021 li
355.164 349.021 li
355.164 387.115 li
356.11 387.115 li
356.11 342.725 li
362.521 342.725 li
362.521 387.115 li
363.468 387.115 li
363.468 335.255 li
372.955 335.255 li
372.955 387.115 li
373.901 387.115 li
373.901 340.947 li
384.148 386.738 li
384.173 386.863 384.25 386.964 384.362 387.038 cv
384.602 387.102 li
384.742 387.077 li
391.165 385.274 li
391.517 386.738 li
391.542 386.863 391.631 386.977 391.756 387.038 cv
391.971 387.102 li
392.147 387.065 li
397.7 384.943 li
397.928 384.857 398.04 384.616 397.991 384.388 cv
388.273 343.533 li
cp
f
409.239 328.05 mo
409.261 327.818 409.287 327.577 409.296 327.335 cv
409.296 327.335 412.604 328.198 413.387 324.81 cv
414.183 321.425 413.709 317.25 412.129 317.25 cv
410.553 317.25 409.456 321.193 409.456 321.193 cv
409.456 321.193 408.427 316.227 406.772 313.782 cv
405.119 311.345 403.938 309.378 403.392 309.686 cv
403.21 309.786 402.821 310.241 402.218 310.862 cv
401.34 311.765 399.993 313.035 398.237 313.987 cv
398.107 314.063 397.964 314.13 397.823 314.207 cv
397.71 314.26 397.606 314.318 397.483 314.375 cv
397.414 314.408 li
396.623 314.778 395.763 315.131 394.811 315.436 cv
389.372 317.175 385.433 316.777 384.176 316.54 cv
384.022 316.513 383.884 316.463 383.74 316.401 cv
382.466 315.878 381.378 314.148 381.727 311.104 cv
382.127 307.719 383.069 306.147 384.176 305.512 cv
385.271 304.886 386.301 304.8 386.775 302.995 cv
387.247 301.184 388.903 299.606 390.233 300.004 cv
391.574 300.403 393.392 301.417 394.572 300.161 cv
395.754 298.891 399.299 295.588 401.498 297.563 cv
402.689 298.631 403.608 299.83 404.41 300.661 cv
405.09 301.359 405.688 301.796 406.302 301.653 cv
407.643 301.34 411.347 301.653 411.585 303.706 cv
411.765 305.256 411.355 306.446 411.594 307.55 cv
411.672 307.903 411.811 308.243 412.06 308.583 cv
412.679 309.463 413.315 310.714 413.909 312.257 cv
414.276 313.223 414.639 314.291 414.968 315.436 cv
415.83 318.421 416.378 329.347 409.239 328.05 cv
cp
.34902 .0901961 .0705882 rgb
f
409.239 328.05 mo
409.261 327.818 409.287 327.577 409.296 327.335 cv
409.296 327.335 412.604 328.198 413.387 324.81 cv
414.183 321.425 413.709 317.25 412.129 317.25 cv
410.553 317.25 409.456 321.193 409.456 321.193 cv
409.456 321.193 408.427 316.227 406.772 313.782 cv
405.119 311.345 403.938 309.378 403.392 309.686 cv
403.21 309.786 402.821 310.241 402.218 310.862 cv
401.323 309.329 400.884 307.707 403.229 305.359 cv
404.448 304.139 404.457 302.249 404.41 300.661 cv
405.09 301.359 405.688 301.796 406.302 301.653 cv
407.643 301.34 411.347 301.653 411.585 303.706 cv
411.765 305.256 411.355 306.446 411.594 307.55 cv
411.672 307.903 411.811 308.243 412.06 308.583 cv
412.679 309.463 413.315 310.714 413.909 312.257 cv
414.276 313.223 414.639 314.291 414.968 315.436 cv
415.83 318.421 416.378 329.347 409.239 328.05 cv
cp
.258824 .0470588 .0431373 rgb
f
432.851 330.169 mo
432.535 330.868 432.188 332.596 431.255 333.902 cv
430.497 334.953 429.361 335.726 427.566 335.44 cv
427.566 335.44 424.654 337.457 421.035 335.99 cv
416.935 334.335 416.785 331.349 417.406 329.536 cv
418.039 327.725 419.771 325.99 418.352 324.654 cv
416.935 323.316 415.676 321.899 416.46 317.881 cv
417.256 313.867 417.327 311.578 414.732 310.474 cv
412.291 307.013 li
412.218 306.682 412.437 302.866 415.07 300.598 cv
415.553 300.169 416.12 299.812 416.785 299.53 cv
421.035 297.71 428.362 298.659 429.93 303.071 cv
431.507 307.483 429.694 311.501 429.379 313.232 cv
429.068 314.961 428.981 315.521 431.668 317.719 cv
434.344 319.923 433.869 321.975 432.851 323.316 cv
431.818 324.654 427.963 329.061 428.749 329.772 cv
429.54 330.482 430.723 329.302 431.431 328.278 cv
432.14 327.247 433.397 328.9 432.851 330.169 cv
cp
.34902 .0901961 .0705882 rgb
f
431.255 333.902 mo
430.497 334.953 429.361 335.726 427.566 335.44 cv
427.566 335.44 424.654 337.457 421.035 335.99 cv
416.935 334.335 416.785 331.349 417.406 329.536 cv
418.039 327.725 419.771 325.99 418.352 324.654 cv
416.935 323.316 415.676 321.899 416.46 317.881 cv
417.256 313.867 417.327 311.578 414.732 310.474 cv
412.291 307.013 li
412.218 306.682 412.437 302.866 415.07 300.598 cv
417.244 301.538 421.898 301.569 421.505 305.981 cv
421.035 311.345 418.823 310.236 418.983 314.335 cv
419.145 318.431 425.6 317.957 422.763 322.843 cv
420.27 327.143 423.273 337.448 431.255 333.902 cv
cp
.258824 .0470588 .0431373 rgb
f
433.397 409.276 mo
433.275 415.892 427.728 423.813 417.566 425.816 cv
407.405 427.827 394.053 421.215 387.438 416.612 cv
380.823 411.999 359.677 396.512 359.677 396.512 cv
359.204 399.592 351.881 406.562 340.066 413.777 cv
328.252 420.974 311.601 427.478 311.601 427.478 cv
311.601 427.478 311.09 427.268 310.448 427.014 cv
309.493 426.628 308.266 426.128 308.047 426.061 cv
318.912 413.532 li
318.912 413.532 318.961 413.447 319.064 413.272 cv
319.218 412.991 319.511 412.49 319.909 411.788 cv
319.954 411.704 320.012 411.618 320.059 411.52 cv
320.74 410.339 321.693 408.69 322.846 406.692 cv
322.857 406.678 li
330.114 394.05 345.215 368.01 348.688 363.557 cv
350.993 360.612 353.177 360.25 356.228 361.833 cv
359.281 363.401 363.213 366.924 369.006 371.716 cv
379.603 380.459 391.404 390.697 394.788 393.277 cv
395.112 393.532 395.358 393.701 395.515 393.803 cv
397.407 394.984 400.669 396.164 400.669 396.164 cv
400.658 395.905 li
400.557 392.982 li
407.464 395.248 417.441 393.862 422.596 392.878 cv
424.663 392.48 425.962 392.15 425.962 392.15 cv
430.088 396.164 433.519 402.66 433.397 409.276 cv
cp
.886275 .235294 .215686 rgb
f
433.397 409.276 mo
433.275 415.892 427.728 423.813 417.566 425.816 cv
407.405 427.827 394.053 421.215 387.438 416.612 cv
380.823 411.999 359.677 396.512 359.677 396.512 cv
359.204 399.592 351.881 406.562 340.066 413.777 cv
328.252 420.974 311.601 427.478 311.601 427.478 cv
311.601 427.478 311.09 427.268 310.448 427.014 cv
315.083 424.881 326.777 419.12 337.07 412.472 cv
349.99 404.122 358.658 387.899 358.658 387.899 cv
358.658 387.899 365.112 395.145 373.778 402.708 cv
382.435 410.272 399.771 420.343 410.792 419.083 cv
421.82 417.827 425.6 411.52 426.232 408.851 cv
426.715 406.772 423.89 397.103 422.596 392.878 cv
424.663 392.48 425.962 392.15 425.962 392.15 cv
430.088 396.164 433.519 402.66 433.397 409.276 cv
cp
.776471 .156863 .156863 rgb
f
395.515 393.803 mo
356.21 376.481 li
355.027 377.5 320.381 411.837 320.381 411.837 cv
320.059 411.52 li
320.74 410.339 321.693 408.69 322.846 406.692 cv
322.857 406.678 li
331.977 397.17 354.623 373.504 355.501 371.989 cv
356.186 370.817 356.266 365.632 356.228 361.833 cv
359.281 363.401 363.213 366.924 369.006 371.716 cv
380.594 381.283 393.628 392.619 395.515 393.803 cv
cp
f
437.017 367.738 mo
437.017 367.738 434.938 369.355 432.804 371.242 cv
432.149 371.833 431.337 372.539 430.523 373.258 cv
428.688 374.872 426.858 376.481 426.858 376.481 cv
425.711 373.835 li
426.309 378.449 425.962 392.15 425.962 392.15 cv
425.962 392.15 424.824 392.462 422.887 392.861 cv
420.534 393.339 416.99 393.942 412.842 394.273 cv
405.28 394.869 400.557 393.331 400.557 393.331 cv
400.32 387.663 397.133 376.083 397.133 376.083 cv
395.593 375.025 li
393.468 377.027 387.795 379.467 387.795 379.467 cv
387.795 379.467 387.156 378.153 386.333 375.619 cv
385.974 374.542 385.584 373.232 385.197 371.716 cv
383.903 366.633 383.383 365.055 383.383 365.055 cv
388.503 357.537 393.827 349.035 395.716 346.548 cv
396.063 346.092 396.415 345.695 396.795 345.329 cv
398.437 343.709 400.32 342.927 402.443 342.056 cv
410.242 339.226 li
410.242 339.226 411.123 339.231 412.455 339.33 cv
415.034 339.495 419.297 339.941 422.178 341.113 cv
426.547 342.888 428.671 343.237 431.507 350.094 cv
434.344 356.942 437.017 367.738 437.017 367.738 cv
cp
.92549 .596078 .427451 rgb
f
412.455 339.33 mo
410.525 341.453 405.33 346.04 396.795 345.329 cv
398.437 343.709 400.32 342.927 402.443 342.056 cv
410.242 339.226 li
410.242 339.226 411.123 339.231 412.455 339.33 cv
cp
.858824 .490196 .32549 rgb
f
397.133 376.083 mo
395.593 375.025 li
393.468 377.027 387.795 379.467 387.795 379.467 cv
387.795 379.467 387.156 378.153 386.333 375.619 cv
388.024 374.733 391.574 372.708 392.52 371.046 cv
392.52 371.046 394.1 374.505 396.614 375.61 cv
399.136 376.714 397.133 376.083 397.133 376.083 cv
cp
f
426.858 376.481 mo
425.711 373.835 li
426.309 378.449 425.962 392.15 425.962 392.15 cv
425.962 392.15 424.824 392.462 422.887 392.861 cv
422.971 390.608 423.074 387.223 423.074 383.643 cv
423.074 377.34 419.932 373.406 419.932 373.406 cv
414.894 376.866 409.696 374.98 409.696 374.98 cv
409.696 374.98 415.837 372.771 419.932 368.686 cv
424.021 364.582 423.709 359.7 423.709 359.7 cv
423.709 359.7 428.823 368.9 430.523 373.258 cv
428.688 374.872 426.858 376.481 426.858 376.481 cv
cp
f
413.387 324.81 mo
412.604 328.198 409.296 327.335 409.296 327.335 cv
409.287 327.577 409.261 327.818 409.239 328.05 cv
409.189 328.685 409.101 329.302 408.983 329.883 cv
408.444 332.722 407.143 335.083 404.574 337.094 cv
403.909 337.617 403.107 338.136 402.202 338.6 cv
401.717 338.855 401.197 339.087 400.658 339.293 cv
397.229 340.625 392.863 340.943 389.051 338.113 cv
383.544 334.028 384.176 329.772 384.563 326.066 cv
384.942 322.579 383.979 317.97 383.74 316.401 cv
383.884 316.463 384.022 316.513 384.176 316.54 cv
385.433 316.777 389.372 317.175 394.811 315.436 cv
395.763 315.131 396.623 314.778 397.414 314.408 cv
397.483 314.375 li
397.606 314.318 397.71 314.26 397.823 314.207 cv
397.964 314.13 398.107 314.063 398.237 313.987 cv
400.043 313.003 401.406 311.711 402.28 310.791 cv
402.842 310.209 403.21 309.786 403.392 309.686 cv
403.938 309.378 405.119 311.345 406.772 313.782 cv
408.427 316.227 409.456 321.193 409.456 321.193 cv
409.456 321.193 410.553 317.25 412.129 317.25 cv
413.709 317.25 414.183 321.425 413.387 324.81 cv
cp
.952941 .713726 .670588 rgb
f
413.387 324.81 mo
412.604 328.198 409.296 327.335 409.296 327.335 cv
409.287 327.577 409.261 327.818 409.239 328.05 cv
409.189 328.685 409.101 329.302 408.983 329.883 cv
408.444 332.722 407.143 335.083 404.574 337.094 cv
403.909 337.617 403.107 338.136 402.202 338.6 cv
406.369 334.363 407.603 327.492 407.405 322.798 cv
407.207 318.059 404.589 314.013 402.28 310.791 cv
402.842 310.209 403.21 309.786 403.392 309.686 cv
403.938 309.378 405.119 311.345 406.772 313.782 cv
408.427 316.227 409.456 321.193 409.456 321.193 cv
409.456 321.193 410.553 317.25 412.129 317.25 cv
413.709 317.25 414.183 321.425 413.387 324.81 cv
cp
.956863 .580392 .556863 rgb
f
454.992 428.605 mo
455.543 429.083 457.313 430.683 456.713 431.211 cv
456.109 431.738 453.86 430.161 453.152 429.652 cv
453.691 430.066 454.992 431.167 454.739 431.61 cv
454.426 432.159 447.649 429.951 446.391 429.405 cv
445.132 428.846 442.374 430.662 441.742 429.717 cv
441.241 428.962 443.132 427.027 443.891 426.293 cv
444.077 426.12 444.191 426.012 444.191 426.012 cv
444.191 426.012 443.319 421.288 436.942 408.453 cv
430.562 395.619 431.668 390.259 431.744 389.946 cv
431.818 389.625 427.963 379.231 426.858 376.481 cv
426.858 376.481 428.72 374.854 430.562 373.232 cv
431.366 372.521 432.16 371.82 432.804 371.242 cv
434.938 369.355 437.017 367.738 437.017 367.738 cv
437.017 367.738 439.777 376.794 440.646 380.572 cv
441.51 384.354 443.953 392.311 445.287 400.022 cv
446.63 407.743 449.54 424.519 449.54 424.519 cv
449.54 424.519 450.249 424.833 452.772 425.704 cv
455.296 426.566 458.045 428.3 457.336 429.168 cv
456.762 429.875 455.456 428.962 454.992 428.605 cv
cp
.952941 .713726 .670588 rgb
f
443.891 426.293 mo
444.077 426.12 444.191 426.012 444.191 426.012 cv
444.191 426.012 443.319 421.288 436.942 408.453 cv
430.562 395.619 431.668 390.259 431.744 389.946 cv
431.818 389.625 427.963 379.231 426.858 376.481 cv
426.858 376.481 428.72 374.854 430.562 373.232 cv
432.057 378.69 433.437 385.23 434.69 391.564 cv
435.998 398.059 439.304 407.385 441.307 414.005 cv
443.319 420.621 444.859 426.173 444.859 426.173 cv
444.859 426.173 444.447 426.208 443.891 426.293 cv
cp
.956863 .580392 .556863 rgb
f
390.097 319.021 mo
390.752 318.499 389.45 317.013 387.087 317.25 cv
384.724 317.483 384.072 319.137 384.072 319.137 cv
384.311 319.673 li
384.311 319.673 385.749 318.824 386.849 318.98 cv
387.951 319.137 389.705 319.338 390.097 319.021 cv
cp
.34902 .0901961 .0705882 rgb
f
403.313 316.071 mo
401.894 315.284 400.24 314.648 398.114 315.042 cv
395.988 315.436 394.41 316.463 394.96 317.483 cv
395.513 318.511 397.091 317.563 398.666 316.937 cv
400.24 316.302 403.313 316.071 403.313 316.071 cv
cp
f
413.905 312.257 mo
415.999 310.988 416.692 308.185 415.284 307.089 cv
413.885 306.003 411.802 307.287 411.594 307.545 cv
411.672 307.903 411.807 308.248 412.057 308.587 cv
412.686 309.458 413.315 310.719 413.905 312.257 cv
cp
.627451 .2 .188235 rgb
f
308.052 426.052 mo
308.052 426.052 300.019 426.884 291.038 434.207 cv
310.77 434.207 li
311.595 427.474 li
308.052 426.052 li
cp
.0392157 0 0 rgb
f
349.911 326.544 mo
332.978 327.174 li
338.648 358.716 li
358.496 350.562 li
349.911 326.544 li
cp
.980392 .941176 .741176 rgb
f
349.871 326.347 mo
364.172 318.077 li
372.082 351.51 li
357.79 350.562 li
349.871 326.347 li
cp
.909804 .878431 .803922 rgb
f
337.703 325.163 mo
341.644 358.046 li
357.79 350.402 li
349.911 326.544 li
337.703 325.163 li
cp
.847059 .8 .705882 rgb
f
349.871 326.347 mo
358.023 314.492 li
360.858 320.281 li
349.871 326.347 li
cp
.909804 .878431 .803922 rgb
f
338.77 320.907 mo
339.911 325.672 li
349.911 326.544 li
338.77 320.907 li
cp
f
389.918 331.184 mo
389.885 331.184 li
389.679 331.18 389.541 331.113 389.474 330.979 cv
389.372 330.782 389.453 329.32 390.154 321.583 cv
390.247 320.608 390.312 319.843 390.313 319.763 cv
390.316 319.638 390.425 319.535 390.553 319.535 cv
390.555 319.535 li
390.685 319.535 390.79 319.638 390.79 319.767 cv
390.79 319.834 390.749 320.277 390.629 321.623 cv
390.398 324.122 389.877 329.826 389.904 330.714 cv
389.916 330.714 li
390.374 330.714 392.041 330.165 392.473 329.418 cv
392.538 329.302 392.686 329.262 392.799 329.33 cv
392.911 329.397 392.948 329.54 392.881 329.651 cv
392.381 330.514 390.638 331.184 389.918 331.184 cv
cp
.6 .188235 .133333 rgb
f
410.402 323.786 mo
410.267 323.786 410.162 323.679 410.162 323.549 cv
410.162 321.113 411.398 319.07 411.729 318.739 cv
411.822 318.646 411.97 318.646 412.063 318.739 cv
412.155 318.829 412.155 318.98 412.063 319.07 cv
411.895 319.24 410.636 321.144 410.636 323.549 cv
410.636 323.679 410.532 323.786 410.402 323.786 cv
cp
f
411.395 322.825 mo
410.959 322.825 410.546 322.696 410.48 322.672 cv
410.358 322.628 410.294 322.495 410.331 322.374 cv
410.374 322.248 410.508 322.181 410.634 322.221 cv
410.851 322.297 411.482 322.445 411.811 322.27 cv
411.903 322.226 411.957 322.159 411.983 322.065 cv
412.135 321.564 411.295 320.942 410.991 320.764 cv
410.877 320.693 410.842 320.549 410.903 320.437 cv
410.971 320.327 411.113 320.286 411.228 320.353 cv
411.382 320.442 412.716 321.265 412.437 322.2 cv
412.369 322.415 412.229 322.588 412.025 322.696 cv
411.841 322.793 411.612 322.825 411.395 322.825 cv
cp
f
391.104 334.108 mo
391.104 334.108 397.641 333.947 400.003 332.923 cv
400.003 332.923 397.877 336.937 394.729 337.25 cv
391.574 337.573 391.104 334.108 391.104 334.108 cv
cp
1 1 1 rgb
f
399.849 376.634 mo
395.114 376.634 392.312 372.552 391.349 369.052 cv
390.173 364.788 394.406 358.064 394.448 357.998 cv
394.956 357.202 395.666 352.15 395.75 349.455 cv
395.754 349.33 395.858 349.226 395.988 349.226 cv
395.995 349.226 li
396.127 349.226 396.226 349.338 396.221 349.468 cv
396.143 352.02 395.435 357.326 394.845 358.252 cv
394.806 358.319 390.698 364.93 391.805 368.931 cv
392.721 372.261 395.38 376.16 399.849 376.16 cv
399.976 376.16 400.082 376.266 400.082 376.396 cv
400.082 376.526 399.976 376.634 399.849 376.634 cv
cp
.137255 .0392157 .0666667 rgb
f
413.714 375.686 mo
413.604 375.686 413.506 375.615 413.48 375.502 cv
413.452 375.377 413.525 375.252 413.651 375.22 cv
413.675 375.216 413.731 375.208 413.827 375.199 cv
416.134 374.89 421.675 373.477 423.315 367.004 cv
423.257 366.342 422.624 357.894 424.663 350.268 cv
424.697 350.142 424.826 350.062 424.952 350.103 cv
425.078 350.129 425.154 350.263 425.119 350.388 cv
423.024 358.211 423.78 366.916 423.785 367.004 cv
423.78 367.081 li
422.083 373.867 416.298 375.341 413.89 375.664 cv
413.762 375.677 li
413.714 375.686 li
cp
f
426.309 375.927 mo
426.207 375.927 426.116 375.865 426.085 375.761 cv
425.689 374.497 423.326 367.098 423.326 367.098 cv
423.778 366.956 li
423.778 366.956 426.141 374.358 426.531 375.619 cv
426.572 375.744 426.505 375.878 426.38 375.914 cv
426.309 375.927 li
cp
f
400.884 396.258 mo
400.839 396.383 400.695 396.432 400.573 396.383 cv
385.622 389.665 357.108 376.916 356.17 376.706 cv
355.613 376.839 351.561 381.113 348.302 384.533 cv
346.491 386.432 344.63 388.386 343.224 389.794 cv
339.442 393.576 322.602 409.861 319.064 413.272 cv
319.218 412.991 319.511 412.49 319.909 411.788 cv
325.038 406.834 339.433 392.915 342.893 389.463 cv
344.29 388.059 346.152 386.101 347.957 384.21 cv
353.686 378.18 355.691 376.177 356.239 376.245 cv
356.892 376.303 382.539 387.782 394.788 393.277 cv
397.615 394.533 399.721 395.475 400.658 395.905 cv
400.773 395.95 li
400.884 396.007 400.944 396.151 400.884 396.258 cv
cp
f
358.637 399.07 mo
358.496 399.025 li
358.394 398.945 358.368 398.797 358.447 398.69 cv
360.399 396.035 359.985 392.226 359.715 390.71 cv
359.699 390.622 li
359.681 390.492 359.771 390.375 359.897 390.353 cv
360.025 390.335 360.146 390.424 360.166 390.549 cv
360.179 390.63 li
360.461 392.199 360.889 396.172 358.825 398.971 cv
358.637 399.07 li
cp
f
395.83 312.405 mo
395.636 312.297 li
395.56 312.19 395.588 312.046 395.7 311.971 cv
396.153 311.667 396.295 310.813 396.4 310.129 cv
396.502 309.5 396.583 308.999 396.885 308.806 cv
396.975 308.749 397.115 308.694 397.31 308.752 cv
397.439 308.789 397.514 308.917 397.475 309.047 cv
397.439 309.172 397.308 309.24 397.183 309.208 cv
397.015 309.285 396.932 309.816 396.867 310.206 cv
396.744 310.979 396.59 311.945 395.962 312.365 cv
395.83 312.405 li
cp
f
385.694 311.895 mo
385.543 311.895 385.423 311.85 385.346 311.806 cv
384.603 311.413 384.328 309.83 384.486 308.592 cv
384.507 308.466 384.614 308.377 384.757 308.39 cv
384.885 308.404 384.974 308.529 384.958 308.655 cv
384.786 309.942 385.14 311.163 385.566 311.39 cv
385.617 311.417 385.751 311.484 385.986 311.278 cv
386.084 311.198 386.234 311.21 386.32 311.305 cv
386.407 311.404 386.397 311.551 386.297 311.64 cv
386.073 311.833 385.865 311.895 385.694 311.895 cv
cp
f
418.039 302.244 mo
417.902 302.199 li
417.797 302.127 417.772 301.975 417.849 301.868 cv
418.286 301.256 419.377 300.992 420.188 301.05 cv
420.863 301.104 421.349 301.368 421.559 301.783 cv
421.614 301.904 421.572 302.047 421.451 302.101 cv
421.338 302.164 421.196 302.114 421.139 301.998 cv
421.004 301.739 420.646 301.564 420.152 301.525 cv
419.382 301.461 418.521 301.744 418.232 302.145 cv
418.039 302.244 li
cp
f
420.166 318.664 mo
420.036 318.626 li
419.124 318.024 419.505 315.449 420.188 314.072 cv
420.249 313.956 420.394 313.912 420.508 313.965 cv
420.622 314.023 420.673 314.167 420.612 314.282 cv
419.93 315.655 419.75 317.867 420.298 318.234 cv
420.405 318.306 420.435 318.453 420.363 318.56 cv
420.166 318.664 li
cp
f
428.907 324.335 mo
428.754 324.282 li
428.658 324.193 428.644 324.045 428.728 323.948 cv
429.299 323.281 429.969 322.347 430.088 321.009 cv
430.104 320.88 430.197 320.773 430.345 320.795 cv
430.479 320.805 430.573 320.92 430.562 321.05 cv
430.428 322.525 429.701 323.536 429.087 324.26 cv
428.907 324.335 li
cp
f
421.559 333.231 mo
421.392 333.231 421.178 333.16 420.933 332.954 cv
420.107 332.271 419.131 330.201 419.344 329.249 cv
419.373 329.124 419.495 329.042 419.625 329.07 cv
419.752 329.096 419.833 329.222 419.804 329.352 cv
419.647 330.062 420.486 331.975 421.234 332.592 cv
421.392 332.726 421.527 332.776 421.608 332.744 cv
421.73 332.696 421.866 332.744 421.918 332.87 cv
421.97 332.986 421.916 333.128 421.795 333.183 cv
421.73 333.205 421.649 333.231 421.559 333.231 cv
cp
f
400.79 300.116 mo
400.691 300.116 400.6 300.058 400.568 299.955 cv
400.407 299.481 400.175 299.204 399.871 299.127 cv
399.545 299.047 399.169 299.236 398.95 299.458 cv
398.858 299.548 398.709 299.548 398.617 299.458 cv
398.519 299.37 398.519 299.218 398.617 299.124 cv
398.905 298.837 399.435 298.542 399.98 298.672 cv
400.305 298.749 400.747 299.007 401.018 299.807 cv
401.055 299.933 400.989 300.067 400.866 300.107 cv
400.79 300.116 li
cp
f
399.214 322.681 mo
399.214 323.987 398.827 325.046 398.347 325.046 cv
397.871 325.046 397.483 323.987 397.483 322.681 cv
397.483 321.376 397.871 320.322 398.347 320.322 cv
398.827 320.322 399.214 321.376 399.214 322.681 cv
cp
.376471 .0666667 .0666667 rgb
f
388.9 323.553 mo
388.9 324.854 388.512 325.915 388.031 325.915 cv
387.553 325.915 387.167 324.854 387.167 323.553 cv
387.167 322.244 387.553 321.189 388.031 321.189 cv
388.512 321.189 388.9 322.244 388.9 323.553 cv
cp
f
410.164 338.44 mo
410.164 340.563 408.427 345.838 407.093 346.857 cv
405.756 347.894 404.969 347.331 404.256 345.762 cv
403.777 344.693 402.573 342.579 401.529 340.795 cv
401.217 340.254 400.912 339.746 400.658 339.293 cv
402.202 338.704 403.548 337.898 404.574 337.094 cv
407.143 335.083 408.444 332.722 408.983 329.883 cv
409.326 331.86 409.94 335.49 410.11 337.51 cv
410.148 337.88 410.164 338.189 410.164 338.44 cv
cp
.952941 .713726 .670588 rgb
f
410.11 337.51 mo
407.772 339.204 403.645 340.443 401.529 340.795 cv
401.217 340.254 400.912 339.746 400.658 339.293 cv
402.202 338.704 403.548 337.898 404.574 337.094 cv
407.143 335.083 408.444 332.722 408.983 329.883 cv
409.326 331.86 409.94 335.49 410.11 337.51 cv
cp
.956863 .580392 .556863 rgb
f
387.795 379.467 mo
387.795 379.467 380.234 383.407 375.036 382.539 cv
369.838 381.676 361.731 369.866 359.914 365.922 cv
358.102 361.985 354.556 352.056 354.556 352.056 cv
354.556 352.056 355.027 351.775 355.613 351.453 cv
356.484 350.96 357.598 350.358 357.79 350.402 cv
358.102 350.487 359.677 351.435 359.677 351.435 cv
359.677 351.435 360.624 345.999 361.731 346.388 cv
362.825 346.786 362.439 354.108 362.439 354.108 cv
362.439 354.108 377.949 370.643 378.581 370.643 cv
379.212 370.643 383.383 365.055 383.383 365.055 cv
383.383 365.055 383.903 366.633 385.197 371.716 cv
385.558 373.093 385.906 374.299 386.228 375.32 cv
387.104 378.05 387.795 379.467 387.795 379.467 cv
cp
.952941 .713726 .670588 rgb
f
387.795 379.467 mo
387.795 379.467 380.234 383.407 375.036 382.539 cv
369.838 381.676 361.731 369.866 359.914 365.922 cv
358.102 361.985 354.556 352.056 354.556 352.056 cv
354.556 352.056 355.027 351.775 355.613 351.453 cv
357.315 355.999 359.479 361.623 364.172 368.162 cv
369.249 375.252 375.982 377.737 375.982 377.737 cv
375.982 377.737 382.71 377.737 386.228 375.32 cv
387.104 378.05 387.795 379.467 387.795 379.467 cv
cp
.956863 .580392 .556863 rgb
f
177.046 50.8291 mo
177.046 53.2559 175.55 55.2231 173.705 55.2231 cv
171.859 55.2231 170.363 53.2559 170.363 50.8291 cv
170.363 48.4028 171.859 46.4355 173.705 46.4355 cv
175.55 46.4355 177.046 48.4028 177.046 50.8291 cv
cp
.980392 .941176 .741176 rgb
f
173.705 42.1602 mo
173.18 42.1602 172.755 41.7349 172.755 41.2104 cv
172.755 20.5474 li
172.755 20.0225 173.18 19.5972 173.705 19.5972 cv
174.229 19.5972 174.655 20.0225 174.655 20.5474 cv
174.655 41.2104 li
174.655 41.7349 174.229 42.1602 173.705 42.1602 cv
cp
.466667 .686275 .737255 rgb
f
150.667 50.2354 mo
196.743 50.2354 li
196.743 50.2354 190.806 39.0728 173.705 39.0728 cv
156.604 39.0728 150.667 50.2354 150.667 50.2354 cv
cp
.92549 .596078 .427451 rgb
f
555.635 50.8291 mo
555.635 53.2559 554.139 55.2231 552.295 55.2231 cv
550.448 55.2231 548.953 53.2559 548.953 50.8291 cv
548.953 48.4028 550.448 46.4355 552.295 46.4355 cv
554.139 46.4355 555.635 48.4028 555.635 50.8291 cv
cp
.980392 .941176 .741176 rgb
f
552.295 42.1602 mo
551.77 42.1602 551.345 41.7349 551.345 41.2104 cv
551.345 20.5474 li
551.345 20.0225 551.77 19.5972 552.295 19.5972 cv
552.819 19.5972 553.244 20.0225 553.244 20.5474 cv
553.244 41.2104 li
553.244 41.7349 552.819 42.1602 552.295 42.1602 cv
cp
.466667 .686275 .737255 rgb
f
529.257 50.2354 mo
575.333 50.2354 li
575.333 50.2354 569.395 39.0728 552.295 39.0728 cv
535.194 39.0728 529.257 50.2354 529.257 50.2354 cv
cp
.92549 .596078 .427451 rgb
f
479.428 392.831 mo
479.152 372.998 li
521.664 372.998 li
522.896 392.831 li
479.428 392.831 li
cp
510.803 198.331 mo
512.036 218.164 li
476.999 218.164 li
476.724 198.331 li
510.803 198.331 li
cp
478.849 351.164 mo
520.306 351.164 li
521.539 370.998 li
479.125 370.998 li
478.849 351.164 li
cp
477.606 261.831 mo
477.331 241.997 li
513.518 241.997 li
514.751 261.831 li
477.606 261.831 li
cp
516.092 283.664 mo
477.91 283.664 li
477.634 263.831 li
514.876 263.831 li
516.109 283.667 li
516.092 283.664 li
cp
478.214 305.498 mo
477.938 285.664 li
516.092 285.664 li
516.231 285.635 li
517.467 305.498 li
478.214 305.498 li
cp
478.518 327.331 mo
478.241 307.498 li
517.591 307.498 li
518.824 327.331 li
478.518 327.331 li
cp
478.545 329.331 mo
518.948 329.331 li
520.182 349.164 li
478.821 349.164 li
478.545 329.331 li
cp
513.394 239.997 mo
477.303 239.997 li
477.027 220.164 li
512.16 220.164 li
513.394 239.997 li
cp
511.77 181.654 mo
511.735 181.103 511.282 180.687 510.709 180.718 cv
510.158 180.752 509.739 181.227 509.773 181.778 cv
510.679 196.331 li
476.695 196.331 li
476.509 182.9 li
476.5 182.348 476.01 181.893 475.495 181.914 cv
474.942 181.922 474.501 182.375 474.509 182.928 cv
475.614 262.402 li
475.551 262.533 475.509 262.675 475.509 262.831 cv
475.509 262.994 475.557 263.141 475.626 263.278 cv
476.529 328.228 li
476.509 328.331 li
476.532 328.448 li
477.848 423.022 li
477.855 423.57 478.302 424.008 478.848 424.008 cv
478.861 424.008 li
479.414 424 479.855 423.546 479.848 422.995 cv
479.456 394.831 li
523.021 394.831 li
524.777 423.071 li
524.811 423.6 525.25 424.008 525.774 424.008 cv
525.838 424.006 li
526.389 423.972 526.808 423.498 526.773 422.946 cv
511.77 181.654 li
cp
.0196078 .298039 .411765 rgb
f
656.43 375.773 mo
656.087 382.634 652.048 422.723 652.048 422.723 cv
648.477 424.287 645.108 424.9 642.151 424.998 cv
635.361 425.231 630.734 422.723 630.734 422.723 cv
630.734 422.723 629.495 418.148 628.197 407.726 cv
627.65 403.324 626.928 395.333 626.332 388.452 cv
625.738 381.562 625.279 375.773 625.279 375.773 cv
625.289 376.476 626.518 377.131 628.569 377.639 cv
629.515 377.892 630.656 378.097 631.935 378.263 cv
632.004 378.273 li
632.87 378.399 633.818 378.499 634.804 378.584 cv
635.019 378.604 635.224 378.625 635.448 378.625 cv
635.575 378.643 635.711 378.653 635.837 378.653 cv
636.22 378.673 636.609 378.702 637.01 378.729 cv
637.331 378.751 637.663 378.751 637.995 378.761 cv
638.249 378.78 638.502 378.79 638.765 378.79 cv
639.458 378.81 640.151 378.82 640.854 378.82 cv
641.509 378.82 642.133 378.81 642.759 378.8 cv
642.973 378.79 643.186 378.79 643.392 378.769 cv
644.152 378.751 644.886 378.72 645.597 378.673 cv
646.104 378.643 646.603 378.615 647.101 378.565 cv
647.665 378.516 648.223 378.458 648.749 378.399 cv
649.141 378.349 649.52 378.303 649.881 378.253 cv
651.863 377.979 653.502 377.619 654.645 377.19 cv
655.785 376.769 656.43 376.281 656.43 375.773 cv
cp
.839216 .619608 .0705882 rgb
f
653.327 373.946 mo
651.96 373.589 650.219 373.291 648.211 373.083 cv
648.044 373.066 647.876 373.044 647.711 373.038 cv
646.675 372.938 645.577 372.854 644.435 372.805 cv
644.138 372.795 643.831 372.772 643.529 372.767 cv
642.665 372.737 641.768 372.722 640.855 372.722 cv
640.353 372.722 639.853 372.729 639.355 372.737 cv
639.248 372.737 li
638.326 372.75 637.431 372.795 636.564 372.841 cv
636.146 372.864 635.732 372.891 635.337 372.921 cv
635.306 372.921 li
634.636 372.973 633.991 373.038 633.366 373.097 cv
632.355 373.209 631.415 373.338 630.555 373.486 cv
630.283 373.537 630.024 373.576 629.78 373.638 cv
628.18 373.946 626.942 374.33 626.17 374.75 cv
625.595 375.064 625.282 375.41 625.282 375.763 cv
625.282 375.77 li
625.289 376.475 626.516 377.126 628.569 377.639 cv
629.519 377.886 630.656 378.094 631.933 378.265 cv
632.004 378.273 li
632.873 378.4 633.818 378.499 634.808 378.583 cv
635.02 378.601 635.227 378.618 635.447 378.628 cv
635.575 378.639 635.708 378.649 635.842 378.657 cv
636.222 378.674 636.61 378.698 637.013 378.731 cv
637.328 378.746 637.66 378.755 637.991 378.765 cv
638.245 378.783 638.506 378.789 638.768 378.789 cv
639.456 378.811 640.148 378.818 640.855 378.818 cv
641.505 378.818 642.132 378.811 642.76 378.8 cv
642.976 378.789 643.186 378.789 643.396 378.773 cv
644.151 378.755 644.882 378.72 645.593 378.669 cv
646.105 378.639 646.603 378.612 647.096 378.563 cv
648.089 378.477 649.02 378.376 649.885 378.251 cv
653.842 377.705 656.429 376.8 656.431 375.77 cv
656.431 375.763 li
656.431 375.08 655.273 374.458 653.327 373.946 cv
cp
.588235 .835294 .87451 rgb
f
635.842 378.657 mo
635.708 378.649 635.575 378.639 635.447 378.628 cv
635.227 378.618 635.02 378.601 634.808 378.583 cv
633.818 378.499 632.873 378.4 632.004 378.273 cv
631.933 378.265 li
631.433 377.159 630.671 375.565 629.78 373.638 cv
628.297 370.457 626.459 366.373 624.791 362.076 cv
624.682 361.808 624.583 361.524 624.475 361.247 cv
621.023 352.222 616.83 339.53 617.3 337.845 cv
617.779 336.078 623.609 341.128 629.534 352.479 cv
629.568 352.534 li
632.998 359.123 634.583 367.246 635.306 372.921 cv
635.344 373.189 li
635.344 373.229 li
635.633 375.591 635.771 377.501 635.842 378.657 cv
cp
.2 .709804 .552941 rgb
f
677.521 360.583 mo
677.202 361.558 662.531 356.719 662.531 356.719 cv
662.531 356.719 659.289 364.933 656.431 369.47 cv
655.458 371.028 654.349 372.571 653.327 373.946 cv
651.798 375.969 650.434 377.608 649.885 378.251 cv
649.02 378.376 648.089 378.477 647.096 378.563 cv
645.92 378.563 li
646.277 377.667 647.113 375.613 648.211 373.083 cv
649.935 369.062 652.314 363.834 654.423 359.933 cv
657.86 353.575 659.872 349.732 663.054 349.551 cv
666.226 349.357 677.852 359.614 677.521 360.583 cv
cp
.0431373 .458824 .478431 rgb
f
632.004 378.273 mo
631.933 378.265 li
630.656 378.094 629.519 377.886 628.569 377.639 cv
626.17 374.75 li
622.169 369.928 li
622.169 369.928 622.303 371.681 619.577 377.068 cv
616.849 382.458 609.122 389.393 608.736 388.879 cv
608.346 388.362 609.185 384.532 611.909 378.563 cv
614.635 372.59 622.424 361.301 623.399 361.042 cv
623.673 360.973 624.034 361.017 624.475 361.247 cv
625.586 361.835 627.112 363.583 628.458 367.305 cv
629.161 369.217 629.907 371.449 630.555 373.486 cv
631.16 375.362 631.672 377.094 632.004 378.273 cv
cp
.286275 .67451 .513726 rgb
f
653.062 359.802 mo
651.426 363.404 649.331 368.757 647.711 373.038 cv
646.801 375.41 646.047 377.447 645.593 378.669 cv
644.882 378.72 644.151 378.755 643.396 378.773 cv
643.419 378.109 643.428 377.299 643.442 376.389 cv
643.459 375.315 643.474 374.092 643.529 372.767 cv
643.7 368.73 644.214 363.74 645.92 359.095 cv
646.55 357.361 647.385 355.553 648.31 353.766 cv
651.84 346.946 656.76 340.529 657.468 340.995 cv
658.371 341.577 656.177 352.922 653.062 359.802 cv
cp
.584314 .74902 .517647 rgb
f
641.38 354.619 mo
641.338 356.104 641.239 357.685 641.098 359.323 cv
641.091 359.44 li
640.78 362.897 640.286 366.532 639.76 369.801 cv
639.721 370.062 li
639.559 370.99 639.4 371.891 639.248 372.737 cv
638.795 375.226 638.342 377.351 637.991 378.765 cv
637.66 378.755 637.328 378.746 637.013 378.731 cv
636.61 378.698 636.222 378.674 635.842 378.657 cv
635.708 378.649 635.575 378.639 635.447 378.628 cv
635.431 377.229 635.397 375.315 635.344 373.229 cv
635.344 373.189 li
635.337 372.921 li
635.235 369.086 635.064 364.7 634.763 361.688 cv
634.247 356.621 633.47 351.584 633.397 346.946 cv
633.397 346.94 li
633.375 345.637 633.413 344.368 633.52 343.125 cv
634.044 337.484 633.204 331.316 633.067 325.025 cv
632.939 318.722 635.344 315.347 635.276 316.325 cv
635.21 317.296 637.997 327.031 638.52 332.679 cv
639.044 338.325 641.639 344.883 641.38 354.619 cv
cp
.286275 .67451 .513726 rgb
f
648.31 353.761 mo
648.31 353.766 li
648.039 355.625 647.765 357.433 647.539 359.162 cv
647.101 362.494 645.694 368.139 644.435 372.805 cv
644.082 374.092 643.746 375.315 643.442 376.389 cv
643.176 377.315 642.954 378.136 642.76 378.8 cv
642.132 378.811 641.505 378.818 640.855 378.818 cv
640.148 378.818 639.456 378.811 638.768 378.789 cv
638.809 377.204 639.044 375.109 639.355 372.737 cv
639.459 371.874 639.589 370.972 639.721 370.062 cv
639.76 369.801 li
640.203 366.549 640.72 362.99 641.077 359.545 cv
641.091 359.44 li
641.098 359.323 li
641.938 351.458 644.363 342.612 644.752 336.961 cv
645.141 331.252 644.427 327.875 645.203 327.42 cv
645.984 326.975 649.096 332.937 649.487 338.972 cv
649.774 343.386 649.05 348.705 648.31 353.761 cv
cp
.0431373 .458824 .478431 rgb
f
637.013 378.731 mo
636.61 378.698 636.222 378.674 635.842 378.657 cv
635.708 378.649 635.575 378.639 635.447 378.628 cv
635.227 378.618 635.02 378.601 634.808 378.583 cv
634.394 377.068 633.886 375.192 633.366 373.097 cv
632.193 368.418 630.92 362.695 630.283 357.727 cv
630.024 355.704 629.78 353.978 629.534 352.479 cv
628.548 346.165 627.789 344.091 627.424 341.834 cv
626.976 339.043 626.77 334.691 626.574 331.056 cv
626.39 327.42 626.255 324.442 626.842 324.89 cv
627.424 325.346 630.345 328.652 631.155 334.37 cv
631.577 337.31 632.499 342.146 633.397 346.94 cv
633.397 346.946 li
634.224 351.452 635.022 355.892 635.344 358.696 cv
635.676 361.685 636.171 367.707 636.564 372.841 cv
636.737 375.08 636.895 377.15 637.013 378.731 cv
cp
.737255 .752941 .478431 rgb
f
656.43 375.773 mo
656.087 382.634 652.048 422.723 652.048 422.723 cv
648.477 424.287 645.108 424.9 642.151 424.998 cv
644.748 410.184 647.442 389.067 648.749 378.399 cv
649.141 378.349 649.52 378.303 649.881 378.253 cv
651.863 377.979 653.502 377.619 654.645 377.19 cv
655.785 376.769 656.43 376.281 656.43 375.773 cv
cp
.788235 .54902 .0235294 rgb
f
60.4161 425.013 mo
60.4161 425.013 73.5674 432.779 93.2045 425.013 cv
93.2045 425.013 68.9902 420.779 60.4161 425.013 cv
0 .388235 .478431 rgb
f
91.4936 415.937 mo
88.984 422.38 84.7055 426.982 77.5924 426.982 cv
53.9663 426.982 61.5884 376.174 61.5884 376.174 cv
93.5972 376.174 li
93.5972 376.174 97.3169 400.989 91.4936 415.937 cv
.0352941 .45098 .576471 rgb
f
77.5924 426.982 mo
63.2298 426.982 60.4152 408.206 60.4161 393.482 cv
60.4166 383.985 61.5884 376.174 61.5884 376.174 cv
69.5357 376.174 li
69.9204 385.798 72.6441 414.495 91.4936 415.937 cv
90.4111 418.716 88.9995 421.153 87.1733 423.025 cv
84.7656 425.494 81.6374 426.982 77.5924 426.982 cv
.027451 .388235 .509804 rgb
f
76.7915 276.975 mo
76.6685 273.958 76.4722 271.073 76.1626 268.793 cv
75.8833 266.742 75.48 264.727 74.979 262.856 cv
73.3647 256.807 70.731 252.294 67.9204 253.194 cv
64.2407 254.371 68.0679 260.847 69.3921 265.85 cv
70.3599 269.509 71.5903 275.454 72.7017 280.689 cv
75.0913 288.022 76.8979 294.991 76.8979 294.991 cv
76.8979 294.991 77.1372 285.462 76.7915 276.975 cv
cp
.2 .709804 .552941 rgb
f
72.7017 280.689 mo
71.0552 275.639 69.1323 270.416 67.3325 267.175 cv
62.9165 259.228 59.8257 255.549 59.0894 258.049 cv
58.355 260.552 62.2563 270.982 64.6821 276.133 cv
65.1665 277.158 65.9438 278.959 66.8745 281.176 cv
68.4126 281.758 70.5356 286.886 73.3657 292.881 cv
76.7017 299.946 76.8979 305.833 76.8979 305.833 cv
76.8979 294.991 li
76.8979 294.991 75.0913 288.022 72.7017 280.689 cv
cp
.286275 .67451 .513726 rgb
f
73.3657 292.881 mo
70.5356 286.886 68.4126 281.758 66.8745 281.176 cv
66.6099 281.076 66.3589 281.099 66.1284 281.291 cv
66.105 281.304 li
65.4048 281.917 65.1782 283.438 65.4517 286.015 cv
65.5435 286.883 65.6929 287.868 65.8989 288.98 cv
66.4556 291.97 67.4263 295.857 68.8521 300.796 cv
69.1138 301.703 69.3813 302.537 69.6519 303.333 cv
69.7788 303.708 69.9058 304.067 70.0337 304.417 cv
73.0132 312.599 76.2339 314.693 76.8003 315.004 cv
76.8979 315.056 li
76.8979 305.833 li
76.8979 305.833 76.7017 299.946 73.3657 292.881 cv
cp
.2 .709804 .552941 rgb
f
66.105 281.304 mo
66.1284 281.291 li
65.0737 277.996 60.7534 264.912 58.4673 264.527 cv
55.8521 264.084 57.1147 268.843 58.4673 272.473 cv
59.6304 275.592 65.4497 286.027 65.4497 286.027 cv
65.4517 286.015 li
65.1782 283.438 65.4048 281.917 66.105 281.304 cv
cp
.403922 .741176 .54902 rgb
f
70.0337 304.417 mo
69.9019 304.094 69.7817 303.772 69.686 303.455 cv
69.6519 303.333 li
69.3813 302.537 69.1138 301.703 68.8521 300.796 cv
67.4263 295.857 66.4556 291.97 65.8989 288.98 cv
65.104 286.975 64.1821 285.564 63.0952 285.423 cv
60.1665 285.046 60.771 292.779 62.2808 299.074 cv
62.5327 300.121 62.8052 301.132 63.0952 302.054 cv
65.1245 308.531 71.5991 318.212 76.8979 318.523 cv
76.8003 315.004 li
76.2339 314.693 73.0132 312.599 70.0337 304.417 cv
cp
.0431373 .458824 .478431 rgb
f
63.0952 302.054 mo
62.8052 301.132 62.5327 300.121 62.2808 299.074 cv
58.5737 291.339 53.8579 283.07 52.7622 283.07 cv
51.5835 283.07 50.9966 285.817 52.7622 289.093 cv
54.5278 292.37 54.1353 301.516 60.021 309.562 cv
65.9077 317.608 76.8979 318.523 76.8979 318.523 cv
71.5991 318.212 65.1245 308.531 63.0952 302.054 cv
cp
f
95.2007 291.521 mo
93.9282 291.694 92.0308 292.724 89.4077 294.991 cv
86.8091 297.239 83.8433 301.908 81.4517 306.177 cv
78.8315 310.859 76.8979 315.056 76.8979 315.056 cv
76.8979 319.57 li
76.8979 319.57 81.0181 311.916 88.8677 305.637 cv
90.4829 304.344 92.0776 303.287 93.5991 302.405 cv
96.2495 298.669 97.2075 295.246 97.2075 293.519 cv
97.2075 292.146 96.5679 291.335 95.2007 291.521 cv
cp
.737255 .752941 .478431 rgb
f
93.5991 302.405 mo
92.0776 303.287 90.4829 304.344 88.8677 305.637 cv
81.0181 311.916 76.8979 319.57 76.8979 319.57 cv
76.8979 320.157 li
76.8979 323.494 li
76.8979 323.494 85.1401 319.374 92.9888 312.897 cv
100.836 306.422 104.175 298.375 104.175 298.375 cv
104.175 298.375 99.4663 299.004 93.5991 302.405 cv
cp
.584314 .74902 .517647 rgb
f
76.8979 304.458 mo
76.8979 304.458 78.8589 292.685 81.8032 285.423 cv
84.7466 278.165 91.0269 268.61 94.1665 269.756 cv
97.3062 270.904 93.5767 278.689 90.5356 287.06 cv
87.4946 295.432 76.8979 315.056 76.8979 315.056 cv
76.8979 304.458 li
cp
.286275 .67451 .513726 rgb
f
76.7612 276.286 mo
76.7407 275.852 79.106 267.322 81.4604 261.729 cv
83.8159 256.136 85.938 253.928 86.1284 256.579 cv
86.3179 259.228 84.2563 263.613 83.0796 269.663 cv
81.9028 275.711 79.0435 298.081 76.8979 304.458 cv
76.7612 276.286 li
cp
.0431373 .458824 .478431 rgb
f
79.106 236.416 mo
77.1929 235.68 75.1567 240.968 74.5435 250.25 cv
74.313 253.74 74.5698 258.4 74.979 262.856 cv
75.48 264.727 75.8833 266.742 76.1626 268.793 cv
76.4722 271.073 76.6685 273.958 76.7915 276.975 cv
77.0718 275.932 79.2905 267.537 79.8423 260.601 cv
80.4302 253.194 81.019 237.151 79.106 236.416 cv
cp
.737255 .752941 .478431 rgb
f
99.1206 274.035 mo
94.2651 277.804 91.5815 284.254 91.5815 284.254 cv
89.9897 288.452 81.4839 306.112 81.4517 306.177 cv
83.8433 301.908 86.8091 297.239 89.4077 294.991 cv
92.0308 292.724 93.9282 291.694 95.2007 291.521 cv
96.8833 288.647 102.395 279.114 104.175 274.458 cv
106.283 268.937 103.979 270.265 99.1206 274.035 cv
cp
.0431373 .458824 .478431 rgb
f
85.0864 261.948 mo
86.5435 257.331 90.7329 251.133 93.0884 248.925 cv
95.4429 246.718 97.061 245.688 97.2075 247.601 cv
97.355 249.514 95.5337 253.041 91.147 261.948 cv
86.7593 270.854 79.0435 294.991 79.0435 294.991 cv
79.0435 294.991 81.2056 274.234 85.0864 261.948 cv
cp
.403922 .741176 .54902 rgb
f
77.4585 284.439 mo
77.4448 284.552 77.4321 284.665 77.4185 284.776 cv
77.4175 284.535 li
77.4585 284.439 li
cp
78.0522 376.174 mo
78.1743 374.675 77.4604 328.235 77.4868 321.302 cv
78.5356 320.585 86.6968 314.949 89.6899 311.116 cv
89.7896 310.987 89.7671 310.801 89.6372 310.701 cv
89.5122 310.604 89.3257 310.626 89.2251 310.753 cv
86.5464 314.186 79.3579 319.286 77.4897 320.583 cv
77.4956 319.174 77.4985 317.68 77.4985 316.117 cv
78.1733 315.081 85.8052 303.377 88.7358 301.46 cv
88.8716 301.372 88.9097 301.188 88.8208 301.053 cv
88.7319 300.916 88.5483 300.879 88.4136 300.968 cv
85.6938 302.747 79.4038 312.143 77.5005 315.039 cv
77.5034 312.968 77.5024 310.779 77.4985 308.499 cv
77.8315 307.566 83.3755 292.123 86.3823 286.946 cv
86.4644 286.805 86.4165 286.625 86.2759 286.543 cv
86.1333 286.462 85.9546 286.508 85.8735 286.651 cv
83.3394 291.015 79.0356 302.557 77.4956 306.776 cv
77.4888 301.517 77.4683 295.808 77.4419 289.888 cv
77.7446 286.951 79.2095 273.33 80.6841 269.774 cv
80.7476 269.625 80.6763 269.454 80.5259 269.389 cv
80.3765 269.326 80.2026 269.398 80.1421 269.549 cv
79.1128 272.027 78.1167 279.019 77.4829 284.231 cv
77.4712 284.134 77.4478 283.964 77.4126 283.72 cv
77.3735 276.031 77.3257 268.15 77.2739 260.599 cv
77.272 260.437 77.1411 260.306 76.979 260.306 cv
76.9761 260.306 li
76.814 260.308 76.6821 260.44 76.6841 260.603 cv
76.7222 266.139 76.7622 272.787 76.7983 279.795 cv
75.8423 274.155 73.9468 264.793 71.3638 260.929 cv
71.271 260.793 71.0874 260.757 70.9556 260.847 cv
70.8198 260.937 70.7827 261.121 70.8735 261.255 cv
74.1313 266.131 76.355 280.53 76.8188 283.738 cv
76.8276 285.786 76.8384 287.848 76.8462 289.917 cv
76.8208 290.17 76.8042 290.344 76.7974 290.4 cv
76.8501 290.57 li
76.8765 297.011 76.897 303.439 76.9058 309.325 cv
75.3481 305.21 71.0464 293.911 69.9214 291.375 cv
69.856 291.226 69.6812 291.161 69.5317 291.224 cv
69.3843 291.291 69.3179 291.465 69.3833 291.615 cv
70.7183 294.622 76.563 310.078 76.9087 310.989 cv
76.9116 312.859 76.9126 314.665 76.9126 316.391 cv
75.9409 316.042 70.0376 313.439 66.4106 300.716 cv
66.3667 300.561 66.2046 300.467 66.0474 300.514 cv
65.8911 300.557 65.8003 300.72 65.8452 300.876 cv
69.8901 315.07 76.6206 316.935 76.9058 317.009 cv
76.9126 317.009 li
76.9077 326.452 76.8833 374.923 76.7612 376.174 cv
78.0522 376.174 li
cp
.156863 .572549 .52549 rgb
f
226.202 419.491 mo
226.242 426.331 216.752 433.05 206.672 434.75 cv
194.842 436.75 184.432 435.71 158.292 433.38 cv
130.862 430.93 132.052 417.411 133.282 403.13 cv
133.822 396.941 135.042 391.071 137.192 386.271 cv
140.382 379.151 145.612 374.38 153.672 374.411 cv
172.102 374.481 183.682 384.18 192.282 392.031 cv
197.202 396.521 201.152 400.411 204.842 401.561 cv
207.202 402.291 209.332 403.031 211.272 403.84 cv
217.692 406.491 221.972 409.84 225.262 415.911 cv
225.902 417.09 226.192 418.291 226.202 419.491 cv
cp
.839216 .619608 .0705882 rgb
f
243.537 436.66 mo
243.537 436.66 243.537 458.247 243.537 458.414 cv
243.537 458.581 258.037 456.581 262.704 456.081 cv
261.342 436.047 li
243.537 436.66 li
cp
.847059 .8 .705882 rgb
f
238.894 453.165 mo
238.894 453.165 223.068 454.921 212.131 458.088 cv
201.483 438.258 li
201.483 438.258 214.535 435.907 222.281 434.248 cv
222.281 434.248 235.76 447.907 238.894 453.165 cv
cp
.909804 .878431 .803922 rgb
f
556.424 322.369 mo
555.393 325.752 552.882 327.174 552.558 327.174 cv
552.558 327.174 552.417 326.793 552.174 326.2 cv
552.159 325.971 552.148 325.752 552.133 325.516 cv
552.133 325.516 554.97 323.629 554.252 319.136 cv
553.552 314.648 552.718 314.774 551.536 315.717 cv
550.353 316.665 549.644 319.847 549.644 319.847 cv
549.644 319.847 548.031 315.529 544.524 312.636 cv
542.115 310.643 538.807 309.311 534.522 310.522 cv
531.261 311.425 526.99 313.875 526.067 317.403 cv
524.41 317.299 521.404 315.573 520.659 312.445 cv
519.875 309.14 521.688 305.359 523.345 304.094 cv
524.999 302.837 529.091 304.332 531.614 301.729 cv
533.485 299.794 536.196 298.028 538.475 297.456 cv
539.248 297.258 539.97 297.206 540.593 297.326 cv
543.034 297.8 544.051 300.867 546.179 301.108 cv
548.304 301.34 552.01 302.837 554.609 307.795 cv
557.209 312.761 557.443 318.98 556.424 322.369 cv
.627451 .2 .188235 rgb
f
556.424 322.369 mo
555.393 325.752 552.882 327.174 552.558 327.174 cv
552.558 327.174 552.417 326.793 552.174 326.2 cv
552.159 325.971 552.148 325.752 552.133 325.516 cv
552.133 325.516 554.97 323.629 554.252 319.136 cv
553.552 314.648 552.718 314.774 551.536 315.717 cv
550.353 316.665 549.644 319.847 549.644 319.847 cv
549.644 319.847 548.031 315.529 544.524 312.636 cv
545.336 308.055 542.436 304.925 538.475 297.456 cv
539.248 297.258 539.97 297.206 540.593 297.326 cv
543.034 297.8 544.051 300.867 546.179 301.108 cv
548.304 301.34 552.01 302.837 554.609 307.795 cv
557.209 312.761 557.443 318.98 556.424 322.369 cv
.537255 .152941 .152941 rgb
f
588.272 367.223 mo
588.272 367.223 583.197 366.186 577.235 367.965 cv
576.926 368.059 576.601 368.162 576.279 368.278 cv
574.996 368.708 573.675 369.289 572.37 370.043 cv
572.33 370.061 li
572.33 370.061 573.038 375.489 574.098 378.443 cv
574.098 378.443 568.429 375.958 561.34 375.014 cv
554.252 374.068 547.164 372.775 547.164 372.775 cv
547.164 372.775 543.626 368.756 541.612 367.102 cv
539.604 365.448 537.126 365.09 537.126 366.035 cv
537.126 366.982 541.263 369.937 541.263 369.937 cv
541.263 369.937 538.052 368.926 535.443 368.493 cv
534.533 363.361 li
531.565 346.544 li
531.565 346.544 533.77 345.461 536.322 344.259 cv
538.947 343.021 541.945 341.654 543.267 341.238 cv
547.991 340.754 li
561.934 339.347 li
561.934 339.347 579.652 345.243 582.962 349.494 cv
586.272 353.75 588.272 367.223 588.272 367.223 cv
cp
.886275 .235294 .215686 rgb
f
562.897 389.709 mo
562.086 390.96 560.959 392.556 559.835 394.108 cv
557.764 396.987 555.714 399.708 555.714 399.708 cv
549.809 399.36 536.885 397.585 536.885 397.585 cv
536.885 397.585 536.179 393.092 535.82 386.007 cv
535.781 385.261 535.756 384.497 535.735 383.732 cv
535.688 382.046 535.667 380.344 535.667 378.756 cv
538.938 379.892 544.524 380.844 546.103 381.514 cv
546.103 381.514 554.724 385.685 562.897 389.709 cv
cp
f
547.991 340.754 mo
547.991 344.183 li
545.648 345.225 540.526 346.043 536.322 344.259 cv
538.947 343.021 541.945 341.654 543.267 341.238 cv
547.991 340.754 li
cp
.776471 .156863 .156863 rgb
f
546.103 381.514 mo
546.103 381.514 554.724 385.685 562.897 389.709 cv
562.086 390.96 560.959 392.556 559.835 394.108 cv
555.848 391.966 548.901 388.203 545.629 386.24 cv
542.379 384.295 538.099 383.835 535.735 383.732 cv
535.688 382.046 535.667 380.344 535.667 378.756 cv
538.938 379.892 544.524 380.844 546.103 381.514 cv
cp
f
572.33 370.061 mo
572.33 370.061 573.038 375.489 574.098 378.443 cv
574.098 378.443 568.429 375.958 561.34 375.014 cv
554.252 374.068 547.164 372.775 547.164 372.775 cv
547.164 372.775 543.626 368.756 541.612 367.102 cv
539.604 365.448 537.126 365.09 537.126 366.035 cv
537.126 366.982 541.263 369.937 541.263 369.937 cv
541.263 369.937 538.052 368.926 535.443 368.493 cv
534.533 363.361 li
535.233 362.775 li
543.429 364.192 548.465 372.229 548.465 372.229 cv
559.809 371.278 571.147 374.116 571.147 374.116 cv
571.782 364.345 li
577.235 367.965 li
575.641 368.439 573.976 369.11 572.33 370.061 cv
cp
f
576.279 368.278 mo
574.996 368.708 573.675 369.289 572.37 370.043 cv
572.087 368.238 571.742 365.346 571.934 362.453 cv
572.254 357.728 574.145 356.633 574.145 356.633 cv
574.145 356.633 575.934 365.216 576.279 368.278 cv
cp
f
552.33 325.36 mo
552.209 325.462 552.133 325.516 552.133 325.516 cv
552.148 325.752 552.159 325.971 552.174 326.2 cv
552.596 331.689 551.174 335.574 549.278 338.125 cv
547.784 340.128 545.991 341.309 544.571 341.819 cv
544.393 341.885 544.223 341.944 544.051 341.997 cv
540.893 343.021 537.566 343.08 532.757 338.042 cv
527.672 332.731 525.546 322.332 525.894 318.31 cv
525.924 317.997 525.989 317.705 526.067 317.403 cv
526.99 313.875 531.261 311.425 534.522 310.522 cv
538.275 309.462 541.273 310.353 543.578 311.93 cv
547.738 314.764 549.644 319.847 549.644 319.847 cv
549.644 319.847 550.353 316.665 551.536 315.717 cv
552.718 314.774 553.552 314.648 554.252 319.136 cv
554.845 322.905 552.967 324.828 552.33 325.36 cv
.952941 .713726 .670588 rgb
f
549.278 338.125 mo
549.346 336.092 549.346 333.553 549.174 330.599 cv
548.796 323.959 546.056 316.633 543.578 311.93 cv
547.738 314.764 549.644 319.847 549.644 319.847 cv
549.644 319.847 550.353 316.665 551.536 315.717 cv
551.923 315.408 552.273 315.187 552.593 315.187 cv
553.25 315.187 553.781 316.118 554.252 319.136 cv
554.331 319.637 554.366 320.105 554.366 320.541 cv
554.368 323.391 552.882 324.898 552.33 325.36 cv
552.209 325.462 552.133 325.516 552.133 325.516 cv
552.133 325.516 li
552.133 325.516 li
552.133 325.516 li
552.133 325.516 li
552.148 325.752 552.159 325.971 552.174 326.2 cv
552.225 326.864 552.249 327.506 552.248 328.124 cv
552.247 329.362 552.148 330.507 551.969 331.564 cv
551.934 331.768 551.896 331.969 551.856 332.167 cv
551.79 332.492 551.716 332.807 551.635 333.114 cv
551.097 335.159 550.25 336.817 549.278 338.125 cv
.956863 .615686 .588235 rgb
f
452.989 441.103 mo
452.933 441.059 li
452.989 441.103 li
cp
.952941 .713726 .670588 rgb
f
454.876 440.084 mo
454.822 440.035 li
454.876 440.084 li
cp
f
543.662 318.274 mo
543.662 318.274 541.063 317.013 538.307 318.037 cv
535.551 319.06 535.551 320.714 536.182 321.108 cv
536.812 321.5 538.387 320.478 539.726 319.534 cv
541.063 318.587 543.662 318.274 543.662 318.274 cv
cp
.627451 .2 .188235 rgb
f
530.823 323.473 mo
531.149 322.882 529.563 321.582 528.066 321.895 cv
526.572 322.211 526.139 323.075 526.139 323.075 cv
526.532 324.734 li
526.532 324.734 527.592 323.709 528.461 323.786 cv
529.326 323.862 530.43 324.179 530.823 323.473 cv
cp
f
455.725 435.154 mo
455.725 435.154 477.699 410.697 482.311 405.498 cv
486.916 400.298 493.298 392.503 494.006 392.386 cv
494.71 392.27 517.869 393.682 536.885 397.585 cv
555.316 399.592 li
555.316 399.592 562.524 390.258 565.714 385.766 cv
568.903 381.282 572.681 380.102 577.529 382.22 cv
582.375 384.349 597.492 392.27 600.919 400.894 cv
604.348 409.516 600.213 416.722 593.832 420.737 cv
587.453 424.755 578.829 429.955 560.162 426.41 cv
560.162 426.41 549.056 435.037 534.999 437.872 cv
530.271 437.04 li
539.368 423.097 li
502.39 412.002 li
502.39 412.002 502.862 415.542 493.056 422.159 cv
483.251 428.775 457.971 436.923 457.971 436.923 cv
455.725 435.154 li
cp
.137255 .0392157 .0666667 rgb
f
455.725 435.154 mo
436.942 445.9 li
436.942 445.9 452.064 447.084 457.853 444.25 cv
457.971 436.923 li
455.725 435.154 li
cp
.92549 .596078 .427451 rgb
f
530.271 437.04 mo
530.271 437.04 518.695 444.367 516.212 447.438 cv
513.73 450.509 513.022 451.689 513.378 452.874 cv
513.73 454.054 518.577 454.527 521.885 453.817 cv
525.19 453.111 531.928 446.494 531.928 446.494 cv
534.522 437.75 li
530.271 437.04 li
cp
f
541.965 375.735 mo
519.754 383.522 li
498.845 376.557 li
493.099 358.703 li
489.755 348.323 li
508.883 355.641 li
531.453 342.292 li
538.731 365.439 li
541.965 375.735 li
cp
.980392 .941176 .741176 rgb
f
491.286 348.873 mo
491.286 348.519 493.413 345.126 496.248 343.831 cv
496.248 343.831 504.044 347.375 507.235 352.691 cv
508.769 353.048 li
508.769 353.048 515.859 341.663 528.975 343.794 cv
508.89 355.645 li
491.286 348.873 li
cp
.937255 .901961 .74902 rgb
f
532.915 333.822 mo
532.587 333.822 532.367 333.79 532.358 333.786 cv
532.235 333.768 532.148 333.651 532.164 333.526 cv
532.854 327.402 531.272 324.729 531.25 324.698 cv
531.183 324.585 531.219 324.438 531.33 324.371 cv
531.444 324.303 531.586 324.34 531.657 324.447 cv
531.724 324.563 533.305 327.206 532.658 333.347 cv
533.309 333.393 535.177 333.366 535.718 331.483 cv
535.752 331.353 535.883 331.278 536.009 331.318 cv
536.13 331.353 536.205 331.483 536.168 331.609 cv
535.613 333.562 533.829 333.822 532.915 333.822 cv
cp
.6 .188235 .133333 rgb
f
551.697 323.075 mo
551.605 323.075 551.519 323.021 551.48 322.932 cv
550.752 321.238 551.203 318.135 551.226 318.005 cv
551.245 317.875 551.355 317.782 551.494 317.804 cv
551.624 317.823 551.711 317.943 551.693 318.073 cv
551.688 318.104 551.238 321.175 551.914 322.744 cv
551.966 322.87 551.91 323.008 551.789 323.057 cv
551.697 323.075 li
cp
f
551.458 321.264 mo
551.299 321.202 li
551.201 321.113 551.199 320.965 551.286 320.867 cv
552.391 319.686 li
552.478 319.592 552.627 319.588 552.723 319.672 cv
552.815 319.762 552.819 319.915 552.734 320.008 cv
551.633 321.193 li
551.458 321.264 li
cp
f
535.155 336.15 mo
542.401 333.553 li
542.401 333.553 542.954 337.259 540.039 338.515 cv
537.126 339.776 535.155 336.15 535.155 336.15 cv
cp
1 1 1 rgb
f
572.643 373.25 mo
572.535 373.25 572.436 373.173 572.417 373.061 cv
571.474 368.636 571.489 362.927 571.539 360.678 cv
571.543 360.567 li
571.543 360.438 571.65 360.33 571.777 360.33 cv
571.907 360.33 572.014 360.438 572.014 360.567 cv
572.01 360.692 li
571.961 362.922 571.948 368.582 572.875 372.963 cv
572.906 373.088 572.821 373.218 572.693 373.245 cv
572.643 373.25 li
cp
.137255 .0392157 .0666667 rgb
f
572.014 367.102 mo
571.822 367.004 li
571.744 366.901 571.771 366.753 571.879 366.673 cv
571.923 366.647 576.592 363.401 584.368 362.931 cv
584.495 362.922 584.605 363.021 584.618 363.156 cv
584.625 363.28 584.527 363.397 584.396 363.401 cv
576.753 363.867 572.195 367.031 572.15 367.057 cv
572.014 367.102 li
cp
f
501.208 415.305 mo
501.071 415.26 li
500.965 415.184 500.941 415.033 501.02 414.93 cv
502.275 413.205 502.563 410.218 501.862 406.057 cv
501.822 405.82 501.801 405.667 501.801 405.618 cv
501.801 405.489 501.909 405.381 502.037 405.381 cv
502.169 405.381 502.271 405.489 502.273 405.614 cv
502.273 405.664 502.299 405.789 502.33 405.975 cv
503.049 410.272 502.736 413.378 501.402 415.208 cv
501.208 415.305 li
cp
.92549 .584314 .419608 rgb
f
533.107 421.327 mo
533.039 421.323 li
502.325 412.225 li
502.197 412.185 502.128 412.055 502.167 411.931 cv
502.2 411.805 502.33 411.729 502.457 411.769 cv
533.173 420.867 li
533.302 420.902 533.371 421.032 533.331 421.162 cv
533.305 421.264 533.21 421.327 533.107 421.327 cv
cp
f
537.598 426.173 mo
537.464 426.132 li
537.354 426.056 537.33 425.91 537.403 425.801 cv
537.592 425.533 556.232 398.77 559.854 393.745 cv
559.928 393.638 560.075 393.621 560.184 393.692 cv
560.289 393.763 560.312 393.916 560.237 394.018 cv
556.616 399.038 537.978 425.801 537.793 426.074 cv
537.598 426.173 li
cp
.92549 .596078 .427451 rgb
f
559.453 427.116 mo
559.261 427.018 li
559.185 426.915 559.207 426.763 559.314 426.691 cv
574.97 415.561 574.813 401.278 574.812 401.134 cv
574.809 401.004 574.911 400.898 575.041 400.894 cv
575.178 400.894 575.279 400.992 575.284 401.122 cv
575.286 401.269 575.455 415.792 559.592 427.076 cv
559.453 427.116 li
cp
f
523.184 308.744 mo
523.061 308.744 522.955 308.644 522.948 308.519 cv
522.825 306.437 524.254 305.336 525.643 305.203 cv
525.766 305.18 525.886 305.283 525.896 305.413 cv
525.913 305.542 525.816 305.654 525.688 305.667 cv
524.522 305.784 523.314 306.718 523.421 308.493 cv
523.427 308.623 523.329 308.735 523.197 308.744 cv
523.184 308.744 li
cp
.137255 .0392157 .0666667 rgb
f
525.43 315.711 mo
525.369 315.708 li
525.242 315.672 525.166 315.542 525.201 315.417 cv
525.818 313.061 528.154 311.609 529 311.242 cv
529.117 311.189 529.258 311.247 529.308 311.367 cv
529.359 311.488 529.306 311.626 529.184 311.676 cv
528.449 311.993 526.226 313.378 525.66 315.538 cv
525.627 315.64 525.535 315.711 525.43 315.711 cv
cp
f
534.882 304.961 mo
534.724 304.904 li
534.625 304.819 534.616 304.666 534.703 304.573 cv
535.268 303.938 536.075 303.576 536.885 303.616 cv
537.514 303.638 538.04 303.901 538.376 304.344 cv
538.454 304.456 538.437 304.603 538.334 304.68 cv
538.229 304.756 538.076 304.733 538.001 304.63 cv
537.75 304.299 537.348 304.107 536.867 304.085 cv
536.205 304.063 535.515 304.367 535.057 304.88 cv
534.882 304.961 li
cp
f
552.01 309.096 mo
551.878 309.096 551.775 308.989 551.775 308.859 cv
551.775 308.251 551.536 306.132 548.467 304.46 cv
548.358 304.399 548.313 304.254 548.376 304.139 cv
548.44 304.022 548.583 303.983 548.698 304.044 cv
551.992 305.841 552.247 308.184 552.247 308.859 cv
552.247 308.989 552.14 309.096 552.01 309.096 cv
cp
f
546.69 312.878 mo
546.593 312.878 546.498 312.811 546.465 312.708 cv
546.12 311.559 544.12 309.27 543.65 309.083 cv
543.534 309.03 543.472 308.891 543.521 308.774 cv
543.567 308.653 543.711 308.596 543.829 308.644 cv
544.476 308.9 546.545 311.328 546.923 312.569 cv
546.959 312.699 546.888 312.829 546.762 312.87 cv
546.69 312.878 li
cp
f
538.707 324.076 mo
539.198 325.211 539.236 326.289 538.798 326.477 cv
538.358 326.668 537.603 325.895 537.115 324.755 cv
536.626 323.616 536.588 322.542 537.026 322.356 cv
537.466 322.163 538.22 322.932 538.707 324.076 cv
cp
.376471 .0666667 .0666667 rgb
f
541.965 375.735 mo
519.754 383.522 li
498.845 376.557 li
493.099 358.703 li
500.198 362.816 518.687 371.564 538.731 365.439 cv
541.965 375.735 li
cp
.886275 .827451 .576471 rgb
f
530.91 326.754 mo
531.402 327.889 531.442 328.966 531.002 329.159 cv
530.562 329.342 529.808 328.574 529.318 327.437 cv
528.832 326.298 528.792 325.221 529.225 325.029 cv
529.669 324.845 530.419 325.614 530.91 326.754 cv
cp
.376471 .0666667 .0666667 rgb
f
562.33 339.458 mo
562.33 339.458 559.572 345.489 557.678 347.38 cv
555.792 349.266 551.063 351.028 547.05 349.266 cv
545.604 348.636 544.777 346.915 544.382 345.042 cv
544.153 344.023 544.06 342.958 544.051 341.998 cv
544.223 341.944 544.393 341.885 544.571 341.819 cv
547.804 340.67 552.936 335.999 552.174 326.2 cv
552.159 325.971 552.148 325.752 552.133 325.516 cv
552.133 325.516 552.209 325.462 552.33 325.36 cv
553.175 327.768 555.037 333.021 556.064 335.511 cv
556.387 336.276 556.621 336.776 556.735 336.861 cv
557.331 337.335 562.33 339.458 562.33 339.458 cv
cp
.952941 .713726 .670588 rgb
f
556.064 335.511 mo
553.426 342.163 548.22 344.59 544.382 345.042 cv
544.153 344.023 544.06 342.958 544.051 341.998 cv
544.223 341.944 544.393 341.885 544.571 341.819 cv
547.804 340.67 552.936 335.999 552.174 326.2 cv
552.159 325.971 552.148 325.752 552.133 325.516 cv
552.133 325.516 552.209 325.462 552.33 325.36 cv
553.175 327.768 555.037 333.021 556.064 335.511 cv
cp
.956863 .580392 .556863 rgb
f
535.943 381.756 mo
535.471 383.992 529.802 390.732 526.729 390.965 cv
523.655 391.207 515.68 387.299 515.68 387.299 cv
513.668 386.24 512.429 384.939 511.729 383.245 cv
511.049 381.658 510.839 379.731 510.897 377.321 cv
510.953 374.787 513.26 371.233 514.263 371.479 cv
514.632 371.564 514.441 378.265 514.441 378.265 cv
514.441 378.265 517.513 372.539 518.81 372.896 cv
520.076 373.236 516.973 379.021 516.813 379.32 cv
517.033 379.105 520.566 375.515 521.711 376.32 cv
522.835 377.111 519.548 381.233 519.249 381.6 cv
519.554 381.319 522.296 378.774 523.184 379.333 cv
524.127 379.918 521.586 382.82 521.586 382.82 cv
531.047 379.561 li
535.82 377.917 li
535.943 381.756 li
cp
.952941 .713726 .670588 rgb
f
535.943 381.756 mo
535.471 383.992 529.802 390.732 526.729 390.965 cv
523.655 391.207 515.68 387.299 515.68 387.299 cv
513.668 386.24 512.429 384.939 511.729 383.245 cv
514.67 384.68 520.85 386.119 524.363 386.007 cv
526.925 385.922 529.594 382.046 531.047 379.561 cv
535.82 377.917 li
535.943 381.756 li
cp
.956863 .580392 .556863 rgb
f
592.526 394.041 mo
589.938 398.529 579.42 397.943 570.204 393.33 cv
568.002 392.226 565.473 390.974 562.897 389.709 cv
554.724 385.685 546.103 381.514 546.103 381.514 cv
544.524 380.844 538.938 379.892 535.667 378.756 cv
534.297 378.287 533.331 377.782 533.228 377.263 cv
533.201 377.107 533.222 376.959 533.295 376.838 cv
533.572 376.347 534.574 376.097 535.688 375.976 cv
537.229 375.806 538.995 375.891 539.402 375.914 cv
539.015 375.855 537.377 375.619 535.696 375.203 cv
533.711 374.711 531.688 373.977 531.688 373.012 cv
531.688 372.065 533.731 372.123 535.766 372.422 cv
537.54 372.681 539.308 373.124 539.712 373.218 cv
539.308 373.065 537.531 372.386 535.79 371.578 cv
533.825 370.639 531.928 369.521 532.164 368.756 cv
532.35 368.162 533.777 368.211 535.443 368.493 cv
537.964 368.917 541.245 370.692 541.444 370.804 cv
541.188 370.572 537.126 366.951 537.126 366.035 cv
537.126 365.09 539.604 365.448 541.612 367.102 cv
543.626 368.756 547.164 372.775 547.164 372.775 cv
547.164 372.775 554.252 374.068 561.34 375.014 cv
568.429 375.958 574.098 378.443 574.098 378.443 cv
574.028 378.248 573.967 378.046 573.89 377.832 cv
572.955 374.795 572.33 370.061 572.33 370.061 cv
573.718 369.257 575.117 368.654 576.487 368.198 cv
582.771 366.106 588.272 367.223 588.272 367.223 cv
588.272 367.223 592.27 380.232 593.009 388.386 cv
593.234 390.912 593.139 392.98 592.526 394.041 cv
cp
.952941 .713726 .670588 rgb
f
592.526 394.041 mo
589.938 398.529 579.42 397.943 570.204 393.33 cv
568.002 392.226 565.473 390.974 562.897 389.709 cv
554.724 385.685 546.103 381.514 546.103 381.514 cv
544.524 380.844 538.938 379.892 535.667 378.756 cv
534.297 378.287 533.331 377.782 533.228 377.263 cv
533.201 377.107 533.222 376.959 533.295 376.838 cv
535.291 377.536 538.627 378.484 541.965 378.569 cv
541.965 378.569 548.465 379.266 553.426 381.989 cv
558.389 384.71 576.232 391.801 580.365 391.913 cv
583.604 391.998 589.769 391.438 593.009 388.386 cv
593.234 390.912 593.139 392.98 592.526 394.041 cv
cp
.956863 .580392 .556863 rgb
f
576.487 368.198 mo
576.194 372.422 576.111 379.15 576.111 379.15 cv
573.89 377.832 li
572.955 374.795 572.33 370.061 572.33 370.061 cv
573.718 369.257 575.117 368.654 576.487 368.198 cv
cp
f
525.66 391.122 mo
521.61 391.122 514.857 387.102 514.556 386.919 cv
514.443 386.852 514.406 386.705 514.478 386.593 cv
514.545 386.481 514.684 386.446 514.802 386.512 cv
514.878 386.562 522.45 391.077 526.226 390.617 cv
530.01 390.156 534.809 384.178 535.486 382.382 cv
535.53 382.256 535.664 382.194 535.79 382.244 cv
535.911 382.288 535.976 382.421 535.931 382.542 cv
535.209 384.47 530.31 390.598 526.281 391.081 cv
526.087 391.108 525.874 391.122 525.66 391.122 cv
cp
.137255 .0392157 .0666667 rgb
f
557.325 387.303 mo
557.223 387.282 li
554.623 385.98 546 381.729 546 381.729 cv
545.974 381.729 542.079 380.782 537.889 379.615 cv
533.775 378.475 533.047 377.536 532.877 376.848 cv
532.849 376.723 532.927 376.597 533.047 376.561 cv
533.184 376.522 533.307 376.606 533.336 376.736 cv
533.537 377.536 535.112 378.359 538.016 379.164 cv
542.214 380.33 546.118 381.278 546.158 381.287 cv
546.207 381.304 554.831 385.555 557.431 386.857 cv
557.549 386.916 557.596 387.062 557.539 387.173 cv
557.325 387.303 li
cp
f
577.289 380.451 mo
577.118 380.379 li
575.877 379.021 572.178 377.858 572.14 377.84 cv
572.02 377.804 571.948 377.67 571.987 377.545 cv
572.023 377.424 572.16 377.353 572.28 377.393 cv
572.441 377.442 576.141 378.609 577.469 380.057 cv
577.554 380.156 577.545 380.303 577.452 380.392 cv
577.289 380.451 li
cp
f
620.729 435.703 mo
619.658 439.359 613.987 441.969 604.187 444.559 cv
598.668 446.024 594.83 446.252 592.233 445.833 cv
592.121 445.814 592.017 445.796 591.913 445.779 cv
591.759 445.747 li
590.018 445.399 588.907 444.737 588.243 443.968 cv
586.585 442.082 583.393 429.797 581.153 420.933 cv
578.907 412.073 575.237 403.096 575.485 399.667 cv
575.658 397.035 579.446 395.042 582.754 393.665 cv
583.756 393.249 584.721 392.877 585.523 392.578 cv
587.997 391.63 594.142 389.627 596.032 389.865 cv
597.716 390.071 602.608 393.946 605.229 398.39 cv
605.549 398.925 605.832 399.475 606.077 400.021 cv
606.145 400.177 606.212 400.329 606.285 400.486 cv
608.536 405.65 612.101 414.313 612.101 414.313 cv
612.101 414.313 612.261 414.389 612.56 414.594 cv
612.573 414.594 li
612.705 414.684 612.872 414.794 613.063 414.938 cv
614.188 415.779 616.24 417.625 618.961 421.407 cv
623.212 427.317 621.797 432.042 620.729 435.703 cv
cp
.92549 .584314 .419608 rgb
f
578.963 395.949 mo
578.963 395.949 577.254 390.333 578.194 387.383 cv
579.145 384.429 582.392 382.95 584.993 384.254 cv
586.938 385.224 591.077 390.866 591.077 390.866 cv
588.476 391.755 li
588.476 391.755 584.815 386.556 583.867 386.32 cv
582.922 386.083 580.44 386.673 580.68 389.506 cv
580.917 392.345 581.507 394.353 581.507 394.353 cv
578.963 395.949 li
cp
f
591.913 445.779 mo
590.09 445.434 588.924 444.759 588.243 443.968 cv
586.585 442.082 583.393 429.797 581.153 420.933 cv
578.907 412.073 575.237 403.096 575.485 399.667 cv
575.658 397.035 579.446 395.042 582.754 393.665 cv
581.136 402.064 580.789 405.005 583.635 413.964 cv
586.826 424.012 590.25 432.864 590.955 437.594 cv
591.326 440.04 591.817 442.801 591.913 445.779 cv
cp
.858824 .490196 .32549 rgb
f
615.123 422.037 mo
609.036 429.23 592.008 433.056 589.821 433.522 cv
590.978 437.982 592.008 442.659 592.233 445.833 cv
592.121 445.814 592.017 445.796 591.913 445.779 cv
591.759 445.747 li
591.326 440.035 588.319 429.458 586.601 424.08 cv
586.013 422.275 585.409 420.629 584.815 419.042 cv
583.393 415.215 582.045 411.595 581.627 406.781 cv
581.006 399.74 587.939 395.479 590.531 394.71 cv
590.761 394.608 596.806 391.867 600.644 394.156 cv
602.195 395.082 603.84 396.736 605.229 398.39 cv
605.549 398.925 605.832 399.475 606.077 400.021 cv
606.145 400.177 606.212 400.329 606.285 400.486 cv
604.689 398.381 602.452 395.761 600.409 394.554 cv
596.779 392.399 590.761 395.13 590.704 395.157 cv
588.17 395.904 581.507 399.995 582.09 406.735 cv
582.506 411.487 583.852 415.068 585.255 418.873 cv
585.852 420.468 586.466 422.113 587.044 423.937 cv
587.3 424.71 587.575 425.595 587.867 426.561 cv
589.155 425.465 595.494 420.217 601.514 418.113 cv
606.894 416.235 611.108 415.005 612.56 414.594 cv
612.573 414.594 li
612.705 414.684 612.872 414.794 613.063 414.938 cv
612.186 415.184 607.656 416.458 601.668 418.559 cv
595.449 420.741 588.831 426.355 588.012 427.062 cv
588.556 428.876 589.143 430.938 589.699 433.065 cv
591.741 432.632 608.746 428.832 614.752 421.724 cv
614.84 421.63 614.991 421.613 615.096 421.693 cv
615.189 421.782 615.208 421.935 615.123 422.037 cv
cp
.137255 .0392157 .0666667 rgb
f
589.095 409.78 mo
587.933 406.391 li
591.506 404.335 596.684 402.631 597.704 402.31 cv
600.17 406.386 li
589.095 409.78 li
cp
600.729 406.404 mo
598.004 401.917 li
597.951 401.823 597.846 401.769 597.745 401.809 cv
597.676 401.832 591.527 403.731 587.525 406.083 cv
587.432 406.137 587.385 406.252 587.423 406.365 cv
588.725 410.146 li
588.755 410.24 588.847 410.307 588.947 410.307 cv
589.017 410.29 li
600.598 406.744 li
600.747 406.601 li
600.729 406.404 li
cp
f
323.342 450.914 mo
340.176 452.581 li
349.342 435.141 li
332.676 434.248 li
323.342 450.914 li
cp
.847059 .8 .705882 rgb
f
226.202 419.491 mo
226.242 426.331 216.752 433.05 206.672 434.75 cv
194.842 436.75 184.432 435.71 158.292 433.38 cv
130.862 430.93 132.052 417.411 133.282 403.13 cv
133.822 396.941 135.042 391.071 137.192 386.271 cv
151.032 404.09 149.442 406.34 152.332 412.411 cv
155.342 418.75 164.692 422.21 174.432 420.481 cv
184.172 418.75 204.372 414 211.612 414.46 cv
216.072 414.741 222.092 417.35 226.202 419.491 cv
cp
.788235 .54902 .0235294 rgb
f
211.272 403.84 mo
201.572 408.061 184.932 415.321 179.492 417.75 cv
171.642 421.25 166.342 419.411 162.362 416.581 cv
158.372 413.75 159.012 408.75 159.672 399.521 cv
159.672 399.521 174.492 393.88 192.282 392.031 cv
197.202 396.521 201.152 400.411 204.842 401.561 cv
207.202 402.291 209.332 403.031 211.272 403.84 cv
cp
f
277.216 423.282 mo
277.216 423.282 249.337 422.57 236.579 419.737 cv
223.818 416.898 213.657 409.217 213.657 409.217 cv
204.439 412.41 176.674 418.199 168.765 415.132 cv
160.854 412.047 158.293 402.486 158.293 402.486 cv
158.293 402.486 159.654 401.23 161.833 399.517 cv
165.333 396.768 170.964 392.843 176.563 391.033 cv
182.696 389.039 193.8 387.658 196.864 387.295 cv
197.372 387.243 197.665 387.202 197.665 387.202 cv
197.665 387.202 197.676 387.09 197.694 386.862 cv
205.586 386.513 216.65 386.071 218.259 386.307 cv
219.026 386.411 222.671 388.346 227.126 390.84 cv
229.591 392.213 232.292 393.764 234.896 395.256 cv
237.797 396.919 240.573 398.525 242.718 399.763 cv
244.145 400.595 246.243 401.771 248.731 403.129 cv
259.429 409.016 277.104 418.44 277.104 418.44 cv
277.198 422.597 li
277.216 423.282 li
cp
.92549 .596078 .427451 rgb
f
277.216 423.282 mo
277.216 423.282 249.337 422.57 236.579 419.737 cv
223.818 416.898 213.657 409.217 213.657 409.217 cv
204.439 412.41 176.674 418.199 168.765 415.132 cv
160.854 412.047 158.293 402.486 158.293 402.486 cv
158.293 402.486 159.654 401.23 161.833 399.517 cv
165.352 404.444 170.779 408.431 178.613 409.737 cv
187.119 411.154 209.33 404.851 213.733 401.381 cv
213.733 401.381 221.291 410.832 236.261 416.192 cv
249.542 420.948 272.273 422.347 277.198 422.597 cv
277.216 423.282 li
cp
.858824 .490196 .32549 rgb
f
255.117 376.853 mo
254.176 381.042 251.232 392.982 248.731 403.129 cv
246.243 401.771 244.145 400.595 242.718 399.763 cv
241.708 399.182 240.555 398.516 239.31 397.792 cv
237.929 396.996 236.424 396.138 234.896 395.256 cv
234.864 395.016 234.838 394.792 234.802 394.565 cv
233.742 386.307 234.571 383.943 234.571 383.943 cv
227.126 390.84 li
224.534 389.392 222.227 388.126 220.595 387.318 cv
219.404 386.719 218.581 386.352 218.259 386.307 cv
216.65 386.071 205.586 386.513 197.694 386.862 cv
197.732 386.504 197.79 385.874 197.866 385.011 cv
200.839 382.831 228.376 365.15 236.216 360.666 cv
244.496 355.937 250.751 354.868 254.297 358.65 cv
257.839 362.432 256.896 369.052 255.117 376.853 cv
cp
.92549 .596078 .427451 rgb
f
239.31 397.792 mo
237.929 396.996 236.424 396.138 234.896 395.256 cv
234.864 395.016 234.838 394.792 234.802 394.565 cv
233.742 386.307 234.571 383.943 234.571 383.943 cv
227.126 390.84 li
224.534 389.392 222.227 388.126 220.595 387.318 cv
236.105 374.444 li
236.105 374.444 239.102 365.467 243.827 363.737 cv
243.827 363.737 236.362 382.133 239.31 397.792 cv
cp
.858824 .490196 .32549 rgb
f
234.044 361.735 mo
233.912 363.246 233.515 364.748 232.792 366.178 cv
230.979 369.808 222.323 376.889 212.636 378.386 cv
202.951 379.879 200.363 375.123 199.484 372.481 cv
199.086 371.301 199.006 370.828 199.006 370.828 cv
200.588 369.723 li
200.863 369.691 li
203.262 369.41 li
203.262 369.41 203.367 369.396 203.561 369.375 cv
206.353 369.039 227.683 366.477 227.835 366.262 cv
227.998 366.022 229.171 364.046 229.171 364.046 cv
229.171 364.046 224.526 360.269 224.999 359.173 cv
225.452 358.114 227.497 359.808 227.667 359.947 cv
227.531 359.728 225.168 355.995 225.633 355.391 cv
226.084 354.788 228.722 357.439 228.93 357.658 cv
228.755 357.384 225.425 352.441 226.341 351.524 cv
227.287 350.582 230.828 356.098 230.828 356.098 cv
230.828 356.098 229.565 350.107 229.799 349.794 cv
230.005 349.527 231.397 351.024 232.586 353.688 cv
232.768 354.094 232.946 354.528 233.107 354.994 cv
233.876 357.09 234.259 359.428 234.044 361.735 cv
cp
.952941 .713726 .670588 rgb
f
234.044 361.735 mo
233.912 363.246 233.515 364.748 232.792 366.178 cv
230.979 369.808 222.323 376.889 212.636 378.386 cv
202.951 379.879 200.363 375.123 199.484 372.481 cv
199.086 371.301 199.006 370.828 199.006 370.828 cv
200.588 369.723 li
200.863 369.691 li
203.262 369.41 li
203.262 369.41 203.367 369.396 203.561 369.375 cv
206.729 372.629 210.519 375.37 215.313 374.716 cv
221.456 373.894 229.126 369.879 231.616 365.986 cv
232.654 364.359 233.458 362.883 234.044 361.735 cv
cp
.956863 .580392 .556863 rgb
f
200.032 328.767 mo
193.103 325.776 184.951 321.265 176.739 322.977 cv
172.703 323.823 160.49 327.349 156.713 329.713 cv
152.936 332.079 150.573 335.382 150.573 349.401 cv
150.573 363.424 154.98 393.192 158.289 402.49 cv
158.289 402.49 167.464 393.983 176.563 391.024 cv
182.698 389.035 193.805 387.658 196.864 387.295 cv
197.376 387.243 197.667 387.206 197.667 387.206 cv
197.667 387.206 197.681 387.081 197.701 386.862 cv
197.732 386.508 197.79 385.87 197.868 385.011 cv
198.177 381.735 198.832 375.257 199.717 368.936 cv
200.977 359.956 204.286 350.979 204.286 350.979 cv
211.058 336.173 li
211.058 336.173 206.961 331.762 200.032 328.767 cv
cp
.137255 .0392157 .0666667 rgb
f
194.757 326.406 mo
194.757 326.406 194.207 330.578 192.79 333.416 cv
191.371 336.254 185.068 339.347 180.521 334.381 cv
176.713 330.224 176.25 323.567 176.563 323.098 cv
176.872 322.624 182.526 322.333 182.526 322.333 cv
182.526 322.32 li
182.551 322.03 183.132 316.138 183.375 313.447 cv
183.425 313.795 183.478 314.158 183.575 314.515 cv
184.341 317.663 186.209 320.912 189.699 322.606 cv
189.261 324.059 li
189.243 324.117 li
194.757 326.406 li
.952941 .713726 .670588 rgb
f
189.699 322.606 mo
189.261 324.059 li
187.41 323.697 184.406 323.022 182.526 322.32 cv
182.551 322.03 183.132 316.138 183.375 313.447 cv
183.425 313.795 183.478 314.158 183.575 314.515 cv
184.341 317.663 186.209 320.912 189.699 322.606 cv
.956863 .580392 .556863 rgb
f
203.733 317.823 mo
201.529 320.496 197.517 324.591 192.314 323.496 cv
191.353 323.286 190.483 322.982 189.699 322.606 cv
188.175 321.86 186.958 320.827 186.001 319.624 cv
186.001 319.616 li
184.784 318.079 184.001 316.281 183.575 314.515 cv
183.478 314.158 183.425 313.795 183.375 313.447 cv
182.913 309.987 184.196 306.867 184.196 306.867 cv
182.942 307.104 180.89 306.16 180.812 303.089 cv
180.77 301.171 181.391 299.003 182.31 297.729 cv
182.788 297.484 184.328 296.777 184.992 297.505 cv
185.776 298.364 185.776 301.05 185.776 301.05 cv
187.43 297.671 190.427 295.168 192.345 294.046 cv
192.797 293.782 193.194 293.589 193.499 293.487 cv
195.07 292.928 198.657 292.987 202.475 293.961 cv
206.494 294.98 207.135 295.432 208.619 297.032 cv
209.357 297.824 209.799 299.075 210.065 300.161 cv
210.17 300.68 210.267 301.234 210.35 301.832 cv
211.219 307.975 205.937 315.137 203.733 317.823 cv
.952941 .713726 .670588 rgb
f
186.001 319.616 mo
186.001 319.616 li
186.001 319.616 li
186.001 319.616 mo
185.34 318.781 184.807 317.869 184.39 316.928 cv
184.039 316.135 183.77 315.322 183.575 314.515 cv
183.478 314.158 183.425 313.795 183.375 313.447 cv
183.375 313.447 li
183.322 313.046 183.292 312.65 183.28 312.264 cv
183.277 312.141 183.275 312.02 183.275 311.899 cv
183.274 309.109 184.196 306.867 184.196 306.867 cv
184.196 306.867 li
184.196 306.867 li
184.075 306.89 183.946 306.902 183.813 306.902 cv
183.79 306.902 183.767 306.901 183.744 306.901 cv
183.446 306.892 183.127 306.824 182.812 306.689 cv
181.814 306.263 180.865 305.159 180.812 303.089 cv
180.811 303.029 180.81 302.969 180.81 302.909 cv
180.809 301.037 181.419 298.964 182.31 297.729 cv
182.633 297.563 183.445 297.185 184.141 297.185 cv
184.473 297.185 184.778 297.27 184.992 297.505 cv
185.764 298.35 185.776 300.967 185.776 301.048 cv
185.776 301.048 185.776 301.049 185.776 301.049 cv
185.776 301.049 185.776 301.049 185.776 301.049 cv
185.776 301.049 185.776 301.049 185.776 301.049 cv
185.776 301.05 185.776 301.05 185.776 301.05 cv
185.776 301.05 185.776 301.05 185.776 301.05 cv
185.776 301.05 185.776 301.05 185.776 301.05 cv
187.43 297.671 190.427 295.168 192.345 294.046 cv
189.594 297.55 186.371 303.58 185.939 310.259 cv
185.662 314.412 185.791 317.533 186.001 319.616 cv
.952941 .654902 .619608 rgb
f
210.425 302.302 mo
210.425 302.302 210.35 301.333 210.065 300.161 cv
209.799 299.075 209.357 297.824 208.619 297.032 cv
207.135 295.432 206.494 294.98 202.475 293.961 cv
198.657 292.987 195.07 292.928 193.499 293.487 cv
192.931 293.684 192.043 294.176 191.038 294.909 cv
189.256 296.236 187.088 298.364 185.776 301.05 cv
185.776 301.05 185.776 298.364 184.992 297.505 cv
184.328 296.777 182.788 297.484 182.31 297.729 cv
182.155 297.815 li
182.155 297.815 181.601 293.875 185.226 288.525 cv
187.175 285.632 190.87 283.607 194.777 282.682 cv
198.112 281.9 201.597 281.909 204.281 282.852 cv
209.877 284.82 212.636 289.706 213.109 293.875 cv
213.581 298.051 213.497 302.302 210.425 302.302 cv
cp
.34902 .0901961 .0705882 rgb
f
190.975 301.126 mo
190.542 301.333 192.551 301.909 194.439 302.701 cv
196.331 303.487 197.906 304.037 198.297 303.093 cv
198.693 302.146 193.731 299.786 190.975 301.126 cv
cp
f
209.797 306.794 mo
210.412 307.161 208.932 304.51 206.802 304.274 cv
204.679 304.037 204.286 305.06 204.757 305.772 cv
205.229 306.478 209.01 306.325 209.797 306.794 cv
cp
f
239.884 420.085 mo
238.704 425.168 li
238.704 425.168 250.991 429.423 254.297 431.073 cv
246.856 421.154 li
239.884 420.085 li
cp
.980392 .941176 .741176 rgb
f
277.216 423.282 mo
277.216 423.282 279.581 426.943 285.016 428.829 cv
290.447 430.72 300.371 429.777 300.962 427.649 cv
301.552 425.526 277.095 418.435 277.095 418.435 cv
277.216 423.282 li
cp
f
205.508 335.856 mo
205.508 335.856 211.849 335.624 215.235 336.956 cv
218.617 338.296 222.165 341.131 222.165 341.131 cv
222.165 341.131 224.448 337.823 227.913 336.012 cv
231.38 334.202 234.214 335.382 234.214 335.382 cv
228.387 338.927 li
228.387 338.927 234.292 335.932 235.946 336.804 cv
221.686 343.774 li
205.508 335.856 li
cp
.839216 .737255 .556863 rgb
f
236.105 336.562 mo
232.768 352.821 li
232.586 353.688 li
232.502 353.509 232.43 353.331 232.341 353.161 cv
231.221 350.823 229.999 349.54 229.799 349.794 cv
229.636 350.005 230.157 352.762 230.517 354.56 cv
230.687 355.45 230.828 356.098 230.828 356.098 cv
230.828 356.098 230.508 355.588 230.027 354.909 cv
228.923 353.349 227.001 350.863 226.341 351.524 cv
225.718 352.15 227.048 354.614 228.022 356.232 cv
228.485 357 228.874 357.578 228.93 357.658 cv
228.836 357.564 228.297 357.018 227.667 356.459 cv
226.852 355.749 225.888 355.042 225.633 355.391 cv
225.443 355.651 225.745 356.451 226.167 357.309 cv
226.755 358.511 227.587 359.821 227.667 359.947 cv
227.497 359.808 225.452 358.114 224.999 359.173 cv
224.526 360.269 229.171 364.046 229.171 364.046 cv
229.171 364.046 227.998 366.022 227.835 366.262 cv
227.774 366.344 221.291 368.761 218.098 369.947 cv
217.922 370.013 217.75 370.076 217.589 370.134 cv
216.842 370.42 216.371 370.585 216.371 370.585 cv
203.262 369.41 li
200.863 369.691 li
199.484 369.643 li
201.161 355.172 li
203.496 335.15 li
203.496 335.15 213.892 338.453 221.686 343.778 cv
222.258 343.491 li
222.788 343.228 li
236.105 336.562 li
cp
.886275 .235294 .215686 rgb
f
229.171 364.046 mo
229.171 364.046 227.998 366.022 227.835 366.262 cv
227.757 366.375 216.371 370.585 216.371 370.585 cv
203.262 369.41 li
200.863 369.691 li
199.484 369.643 li
201.161 355.172 li
205.329 358.53 213.827 363.983 226.167 357.309 cv
226.755 358.511 227.587 359.821 227.667 359.947 cv
227.497 359.808 225.452 358.114 224.999 359.173 cv
224.526 360.269 229.171 364.046 229.171 364.046 cv
cp
.776471 .156863 .156863 rgb
f
208.317 362.074 mo
208.592 361.989 211.863 361.023 212.24 362.006 cv
212.258 362.074 li
212.343 363.111 205.313 365.15 205.313 365.15 cv
205.313 365.15 202.788 368.149 198.063 371.61 cv
193.338 375.079 180.267 382.562 172.62 382.562 cv
164.983 382.562 161.749 379.965 158.606 373.026 cv
155.454 366.102 152.936 352.871 152.936 352.871 cv
154.361 352.942 155.91 353.111 157.479 353.339 cv
164.283 354.305 171.527 356.334 171.527 356.334 cv
172.07 359.245 172.233 367.828 172.233 367.828 cv
174.98 365.552 184.123 362.951 191.049 361.373 cv
197.987 359.794 200.66 359.124 200.66 359.124 cv
200.66 359.124 208.145 351.288 209.091 352.083 cv
209.972 352.812 206.802 357.188 206.382 357.774 cv
206.907 357.198 211.655 352.074 212.475 353.263 cv
213.3 354.457 208.867 358.708 208.422 359.141 cv
208.872 358.825 213.136 355.833 213.657 356.884 cv
214.185 357.962 208.646 361.837 208.317 362.074 cv
cp
.952941 .713726 .670588 rgb
f
183.847 305.377 mo
183.776 305.365 li
183.648 305.324 183.583 305.19 183.622 305.069 cv
184.419 302.557 183.7 299.08 183.693 299.043 cv
183.671 298.917 183.749 298.79 183.876 298.766 cv
184.006 298.735 184.131 298.82 184.158 298.946 cv
184.187 299.092 184.907 302.584 184.071 305.213 cv
184.042 305.315 183.946 305.377 183.847 305.377 cv
cp
.6 .188235 .133333 rgb
f
184.123 303.84 mo
184.093 303.84 li
183.53 303.769 182.589 303.438 182.623 302.647 cv
182.671 301.708 184.033 301.269 184.091 301.251 cv
184.221 301.215 184.348 301.283 184.388 301.404 cv
184.426 301.529 184.359 301.664 184.232 301.703 cv
183.925 301.797 183.127 302.164 183.096 302.668 cv
183.072 303.218 184.138 303.366 184.149 303.366 cv
184.279 303.383 184.368 303.5 184.354 303.634 cv
184.341 303.751 184.238 303.84 184.123 303.84 cv
cp
f
200.622 316.599 mo
200.591 316.599 li
200.466 316.581 197.551 316.16 196.172 313.965 cv
196.101 313.858 196.134 313.71 196.241 313.643 cv
196.355 313.576 196.498 313.604 196.57 313.714 cv
197.609 315.365 199.683 315.932 200.403 316.08 cv
200.646 313.041 202.906 306.482 203.022 306.307 cv
203.099 306.201 203.244 306.168 203.353 306.245 cv
203.456 306.312 203.49 306.442 203.429 306.549 cv
203.298 306.844 200.973 313.528 200.861 316.37 cv
200.774 316.544 li
200.622 316.599 li
cp
f
190.74 313.648 mo
190.74 313.648 195.17 317.483 198.358 317.84 cv
198.358 317.84 195.935 321.681 193.042 320.143 cv
190.146 318.61 190.74 313.648 190.74 313.648 cv
cp
1 1 1 rgb
f
186.898 329.418 mo
186.802 329.397 li
186.684 329.343 186.63 329.2 186.686 329.08 cv
189.104 323.764 li
189.163 323.648 189.303 323.594 189.419 323.648 cv
189.538 323.702 189.591 323.84 189.538 323.96 cv
187.113 329.281 li
186.898 329.418 li
cp
.6 .188235 .133333 rgb
f
182.589 325.401 mo
182.459 325.401 182.352 325.302 182.35 325.167 cv
182.35 325.141 182.292 322.311 182.35 320.961 cv
182.358 320.832 182.468 320.719 182.593 320.734 cv
182.73 320.743 182.826 320.849 182.823 320.979 cv
182.763 322.315 182.821 325.132 182.823 325.159 cv
182.826 325.289 182.721 325.395 182.591 325.401 cv
182.589 325.401 li
cp
f
171.516 356.884 mo
171.389 356.884 171.286 356.778 171.284 356.652 cv
171.203 345.458 167.195 338.806 167.16 338.757 cv
167.08 338.65 167.099 338.502 167.204 338.422 cv
167.309 338.346 167.457 338.369 167.535 338.471 cv
167.573 338.525 171.674 345.316 171.757 356.643 cv
171.757 356.778 171.655 356.884 171.523 356.884 cv
171.516 356.884 li
cp
.886275 .235294 .215686 rgb
f
234.527 384.609 mo
234.511 384.605 li
234.379 384.6 234.283 384.484 234.294 384.354 cv
235.26 372.249 238.369 368.279 239.701 366.584 cv
239.777 366.483 239.927 366.459 240.03 366.54 cv
240.135 366.625 240.153 366.773 240.07 366.875 cv
238.771 368.539 235.718 372.432 234.764 384.39 cv
234.755 384.515 234.649 384.609 234.527 384.609 cv
cp
.137255 .0392157 .0666667 rgb
f
255.088 406.737 mo
254.972 406.709 li
254.757 406.594 233.666 394.797 230.162 392.928 cv
229.194 392.41 227.982 391.739 226.69 391.024 cv
223.228 389.106 219.306 386.938 217.841 386.487 cv
215.852 385.874 200.104 386.862 197.723 387.438 cv
197.595 387.465 197.468 387.389 197.437 387.26 cv
197.408 387.139 197.486 387.009 197.613 386.978 cv
199.654 386.487 215.796 385.369 217.98 386.035 cv
219.489 386.5 223.434 388.681 226.92 390.613 cv
228.21 391.328 229.417 391.999 230.387 392.512 cv
233.892 394.381 254.987 406.178 255.202 406.298 cv
255.316 406.357 255.356 406.504 255.293 406.621 cv
255.088 406.737 li
cp
f
247.37 421.31 mo
247.354 421.31 li
247.294 421.305 241.404 420.975 234.866 419.415 cv
226.228 417.354 214.379 410.402 211.688 408.02 cv
211.59 407.93 211.583 407.783 211.668 407.684 cv
211.755 407.586 211.905 407.578 212.001 407.667 cv
214.666 410.023 226.409 416.911 234.976 418.955 cv
241.469 420.505 247.321 420.836 247.381 420.841 cv
247.508 420.845 247.609 420.957 247.603 421.086 cv
247.594 421.211 247.491 421.31 247.37 421.31 cv
cp
f
166.402 380.277 mo
166.292 380.277 165.958 380.277 164.864 378.507 cv
164.795 378.4 164.826 378.252 164.938 378.185 cv
165.045 378.114 165.195 378.155 165.262 378.261 cv
165.687 378.95 166.261 379.732 166.44 379.808 cv
166.567 379.808 166.657 379.916 166.657 380.041 cv
166.657 380.175 166.529 380.277 166.402 380.277 cv
cp
f
170.26 369.487 mo
170.083 369.41 li
169.998 369.312 170.007 369.165 170.103 369.075 cv
170.139 369.039 171.098 368.172 174.071 366.29 cv
174.18 366.223 174.328 366.253 174.397 366.366 cv
174.466 366.477 174.435 366.621 174.326 366.693 cv
171.395 368.542 170.432 369.415 170.418 369.423 cv
170.26 369.487 li
cp
f
222.788 343.228 mo
218.098 369.947 li
217.922 370.013 217.75 370.076 217.589 370.134 cv
222.258 343.491 li
222.788 343.228 li
cp
f
195.814 307.134 mo
195.392 308.391 194.75 309.311 194.381 309.186 cv
194.02 309.062 194.06 307.949 194.482 306.688 cv
194.907 305.427 195.546 304.51 195.915 304.635 cv
196.281 304.756 196.234 305.878 195.814 307.134 cv
cp
.376471 .0666667 .0666667 rgb
f
205.687 309.933 mo
205.034 311.086 204.236 311.874 203.895 311.681 cv
203.561 311.493 203.812 310.407 204.46 309.245 cv
205.108 308.087 205.908 307.305 206.248 307.492 cv
206.583 307.68 206.333 308.776 205.687 309.933 cv
cp
f
212.258 362.074 mo
212.343 363.111 205.313 365.15 205.313 365.15 cv
205.313 365.15 202.788 368.149 198.063 371.61 cv
193.338 375.079 180.267 382.562 172.62 382.562 cv
164.983 382.562 161.749 379.965 158.606 373.026 cv
155.454 366.102 152.936 352.871 152.936 352.871 cv
154.361 352.942 155.91 353.111 157.479 353.339 cv
158.628 360.125 161.628 372.186 163.44 375.19 cv
165.457 378.499 173.018 379.571 180.926 377.555 cv
188.845 375.547 200.897 368.35 203.97 364.569 cv
203.97 364.569 209.422 363.375 212.258 362.074 cv
cp
.956863 .580392 .556863 rgb
f
194.777 282.682 mo
193.208 286.258 191.672 291.244 191.038 294.909 cv
189.256 296.236 187.088 298.364 185.776 301.05 cv
185.776 301.05 185.776 298.364 184.992 297.505 cv
184.328 296.777 182.788 297.484 182.31 297.729 cv
182.155 297.815 li
182.155 297.815 181.601 293.875 185.226 288.525 cv
187.175 285.632 190.87 283.607 194.777 282.682 cv
cp
.266667 .054902 .0470588 rgb
f
227.667 356.459 mo
227.774 356.383 227.897 356.317 228.022 356.232 cv
228.485 357 228.874 357.578 228.93 357.658 cv
228.836 357.564 228.297 357.018 227.667 356.459 cv
cp
.647059 .486275 .203922 rgb
f
230.517 354.56 mo
230.687 355.45 230.828 356.098 230.828 356.098 cv
230.828 356.098 230.508 355.588 230.027 354.909 cv
230.188 354.792 230.347 354.685 230.517 354.56 cv
cp
f
232.768 352.821 mo
232.586 353.688 li
232.502 353.509 232.43 353.331 232.341 353.161 cv
232.484 353.048 232.623 352.933 232.768 352.821 cv
cp
f
150.807 408.843 mo
150.696 408.843 150.594 408.769 150.565 408.656 cv
148.568 400.979 140.266 390.721 140.183 390.619 cv
140.095 390.511 140.111 390.354 140.219 390.266 cv
140.325 390.181 140.483 390.195 140.57 390.302 cv
140.655 390.406 149.024 400.748 151.049 408.531 cv
151.084 408.664 151.004 408.8 150.87 408.835 cv
150.807 408.843 li
cp
.137255 .0392157 .0666667 rgb
f
199.004 436.064 mo
198.819 435.982 li
198.726 435.88 198.735 435.72 198.836 435.627 cv
199.064 435.418 199.692 435.336 201.475 435.13 cv
206.379 434.565 216.584 433.386 222.178 427.042 cv
222.269 426.937 222.426 426.928 222.531 427.019 cv
222.634 427.11 222.644 427.268 222.553 427.372 cv
216.833 433.862 206.498 435.054 201.532 435.627 cv
200.404 435.757 199.338 435.88 199.17 436 cv
199.004 436.064 li
cp
f
169.434 421.56 mo
169.257 421.487 li
169.159 421.389 169.159 421.231 169.256 421.133 cv
173.359 417.02 192.153 414.018 192.951 413.892 cv
193.083 413.869 193.215 413.963 193.237 414.1 cv
193.258 414.237 193.165 414.365 193.029 414.386 cv
192.835 414.417 173.598 417.488 169.611 421.487 cv
169.434 421.56 li
cp
f
172.767 444.41 mo
190.008 437.304 li
190.008 432.011 li
172.767 437.304 li
172.767 444.41 li
cp
.847059 .8 .705882 rgb
f
135.508 433.236 mo
153.948 428.41 li
190.008 432.011 li
172.767 437.304 li
135.508 433.236 li
cp
.886275 .235294 .215686 rgb
f
135.508 433.236 mo
135.508 433.744 134.841 441.077 134.841 441.077 cv
172.767 444.41 li
172.767 437.304 li
135.508 433.236 li
cp
.776471 .156863 .156863 rgb
f
137.508 436.411 mo
137.258 436.411 li
137.258 438.823 li
137.258 438.954 137.36 439.063 137.491 439.072 cv
169.324 441.326 li
169.512 441.26 li
169.592 441.077 li
169.592 438.744 li
169.592 438.612 169.491 438.504 169.36 438.494 cv
137.527 436.161 li
137.338 436.228 li
137.258 436.411 li
137.508 436.411 li
137.49 436.66 li
169.092 438.976 li
169.092 440.808 li
137.758 438.59 li
137.758 436.411 li
137.508 436.411 li
137.49 436.66 li
137.508 436.411 li
cp
.137255 .0392157 .0666667 rgb
f
213.616 454.621 mo
213.503 454.621 213.401 454.544 213.373 454.43 cv
213.34 454.295 213.422 454.161 213.556 454.127 cv
214.202 453.97 229.316 450.288 233.197 450.288 cv
233.268 450.288 li
233.406 450.29 233.517 450.403 233.515 450.541 cv
233.513 450.678 233.372 450.792 233.262 450.788 cv
233.195 450.788 li
229.378 450.788 213.833 454.575 213.675 454.614 cv
213.616 454.621 li
cp
f
212.182 451.455 mo
212.072 451.455 211.971 451.381 211.941 451.271 cv
211.904 451.137 211.983 451 212.116 450.963 cv
212.676 450.81 225.878 447.205 229.935 446.944 cv
230.063 446.921 230.191 447.039 230.2 447.177 cv
230.209 447.315 230.104 447.433 229.967 447.442 cv
225.96 447.701 212.385 451.409 212.248 451.446 cv
212.182 451.455 li
cp
f
210.609 447.443 mo
210.5 447.443 210.4 447.372 210.369 447.262 cv
210.331 447.129 210.407 446.991 210.54 446.953 cv
210.644 446.922 221.008 443.952 226.261 443.125 cv
226.396 443.104 226.526 443.196 226.547 443.333 cv
226.569 443.469 226.476 443.597 226.339 443.619 cv
221.117 444.441 210.782 447.403 210.678 447.433 cv
210.609 447.443 li
cp
f
245.598 454.621 mo
245.474 454.621 245.367 454.528 245.351 454.402 cv
245.333 454.265 245.43 454.14 245.567 454.123 cv
260.067 452.29 li
260.199 452.277 260.329 452.37 260.347 452.506 cv
260.364 452.643 260.267 452.768 260.13 452.786 cv
245.63 454.619 li
245.598 454.621 li
cp
f
245.598 450.788 mo
245.471 450.788 245.362 450.69 245.35 450.561 cv
245.337 450.423 245.438 450.301 245.576 450.289 cv
260.076 448.95 li
260.211 448.936 260.335 449.039 260.348 449.175 cv
260.36 449.313 260.259 449.435 260.122 449.448 cv
245.622 450.787 li
245.598 450.788 li
cp
f
338.432 449.449 mo
338.406 449.448 li
327.24 448.287 li
327.103 448.272 327.003 448.149 327.017 448.012 cv
327.031 447.875 327.157 447.777 327.291 447.789 cv
338.457 448.95 li
338.595 448.964 338.694 449.087 338.681 449.224 cv
338.667 449.353 338.559 449.449 338.432 449.449 cv
cp
f
340.266 446.375 mo
340.247 446.375 li
328.747 445.531 li
328.609 445.521 328.506 445.401 328.517 445.263 cv
328.527 445.126 328.626 445.011 328.784 445.033 cv
340.284 445.876 li
340.422 445.886 340.525 446.006 340.515 446.144 cv
340.505 446.275 340.396 446.375 340.266 446.375 cv
cp
f
339.342 436.91 mo
332.978 436.91 li
332.84 436.91 332.728 436.797 332.728 436.66 cv
332.728 436.522 332.84 436.41 332.978 436.41 cv
339.342 436.41 li
339.479 436.41 339.592 436.522 339.592 436.66 cv
339.592 436.797 339.479 436.91 339.342 436.91 cv
cp
f
677.527 148.017 mo
677.527 157.537 669.81 165.254 660.29 165.254 cv
650.771 165.254 643.054 157.537 643.054 148.017 cv
643.054 138.496 650.771 130.779 660.29 130.779 cv
669.81 130.779 677.527 138.496 677.527 148.017 cv
cp
.74902 .854902 .878431 rgb
f
660.29 151.145 mo
660.125 151.145 659.961 151.096 659.819 150.998 cv
648.846 143.491 li
648.466 143.231 648.369 142.713 648.629 142.332 cv
648.888 141.953 649.406 141.854 649.788 142.115 cv
659.456 148.729 li
659.456 135.296 li
659.456 134.836 659.829 134.462 660.29 134.462 cv
660.752 134.462 661.125 134.836 661.125 135.296 cv
661.125 150.31 li
661.125 150.619 660.953 150.904 660.68 151.047 cv
660.558 151.112 660.424 151.145 660.29 151.145 cv
cp
1 1 1 rgb
f
457.309 409.761 mo
462.029 441.85 li
501.396 448.585 li
498.426 415.414 li
457.309 409.761 li
cp
.639216 .862745 .898039 rgb
f
501.232 446.761 mo
520.526 433.196 li
499.71 429.759 li
501.232 446.761 li
cp
.466667 .686275 .737255 rgb
f
501.232 446.761 mo
501.396 448.585 li
520.382 435.103 li
520.526 433.196 li
501.232 446.761 li
cp
.372549 .623529 .666667 rgb
f
499.985 432.832 mo
512.061 435.017 li
500.814 442.102 li
499.985 432.832 li
cp
f
480.768 426.562 mo
481.193 429.105 480.483 431.342 479.182 431.56 cv
477.882 431.777 476.482 429.894 476.057 427.35 cv
475.631 424.809 476.341 422.572 477.641 422.355 cv
478.942 422.137 480.342 424.02 480.768 426.562 cv
cp
.709804 .933333 .956863 rgb
f
378.234 426.052 mo
387.176 447.236 li
368.676 448.081 li
359.41 426.293 li
378.234 426.052 li
cp
.92549 .596078 .427451 rgb
f
378.234 426.052 mo
397.888 426.052 li
408.509 446.168 li
387.176 447.236 li
378.234 426.052 li
cp
f
405.412 444.411 mo
405.412 444.411 388.802 444.46 386.332 445.321 cv
386.332 445.321 382.012 445.75 369.512 446.14 cv
360.972 426.271 li
360.972 426.271 372.632 420.191 378.231 426.05 cv
378.231 426.05 378.342 423.76 381.342 423.5 cv
384.342 423.25 395.611 426.291 395.611 426.291 cv
403.622 441.1 li
405.412 444.411 li
cp
.909804 .878431 .803922 rgb
f
363.009 427.457 mo
362.91 427.457 362.816 427.398 362.777 427.3 cv
362.726 427.172 362.787 427.027 362.915 426.975 cv
369.584 424.268 376.015 426.035 376.077 426.053 cv
376.21 426.09 376.287 426.229 376.249 426.362 cv
376.211 426.494 376.076 426.572 375.94 426.534 cv
375.88 426.517 369.607 424.798 363.103 427.438 cv
363.009 427.457 li
cp
.137255 .0392157 .0666667 rgb
f
370.724 440.9 mo
370.631 440.9 370.542 440.848 370.499 440.759 cv
370.438 440.635 370.49 440.486 370.614 440.425 cv
378.236 436.713 381.576 437.973 381.714 438.028 cv
381.843 438.08 381.904 438.225 381.854 438.353 cv
381.801 438.482 381.653 438.542 381.528 438.493 cv
381.494 438.478 378.262 437.258 370.833 440.875 cv
370.724 440.9 li
cp
f
385.012 441.928 mo
384.896 441.928 384.791 441.847 384.767 441.729 cv
384.76 441.696 384.604 440.899 385.201 440.229 cv
385.824 439.532 386.999 439.256 388.699 439.414 cv
392.81 439.793 402.776 440.381 402.877 440.387 cv
403.015 440.396 403.12 440.514 403.112 440.652 cv
403.104 440.79 402.978 440.884 402.848 440.887 cv
402.747 440.881 392.771 440.292 388.652 439.912 cv
387.146 439.769 386.078 439.998 385.574 440.562 cv
385.142 441.045 385.255 441.622 385.257 441.627 cv
385.284 441.762 385.197 441.895 385.063 441.923 cv
385.012 441.928 li
cp
f
405.336 444.368 mo
405.336 444.368 388.725 444.417 386.256 445.278 cv
386.256 445.278 381.936 445.708 369.436 446.097 cv
369.436 443.368 li
369.436 443.368 380.445 437.208 384.516 441.057 cv
384.936 442.057 li
384.936 442.057 384.836 439.708 387.715 440.038 cv
390.596 440.368 403.545 441.057 403.545 441.057 cv
405.336 444.368 li
cp
.847059 .8 .705882 rgb
f
387.1 447.443 mo
387.004 447.443 386.912 447.387 386.871 447.293 cv
386.027 445.378 li
385.972 445.252 386.028 445.105 386.155 445.049 cv
386.277 444.993 386.429 445.049 386.484 445.177 cv
387.328 447.092 li
387.384 447.218 387.327 447.366 387.2 447.421 cv
387.1 447.443 li
cp
.137255 .0392157 .0666667 rgb
f
239.199 504.081 mo
239.199 508.754 li
236.919 506.846 234.56 505.893 232.122 505.893 cv
229.436 505.893 227.172 506.858 225.333 508.788 cv
223.482 510.707 222.557 513.054 222.557 515.831 cv
222.557 518.573 223.482 520.887 225.333 522.772 cv
227.184 524.657 229.453 525.599 232.139 525.599 cv
233.527 525.599 234.707 525.374 235.677 524.922 cv
236.219 524.696 236.78 524.391 237.362 524.008 cv
237.943 523.624 238.555 523.161 239.199 522.62 cv
239.199 527.377 li
236.941 528.653 234.571 529.29 232.088 529.29 cv
228.352 529.29 225.164 527.987 222.522 525.379 cv
219.893 522.75 218.578 519.579 218.578 515.864 cv
218.578 512.536 219.678 509.567 221.879 506.959 cv
224.588 503.765 228.093 502.168 232.393 502.168 cv
234.74 502.168 237.009 502.805 239.199 504.081 cv
cp
.956863 .741176 .133333 rgb
f
258.55 518.759 mo
254.673 509.872 li
250.609 518.759 li
258.55 518.759 li
cp
260.158 522.467 mo
248.967 522.467 li
246.055 528.816 li
241.806 528.816 li
254.74 501.034 li
267.218 528.816 li
262.901 528.816 li
260.158 522.467 li
cp
f
269.57 528.816 mo
275.073 500.711 li
284.046 521.028 li
293.341 500.711 li
298.284 528.816 li
294.238 528.816 li
291.715 513.038 li
283.979 530.018 li
276.461 513.02 li
273.65 528.816 li
269.57 528.816 li
cp
f
307.766 514.543 mo
309.238 514.543 li
312.861 514.543 314.673 513.15 314.673 510.362 cv
314.673 507.665 312.805 506.316 309.068 506.316 cv
307.766 506.316 li
307.766 514.543 li
cp
307.766 518.201 mo
307.766 528.816 li
303.82 528.816 li
303.82 502.676 li
308.29 502.676 li
310.479 502.676 312.133 502.829 313.25 503.133 cv
314.379 503.438 315.373 504.013 316.23 504.86 cv
317.731 506.327 318.482 508.178 318.482 510.413 cv
318.482 512.806 317.68 514.702 316.078 516.102 cv
314.475 517.5 312.313 518.201 309.594 518.201 cv
307.766 518.201 li
cp
f
326.49 502.676 mo
326.49 518.42 li
326.49 520.667 326.856 522.309 327.59 523.348 cv
328.686 524.848 330.226 525.599 332.213 525.599 cv
334.21 525.599 335.756 524.848 336.852 523.348 cv
337.584 522.343 337.951 520.701 337.951 518.42 cv
337.951 502.676 li
341.896 502.676 li
341.896 519.504 li
341.896 522.258 341.038 524.527 339.322 526.31 cv
337.393 528.297 335.022 529.29 332.213 529.29 cv
329.402 529.29 327.037 528.297 325.119 526.31 cv
323.402 524.527 322.545 522.258 322.545 519.504 cv
322.545 502.676 li
326.49 502.676 li
cp
f
362.94 506.57 mo
359.74 508.465 li
359.143 507.428 358.572 506.75 358.031 506.434 cv
357.467 506.073 356.738 505.893 355.847 505.893 cv
354.752 505.893 353.844 506.204 353.121 506.824 cv
352.398 507.433 352.037 508.202 352.037 509.126 cv
352.037 510.402 352.985 511.428 354.882 512.208 cv
357.488 513.274 li
359.611 514.131 361.162 515.178 362.145 516.415 cv
363.127 517.651 363.617 519.167 363.617 520.96 cv
363.617 523.364 362.816 525.351 361.213 526.92 cv
359.6 528.5 357.596 529.29 355.203 529.29 cv
352.935 529.29 351.061 528.619 349.582 527.276 cv
348.127 525.932 347.218 524.042 346.857 521.604 cv
350.852 520.723 li
351.033 522.258 351.349 523.319 351.801 523.907 cv
352.613 525.036 353.798 525.599 355.355 525.599 cv
356.586 525.599 357.607 525.188 358.42 524.364 cv
359.232 523.54 359.639 522.496 359.639 521.231 cv
359.639 520.723 359.568 520.258 359.428 519.834 cv
359.286 519.411 359.066 519.022 358.768 518.667 cv
358.468 518.311 358.082 517.978 357.607 517.667 cv
357.133 517.358 356.568 517.061 355.914 516.779 cv
353.392 515.729 li
349.813 514.217 348.025 512.004 348.025 509.092 cv
348.025 507.128 348.775 505.487 350.277 504.167 cv
351.777 502.834 353.646 502.168 355.881 502.168 cv
358.895 502.168 361.247 503.635 362.94 506.57 cv
cp
f
383.02 502.676 mo
383.02 525.108 li
390.705 525.108 li
390.705 528.816 li
379.074 528.816 li
379.074 502.676 li
383.02 502.676 li
cp
f
398.392 502.676 mo
398.392 528.816 li
394.447 528.816 li
394.447 502.676 li
398.392 502.676 li
cp
f
408.618 525.108 mo
411.056 525.108 li
412.839 525.108 414.147 524.758 414.983 524.059 cv
415.864 523.303 416.304 522.343 416.304 521.18 cv
416.304 520.051 415.88 519.104 415.034 518.336 cv
414.21 517.581 412.737 517.202 410.614 517.202 cv
408.618 517.202 li
408.618 525.108 li
cp
408.618 513.901 mo
409.853 513.901 li
411.319 513.901 412.396 513.577 413.079 512.927 cv
413.761 512.278 414.103 511.322 414.103 510.057 cv
414.103 508.827 413.753 507.893 413.054 507.255 cv
412.353 506.618 411.337 506.299 410.005 506.299 cv
408.618 506.299 li
408.618 513.901 li
cp
404.673 528.816 mo
404.673 502.676 li
408.601 502.676 li
410.351 502.676 411.743 502.811 412.782 503.083 cv
413.831 503.353 414.718 503.81 415.44 504.454 cv
416.173 505.12 416.755 505.95 417.185 506.942 cv
417.624 507.947 417.845 508.963 417.845 509.99 cv
417.845 511.864 417.128 513.45 415.694 514.747 cv
417.083 515.221 418.177 516.051 418.978 517.236 cv
419.792 518.41 420.198 519.776 420.198 521.333 cv
420.198 523.375 419.476 525.102 418.03 526.514 cv
417.161 527.383 416.185 527.987 415.101 528.325 cv
413.917 528.653 412.433 528.816 410.649 528.816 cv
404.673 528.816 li
cp
f
429.119 514.679 mo
430.371 514.679 li
434.107 514.679 435.976 513.251 435.976 510.396 cv
435.976 507.721 434.158 506.383 430.524 506.383 cv
429.119 506.383 li
429.119 514.679 li
cp
434.028 517.676 mo
442.121 528.816 li
437.296 528.816 li
429.83 518.116 li
429.119 518.116 li
429.119 528.816 li
425.174 528.816 li
425.174 502.676 li
429.796 502.676 li
433.25 502.676 435.744 503.325 437.279 504.624 cv
438.972 506.068 439.818 507.975 439.818 510.345 cv
439.818 512.196 439.288 513.788 438.228 515.12 cv
437.166 516.452 435.767 517.303 434.028 517.676 cv
cp
f
459.796 518.759 mo
455.919 509.872 li
451.856 518.759 li
459.796 518.759 li
cp
461.404 522.467 mo
450.214 522.467 li
447.302 528.816 li
443.053 528.816 li
455.987 501.034 li
468.465 528.816 li
464.147 528.816 li
461.404 522.467 li
cp
f
475.677 514.679 mo
476.929 514.679 li
480.665 514.679 482.533 513.251 482.533 510.396 cv
482.533 507.721 480.716 506.383 477.082 506.383 cv
475.677 506.383 li
475.677 514.679 li
cp
480.586 517.676 mo
488.679 528.816 li
483.854 528.816 li
476.388 518.116 li
475.677 518.116 li
475.677 528.816 li
471.731 528.816 li
471.731 502.676 li
476.354 502.676 li
479.808 502.676 482.302 503.325 483.837 504.624 cv
485.529 506.068 486.376 507.975 486.376 510.345 cv
486.376 512.196 485.846 513.788 484.785 515.12 cv
483.724 516.452 482.324 517.303 480.586 517.676 cv
cp
f
496.738 517.524 mo
488.206 502.676 li
492.743 502.676 li
498.72 513.122 li
504.713 502.676 li
509.25 502.676 li
500.684 517.524 li
500.684 528.816 li
496.738 528.816 li
496.738 517.524 li
cp
f
369.512 443.661 mo
369.42 443.661 369.331 443.61 369.288 443.522 cv
369.227 443.398 369.276 443.249 369.4 443.187 cv
369.652 443.061 375.623 440.116 379.825 439.835 cv
382.031 439.686 383.395 440.232 384.196 440.812 cv
378.001 426.148 li
377.947 426.02 378.007 425.874 378.134 425.82 cv
378.265 425.765 378.409 425.827 378.462 425.953 cv
385.241 442.001 li
385.242 442.002 li
385.296 442.13 385.236 442.277 385.109 442.331 cv
384.979 442.386 384.835 442.324 384.781 442.198 cv
384.743 442.111 383.819 440.072 379.858 440.333 cv
375.756 440.608 369.684 443.604 369.623 443.634 cv
369.512 443.661 li
cp
.137255 .0392157 .0666667 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 16.0.0%%For: (\600\755\750\762\740) ()%%Title: (Untitled-5-01.eps)%%CreationDate: 19.02.2019 11:58%%Canvassize: 16383%AI9_DataStream%Gb",Kq*Gb<f'e"fhBD/R;'C&Sgji!f#_GncE#p\Y%7Dt>_7`!]I*[8n:t8jBYrtT#Y]J,RkJLZ,X&_r1W`?)8(UmTHB!p2PgM6\n%Q<=f;B#P7]N$jRCj";l85-5iYh$IY_XCjQq$5Qg1INr\&p,fBKf^7g*oiA!&QHB.X2`&e'BCJPSo008->CU:olK-1-_I@E73A/nJ%@Bn?sP^=9,CER40e#0C]n-sc*Ij=;#mkt/+%!t,["=f/CM[)=JH?0)7J!N8>KP.]1Y>al>>0YCfTk&&mja%HTG+!?KC+U[g5>1KU%V@]>bqt2!hR#+JPT=t+>W8V1IAK-1QIH3^NK)T9$s7!dV*s(Xk.g#a#>\s0gr7fFt)4R)Jh_/@N-NEKP);B^L9j(e]WIG52Us\M8%g5U.9U-!7iYg?8"B\1G@O=&J_]r[E#0nl7m4NAN@\,6:SMPo>A1+SB!B3i^P17i>oHnT9GVT%ZVAJ"j>Kn$:;Sqc?Af\tN/FaAhN%s1l!fVOMRA5GH4Z53UV9cKf)E#B[Q`"[$/<>Lfqfit59fXI!Yt[F(ZIjT7s6c<8eP-/5HoEOOFR^*.uPd;P8l5=8\?JfAsf%\#tj%2alecY_%fA':96aN!KhV,D9R+q/eF$C5V/DCW,]3CK7JAo=#6goOXqD<bnk?3&(95mIKi(l-ua'lLiA[ci6B*Aps']Jbh#u#p&I,%_PX,4R)f$cg+G(bcOZ`&m:J65C>cmOiEofnr0soHlE)lA/c(rcJ^=41mK3@apdGQ_f:#h)_@-4Z5MiU<iMW5AX5DcNT!fE#En/`4%R!B?GHE@ZN@Q!cJj;\$WIV+F[B'-$jY!<0[n#/pg>\i5h=<2Ld'5%#0plbWUrpTK_@FG;HLd,No]D3\Q\(Y#n&Q3LI1N1I-p@PBZ%lfD`hP9E&g\Q&G,^Q`0&ijrVN7A[4^g+YMY#o+=k?pXn]Vs+X2rbS+3lEtLSW`_jcbFMtA;@a:fG'dXB"kgBc43a*dpu=KCe`h;(%1InQJ4XQX+aIhJVkk#.sZEqsdPTJ]`r&Dm-+'*%X7b+(-.B6al1Y,%0>d)c)3p$'\XYQoM&\gi<nSc1NXC*sO@C+[I)W6)lpFp*V%QYC'D=p$*1AfFMsF80si=#hqa:-.K3/Y(H=&q=)#JcO%8p1q>q*hl]1NCm@9n@[NdBi"KKMcB7$WmEa1eupn(Q'KHr?Pr^iiL:ia%bb,=OX3mQ-[>!.TcV#oV*oilH=p=#'\asmj&*oX[Ii@u,r3QMmd]&f0HQc)#o"o.EdjYflW1;K)eP=c8hp'C1/o]M-2uK<):[I?:%_NHU3`VZ(R6`@57Q7VX&>jla-o<<C]hA]Cp=`.%bBO-m-T#k=:?*!\EVftHC]C\:_keTL4WW-Th.K;E!nt/uKH#E@9=)X^tO2]Ti%e>h!0J7U@H%kU["27%=<=&+SYOb#4":Pls3.Jb_KS?:E3S:Dd4XFsLWKYNp5&ut*;hHa:%RG*:WE]5Om_XDp:Di24d;#Jc=KQArW%:S"`EYG[ICWnaHFU=hToeNj)#g64-(6aK"rL.`5poKJ[A44EOT?<2C6+)1SGQVG@Z`_\35:ct#rKh'T/5tpd$iP+Au3,J7LQ#MKn%pZ]PoR6ikjB6C!$Rc@FSJpd.skT;mj1%hYlfI;Ge1;+'8aXc*RAF"?ZqO+o0rWE7t9MB;M[1JpAf&m7dggHQi9J^E;flMf1VAW(*%SMKDDobX`6pY)*1e*ZtA`AG&kIS6<1F2GK,1q/k7(=V&JqR9X%p5Q;Dde%"g/Z'9SqV"WBBV/S2Be0)nedp*Me^iWmos!]WQkq<G%aa1V6dWrF0fBlQGiK"l\4Jkt]p!T2`SWeALS8A".XGSM@eN;lA[p(@A\&S/W()>HcCT<hTY>qcXZ)&R+KfH&<Kfhr7oOjI#[8'N0%@;j"L^P:M;-2$L@D;71PU)45<TnrNZcc95r\pX9U:Z4<t`@bNBS_ep@=R"G\SU@Kkm?O.i<n?aV=)d#Y\mO4lZs1fE=8EY]EU!Fj%*Z<DnG>?>Hn?>ec[HnO&k=k]<W5nT#Z9N6cr)o%B.m.gj0oY@DD,tLI@AKTG7]f@gOOI&+TBXl*k6eVIrDp&R/#@7jr>CApGUV6k%8W*7XUlhJ75VpSMJ'CRSmrO*,k^'fu2TDqFo4MW5:M8o.j6U`%kcr@n+2gr&I@S-IP:gIq&@tEKIP.dTqkP@j8jU%2Ac2S^+6'/a%__Wg[b+2`)]Fjj89Z+7LAbB5fDALQ0fe3j/XGF]"E-\>D$Wf0-cbn%2LgtXge<&0!kXLR2T-I_b:\*DC2`DtQ7,3<;&ncM,B%>Fu%AeE:dUG'*'S8Yh#>FdJGch%=;GoZf@Mo-@al'F(cj_Coi@LuML)0b/dW#8[=@:HF0@K0#nL7,e>OCBO7`jiQDU\V;Ym;pJn2I3]6%Nokg9(t+o`bleus!LK0O>gJeDTg,9W?f+,j1fo!8Pl$tE5>IUE/UP#OpO?`"?G#^JRrb2]c17:Qm;&LohQGO;k`Z_GkcAj$Rs5Tm%H8+W6IhR/%QIsChN,*]s4#btERm/PbRpl7LXAa$''L(6E0.qZ9*DH3ks)PT'^UWoRN=-uYfN65*o;`3X^W)F"%?Ht6pl^j*CM2d`%G`"]/]Taho]'XgS'&n6Cccb]k,Us^DW+u1&d7da[n^A_NTg)!*c`-l=^Ja8qWn^;9QC6jBdsY#uc`MY/cF,7_<rA!&Ul@TsS1;e)%cg&YKE?XsXANZ>tUsAs/T&,6lQpB^h?+e?pX^4d<*E'Y(WCsKtigrR*^*("bF_RNDjm+\^PRl$d(nRR4FL'O639?UXf2oL\kr8GP%:1X#HdE5e04)XnB<)Y&7iBil+I4$;HAGUCIX#5:G/&c$e,qhLXT`002kOe!=M:*nudYT"tGQl\IRULJf"Fd1PYMaJSe%66ZS3_XI%YEctFCsAbVG1pXf;M[UgF[bSC\QN^D@AA<#$NHQlMd#Z6@1ZL*HK>?a6)<_^b^0?P@1ZN&XA#sJAp+"-`)j;qo/MQ2:8Y(NK1M,@%m+MS/Uf_+_0/D[@&9@:'JIm=2>LR`c)%VD1cE]SBO.+liLrp/4KLjLGR?nQX5_tg8KFg($&0fA:R9<jC!s0WDoO6mmeb'?(82KhC%](0cA+@P;q"@ApJ_p!&[hfT9GIH!67bZ\a.E(.*V*><[o#of=oqsPX$hjJcJ)@ZM8,N+Ft^]#,"EkB?qartbP\T[hNoKS%bA_,=s%glTIaIl*G4<ADO$8Z"4T:m2c]qlaO,dsF5j:icguB2D[OTXHo^bS@':J%APW']LU4Z_og1)U4l9lI27dc.UR94j=sndZ6DK0DGBe%<^u%D^E%ee%^>(W,g?hhrfoQUHEZKnjPRO9*$aK;O8\'u*i',BdY_ABRKVAn^\1H*hliAr*rjMY=dRp)q%FgEa/'G->%=b3?^"G(%[:V9YXYn/60;f$^[DR$gO=$BG<qOge1lXN>1N1JnDu?I?@.Vkeo@+_o]-lDm-Jt3EPA?;,6Y+-HBk2l!s(c0'^[(AJr82Yl+nGp_%r3&N[:S6NR<qM[snS6[J[N[@dCbs=o[kf,+SZ3M+RUGNN*;isqcbFc_1:&o&a,]ZhH89No!W;6AnMF%ss1=k$^MLf+lL8/>4*Ao)%*m7g&brVEfEK2cEFE&&<lZCQRn=Y]??pQ54*uF7<PA\W+f9pVeQ<(np=]&5fe9^;;Ya7[!?TXDD-PF*uB:3pkh!Vp8Mt:.SW<el`%=O'\n#>Qh"B25],M<.D^f(k0aGTf78Z2FROhu(E5BM.D7QLbd5b`+Zg]MX^nTJhR<QDUpY::$F^;U0q+AO[\+o2Eg-.HUJlZLpl)%BjMU2kq_KM$=EX%qAIlMXhUe-W*VPIn%nHC(!Pi"]i0RFBCGnp>!"n7GJeg/$#2sd`GQdoi::IVFC*bkS:Z?\Ep4lCcR9U!<P^)M%_t=fmBfg>KDt;-.8[IVU8gS?:5,Gecl1_+`o*6[JF.^nLk@$<iVo2'AqH50SS*Q`TL$Kk&C1j[A+15-4m&bKKl?]L0DN6l5SNE>?%Hu>)2NkV_-s%)=Ld>D6o5PD"!V>QrhUYd$b)OJam<5C*VEYN8!/s]>3\Z,Xd!iu)BWE3B#AY%h?Z>Mb*JF:cUDoiN>E<Ss)l@*UM%dft6d=8EY]E<Y(;3%OM[4-SfeQPjhVW)\:H;>mi<)X"hm\aO"q]9rIJk.Zbampb^sQloha;o-0Ul,Xt``nYbm1RcPCG;7?dE>;*i%oa`aE"kUqkZrX?'n)[UZXdQR4DobAeRrTnVWf?a;ZH)-0nn0M^CM'd2V\o)0]oo">oNAkjIm]CMV[h4F>qpNOmc2o7^&;tgm+KTf%QH]bPRT3KK:G4M"0Crg9cHM0N?Sa4qU?n$Zei^(YF\OBMIKnsaAPs+Z7?([SPVTf*j2:J/[Is:ld>5&U]!a%iDT&sFl)B6rf:(k=%K7@_NVE^SOSc1MhQ+?P[PCiFHlq]#-T35Ir1WtPWVl/@TLC:d/<n$TgCU9"-;W%Ho](^\/O#KZ;T9X]s;m-+80ElMZB]eY(@2Xu%%(ZBY,.R#..GPU)n4%1h%Y#Wrh1s'3nhM2j)9^b=U($@&'S5ckncn)@eZ&CgHo44qD:V\Mri9oA60Y8[M2>%+If@L[tK(QT$?q)]g%CU9#`Sq)<O)*0;>0_Y_J!<VDTJH*FqlBTg$Mp/;rCM!a@G06(V\c/='9+dZ:?VMII<VIg6V"-Sl7kQlb1-7Wja%<f\(-CLLIb:`t%d(]gC?iG.@GF?[&Em\LbYZL-j`d%c2,9)O]e`pjdfHpr4^-?^ccu-2IGR7(&8".`eAS6"Bc1AYEQX'.;.DNiP:Vi[,D<d@TQ$?i2%G@Y):k'9JZGt4%okk(3?HE@mY5\iiSl-iD.O[:s(WL;(cnjbeh8,^_)^CIR93k<M`."npA"3tsN%!P"P;0570b?qf71\VrN[Q&1n%*)W/2b]k+)MB9uT'N#4[B/bPn(8](30':GBkh"C<hOCAj>nd7KOYq$H',p%GmY2e=SZ?m#:QO$$n%I(LUa]VCM^d0dRG1DVRqZar%c()0r\!^jGnsJ0*^R=Ygbqr]VS_Hiib\"FH;+F*!qX*mbd53eN/h,2agh<.E*ATRBk!mhTBY%/a_mp@K;jq%:\C%Z-Y-6NCMY>^\%SDL\Xe[&"2"a?J@:"RU(\fmL"Ve`R/46s6+Mj]&Nl'gJ=TBG(#hmi\t+aFqam]WE^f:NNNmhl3[gE0W)XcX_(>s#$P.i7LhL0Etb%V:POSQH%2&mJT`OHoMqSr6&QKSi!&74d)re1VZA9\@eul%S8\I2b7-M)dRs"5:\P9T=U7@07Pdfe9-.7.d[ltLQuluELeM*l)X(;%o/&CZlgf>TPt>4aldK8;bP1O%\!m*&]R6bOY5kISTa!`koM/,Ae*-KeVr^O<EoeT?ccs@7U-@scM_d"^;SO/r!u!i-2s4n#CH?[L%/l0YtDUOY3U=[W+g[YO)f[oV,q<?=3]b6]=Hk1^H"jso\qmHAu]@@=>V-ia/Euf;(DV[9plW9Y]r=b$+B8&4g23qCp=QTt6n"AW9%mdY(kZ2E=V`A>YHkAdQ??+<5aoi6p_\\hKS6('e3(ZQ!D[@tVr1[#(W(fs*Q?!IEp.7QH($bEhT%[;S;EHt/ud]G$`!S9L<1::&%%G/[Ro;sTu5_DFjCYD"r7n'B<kfj'jA.FMj/QDG/1ZRX-rO?T_N/2bJ9=Y]VcB'!9^c.^&2GDWWkj$fNR_DN;(n-:rF2&Q9V8&.!N%qO<\Bj@6e'HNS=f:<e0+NInNT@^;7`qG>TTM1KH1D5C*aWi"YST4oW'15>_QW4sNeC+&8L'WXrnRq8`\Zbg;Z54))NR^n^g<5$h-%5%u7dim,:NWlkiEGAo@qpqEV^"'2:7`A<uD@-&<)%erDoR7ltebKIDEGXWSJg0MNjYB8QqoeaRa!]ME#$[q1t-V&Y5Xm:*n&X_[J%R+Yat;EV.-XYa40>5lI8j`?^\?R?"t6+o>h42kCdC0V%N17,]F8W%e`Bucd4RI19VDSA^,R7e7.](A)_B'%qhEJ5@9P-SE6aP>:Q%Znl&^Qb&L$c"0OP<u%Gp-3`7'53eB%h:!([ct?ucs,tMZZ\m587eb5W#FDZrGZ(\<Q^rI6jBPLa<N][.='HBR\00sSH+tj^mnYe>%9.u;Vk&uGu]\TYY0977:+EICSe_Gp0-lp>8_cu)&Xf;?)n=okgI1Ym$\PDT)'A%CD<hD6RIlHU6YUYrZbuQW1GldQt"ji2Yk-3EM%f0`QTaLkb3ZA*36!GH=Qe+!OdKg,Xb2b^Rbi(qDd>mpZ$Ca&"4@H%70]IPYRE?ak#_E[bPO)G$sSIn?RH04.",?"d@h#S7<='\q)%LfG:rkc'jn]cR8,_nQ.5RG]J_"ogr#5RU^284T,TY322MLZLUhK;;_&irhc]B0(hS;`HBQVIKk!GId?o&S(Z(o)TLAcc4H`h(RBt%?8&)qm@QWc4NB,ZFWk^PMuGD(e&5rSKPO3^QTcJ+fA0bg]TOsN1q`ik(rR6a/&R"IoTiD#cu8s=R$I3CZ!=j79m,P>_*Gnfhnsr9%4VEK8p$Q`e_l-&j=11L'L-o<L6aK/argUS+)kML>r7O&DeZkSCVt#<`32U^fCS=bm2aFc(P^DMG`T'tkDclH&03rNK*ZLNtK<SV,%^sIjF[1o5+hC,6)Kk#Zmr8h$0!_&@oq=@VaLAJrpqo.SedWtA-l#*hSr1i'3Y"o_U:_rS8Q>&`Y2t=(e3]\B5VWo^/XPTs^K[V]^%&/D5+Dd&P.D8/h\9mipQCA8teKuJ$Kp0LQCVY<k>rL9\aIiO;:$I@^OWrCVseWOP':S$&%[*dKSUu(B=oSQ^,G-B?_p0*HVj^`jY%*NjP.W:ZcKKIrL53WAPsEB#ghk;#W>$+mQkqY(Ckj"&sjh0Q2Dh0H7MN3$k7J^R`Boek:CQUF:?p>o<JbI)r'lNH@WI\h;tPDG$$%_n=,uR<I.9I",=tVFA4>qcDUA(#-($Ame@!c*S<u,2hWapBI#,<i\*O)^ha/BEVu[^?j@pVE,NMOPt+i5l)/K@m;G+Z[(Zl+,&-D%PL'S^jXOq2s!o,+s%(2$Wq9#]=^>3>6u:P"DE#WNl`d\3-@Yup?`r",5;T/*7p+r;L0EoR?/]Bj\STp?Paf?i#"k5o"+(+*/m>ed%^K7Tr_b@PkBjI[6CJ624$ia(%ARJkLY$rRAEj[r)>GKue(ndb\DY43+!R[&=b:r!:<84fsEb$Z%H7'WEghnIjn$OnUj_ca<eG^*k%G=,oj#\PcY?u88412!.Y^HJi8XkSHQLDeG_aYFne*+[db2N1>=f'(_\^rMg.@>Q$H6at5Z]UoULeuDRC5@JT;A%?WXGL@sbWgP7K%2<Y1?D>IbcA5&Xi/\%cKcT7b'gJc:=PW-I%*6T4,;J62,/ZKC:[;86]E%Tt)8h,<t^>/W`mN1ZRW6O4K-gZSY+(=:;(2@Hn>3hGL%C:J>Zq30>pfuSdOAjX8'.@$B8rUO*Yfl+:KiY].Kg8^RlO0I)&GNG(6<iO^)cpP1lrdc,^_/bZFGk#/e^?Eq$?MP16H8$ltja*>4%A.jOjpcPY/qMi]b#ck<ch:iOB):c9,<%j5-0,&\CKG/W(EB]tLh=G;AdCRntd<91#`QN_6%=;j\2t:o)k4'V]ID4%[WiA5h4)8C"%OI1s]DR!QPX,ah!4'ecoI[(;oO,2GDT@tto[3+?;CpIObe_C,r,+^ikkU5H_@9A"_mQiWo?eF$`FQqCSOut3sC/rE!*'q9>?Jl*k%:Mb/'XTtf&lbkiajA*AlZ[NIoqt4h`N(M&JIB7_&PJ80Hg1,We,+V4#Go_C;ZoZaA3]q#BeJG>oib(->-(+=pgqgUVTfirtR]Ugq%A84im"7k52h,6-e^uHdnhkV)WH%>H=L[m*-g\S(KqXV-:o5Zo6khC*UkY!B#%`aFJ7&cqP53i$6MX^UIID["M9Ae**T]jQ"Y**D7%DsndF+!rO$AXp9MnH5W^O3:;di'>7+LK+a`3B.SifQuP.f?6-.+5F'u'@pUdSVEE>i3*FhSPerGm<$M$)Lb\(<[Hq!`%1YY'%./W%L-?eA28h$Z/TF:1[42)iH<X<+\gnujI5SHS<nm":[aos0b'%5aK:5!;@(04`<r$"*h6%6lU-suRNJm-0ntt"&l*OX!H!+p'/r+1X%"-'_NBkp&Y's-e-]j+6*)P[[`W`cpcOSpo*[*rV?>HKh._)A=;5OE9`eV(?dA*&&b+"E8OdPY4Ao<:$Q)h7lc2pTH&*0V5?r1git%&QicF]U1Old?:J]HlfYk#1j:NqQSGu););b'A#<d.-mF;e3X,u:83:(jjSk2>(+9c[(G#&5abZEcuQ&<l"3`gc,sSVi\`N82+K;Q%O/3&,fV:7FM8XoN$DSrWUDJmFijp(Kg@")0S'h=8nk[E!M51*QFcoHmr91^)SJXF.%:#L0!]<E2%W$^<<$7a]m;hrsen^N)PBJ<i%3`LdtjgO.i@n:KlB4Y$Q-go5[]@rmcKm<R]>^,g"df,B(;[?/b@T5-25;S!'&CD@O2Rka+_/VrHB]q-aHI:*O@s;megpuVqGHa$+%:?_Jp.(s>F+iPC7_U<$s`4inkq\"3p$9HOZX7Ms^bn1]-rW_2Z#qKl@XO,haBh?8lH`d!@52!)JGO*#^.&2+/Fh-$g<C?@m@+<r`%H@Z0k%]28La"2(h9W<fHghaErE:_/TTEjq`noNHd]in5%:M[=V6n6O+eZbh5Ur0$rUJ#I9gRZ]*R*1$e+2\pWXblCSO;j6n17^5?%?rCf#?-dQ2n=$]/JBDPchKI!?CX%_.Oc#<(-K@1-T"5T_EfSt1"'t+!G%'WXp+Vt])kMS";sj\(qm:J?p>u:OqjAPg(m[[\:+K?M%->:EJFokS!d=MqM%r3G":8F)'d]VuflB*N.NDW^hro;ChV:$:.>pFZ!$,(#X]UR+Z:24Hh9VJFI71<88DXFN.*qhN%/&%9\G62,;%otB*ER8a:p66CP7@60I>'3kq+".hVnh+G:cR4n\Y;RAN`/`"`4;Ip)1V=Y`Z8pKE;DUn%r=aleiE2&5?>HQcl_,;Tr;E+:J*"]F)%Ush/gN:Y<jf&3];O1`9lD9AhR19i3EMR>NP+%87(B(BcT87Adk7BI$IW-L+cHlW'inpud=<;FO41sC8ZIDXj\;B=EhSSj6(m\HmZ%OjG++_L&DK?*LH=n^X-_LZKW:F'*t#G!4%qC[o&&F2"#D:Zc4-kG=Z)4o81?arWi/d^EL2*^=R#>F"eTX$QK5U]KtdeuVVKZg(c?%JQ%5_Ja1!SSVpCAPlBB\8$2L[0ihY\",e-I!%6l7WVeR=9\ACC*A"SsDK6lPJ(q_j=9nW/&%Ap*q?qJ3W\6QmA8c&'LR(-lf'@aI%Nic(=^L1Rs\Vt9)3QEM-ZABk<Hf\iSQL4HAV+MeOb3emJ>?!J/&=u$T^,Wge;5`!lMCop?_]WO5SM8MS%l;Z!cG6quW-gPqpNbE8%FNZmfI*0\B%cDd59T:7=lV+jI^ZDJtP;!)U7)tkObj-n3$ietXcP"e-D"TT$i+eZ\1BXtB^CUu^k?5@Hbg`*R=[nmjjU<sbIG]]D%ch(CC:F467kV/["WL)kUT6Mal,?V-Lq"UfBYFHiF]?LCKp:)_mQWo([#(`"QS]91/\s\$=!q4<Ca"KZG18q_2WO7*Lfuhsh.$hJ.%ckbNg_S=R&YaB9$g;o.9_3UNlfHucXkY4^eeeC[o0d.*G]9/;!'"O,lIX7i4^pb&hHDXVf0\P'B*8HtqZ(lI@8UPR6dGuSHX=`aT%h>m@lRu`kNK;TN\()rm.iX',$\'J(XEi]-SXSAD$4<E_tKhZX4p[Me46a2L:L"o6mH(!H%T8jV\PLjsJ.iH,XdIp=bQorer<D@!&%U%,HPH(:&T%M"\G/i-%BMIZ6L_hIK<)m(jPV$eqInaX[cTLk&Ec7QWUO][#D:\mbfqqYifp<pa#P?IRGh'8DZa8c^dQ33re/>iT?%Q1V1Es/P.mgoWoD[F8=?gE,A^)jK)q2/g_fCL!2+5aiak13'/KS:U'HFP^r+1s<:Q$>jcjpEpZoZqE11[SQ=`p`%\Mb$sk*J3uJO%C[=@h?%qX+,L,+#<Rq8u/e9CfBt$QZ#51\_-V`K<`0+Du["l#KUu+B,^?a+E?'car%WZLp+%8JV'6PN@Xs5OND;n'LJed[0S/nI%%'^hK7%h(4+0PmEs)^>+!U51.LNS;5,S\q<co3'nL.6BD2R,?`mSH@HD<P4g7BKpcfpZ'/N[u]sZQesC`=a+5UCi+?=)WtmKc!,P6%>K]\6o!NMHqj73Vl*bqOD=dGGj6--"[F1t"cSmraMHARkTDOP`[dP&&\+$M=[VYlL\c*oP?uohgh;.E]1KPA.2qL^33i^P5DsQcS%X4$-b*?O?YNuh@0g$HDYTr(H4pX#L5-n_ZJ+*MsaDkFN*%kGi67]Y#B"29!Yn?I><?S'iZ^"rNc^\;n[Z#FIESW'Z:0/#<XhRr^[%.<h$&^)>h,?>f0%k/Kj[oB'48gNZh&?L/JpG,hGJM_nPTYHXQ)Vk;jm>P68;]=$+io3VFOq]HNhnb$dn,"g`O2kJfObOkkWh>EVG%0.ltbme=S9FnaJ<MZ<(Igu6DH-I_Ie>jX0q#2b^f<jjO(X/5a)ID!:V>I<f^gj67'p#0N^hWnW7lp#amB(+%@HDONR^qXUp[nfZ[%gp/V7b?h+?f@RFaQbDZbIIYFmQ-R9CrESUVmWYK,roX(6\[A[*Y.seFR;5jk2'+r-^:rki5!>okhJ2f7b&o2Gio.kFLha"*p:>0M%fXuR)pXV+"CUO(T)<P!_J$cSg*,a<?r<E#SI;*[W^UnLKmIkSYFCAL!5Iu%[Hhl6ZLDt03+4n`#4.iM+a3@':csugd*Lr:RmT]Ec%'?BA-f#<&]74uhDeWM(>hg&O1/T9DrhKnsjK<;ZY_\]>,MC^:s-b";:qYT73ieIAHj6cOr/tQG,rlULon',-?]'kT5Nur9nRtW5&%O(:Cl+)S)\^V0D/1Dpc5otB.$A1LJiCG-miF%h*dH?=[k6CT[lelLasL)RS]'ANKDI]MOi$Jum?:04'9h_(8arO(aY]RI9YZuGq&%GB@0UjnA_S4O5%9(<h6Qqu$F'HrL!JrU0!8IPaI*C(ne_b=,[(?dEneWX4%0.\%Pt=(sdjg@G2tO700bjVbq((DaK@`PXW=p:J#t%AuB_Lg0T.*p'K!*n'jBN9\tE`LKgn=bMZ2D40FXV)CM+YXD20`rSaON;R'%7>K38@#62#>e@;*jmR_28rMXp%GI5uf%hId;9PWUj%-N7<6(1KeLa1c2%\\W:N*s?"ll#-BIrnK[3Y^Kts4=GlRcE\&M5?a*RiSfRsUU64Hh@m9M2HIO-EMl"D(3[H<A`!;HU&O$F`j=ID%03cb\q9qLa&C4+O`I,)`Ss\\s3S<#b]8tggFh>?8UCUR)O7#+KTOD7@W!H`GFtOOtB^4+PEYutZ?$k<EVKT1K"o_]nmBgf("Mquu%qo-@,XRC=:VtjN*js%9>q7(A"^U*eomaZWnG..K6q;=FhYNHE<m=!VcNLkP"5%_X7MkpY?^#NiPGPH<aYZcC\<9+B]mlbf78'bCP%Rr==1bJe>ue[pOSNJGOIVeA'DgWQ]8B(<%9p($5t+)G"2^>Dp"cj$J9R5*UtGcq8:n^5&*6,!4^0DDLE'\M;+gH.BEONfq8J(S".%e6'6WrHRqT]DF?jqL0\&,3-Mq_J/GpQ\5c,-l.m4h`@ZQ!7,M:YbdkRJR@O*j6mcj8Y^_4!/0Q2CO>lUnd%_TeQ^\Yn,@Y.plT@>%YIVR4c"=[jHWA%fh81@+KkJ`'XqWh'Sbr%0p>tX,PD^MGhd"s:mho8uX,lfMo_^)E#PR;Ld.!P9c.BtAV8bFk:Naj*-E9**C[_4s%!<.<=(pNS.Net(oi0NmlZ=I*eph]1GY<MjgJ)(Y/ko9<'C4J#;T;?]Cauqb8^V1Gm#StE\7!i,c%h%Xp:b.OB?kjUMd2.-GeUjTO%8ODF0(2AOoTl*bfps8hALQ'?tW)qIUIQ]YYP2tRk9,f]GfF$0=o^Re3oj7+K"r)C^"TIRo:*3(\r+/fdil3Kc#^AHrgj>`0q3$[4%P*i0S;u6q90ea'dQY7Se><?T(J5BDHj'srAM;dB5nNV<4d)s1j'/WNmU:Etk--_ZN&,7g./,?7F:M==p_O.b_527XP]o&0!n=%<s%`XWcF2iWJ/%^"&ZGiYOGg<f]O/uk1!U7;(?CbMe48WE^$FnaqV7&*j+1eR?P%0sA*S5gUlXH@4MOVkK+jLF5_\,l4jb'fs$Uu-Z1%W7.jb)Y/*5BdH.0j>YK)a5?AE4Nmb+bE1:3m7OJ]CAYaB;Z0$)_JX<g@8B+'[9iq:s(4j5(Z_$qK@@/>TN46l%g\-Ld@4dnihd8'%$]@*)43+"[3(pEOS+L&>DA8.Y7h7N0NW!&l\)4iFW^PO_?^a$LBa',iP$W$7OUM=m?U+`Ye4_Y1JALembIn.\hu/UGXXS2e6`HHZ%0)jQL4!<4MLL_MY/GcJ3_qSL#5.(dESp\$?<jn%+gd1Q$FmcKCgXpsW>$Xc"=taatMf!$)*8HU705b1lj3dVVbP]pTl7c,JC*Wuf%/5Xj5P!.?[%<&rNqB4sLg,g_LFWPoN<C+oUqKY$om-Q=MP9jeD(GBsC0>ifLrCZJnM!\!kaEGX"[N-]!%]EY]gArhr][rdnB8+f9%h8@dsr^U(RgY_V(Dd2AkO->QsZ)5mbU2CCY.hoV8(A>Aqb@9GbgZ*\KS%H7\g/pH>rUtem0mW]Io+%cP,]4pZO/*\@=T9@B"Y3_V%G*=HbpHdjNG[*44\c7=%G\'&;$B!Q\Hhm8gn+3Tfa,eg4>U@E>@>eC+ZHj:r6PqeA4pUs\C&"B!lOGrd9"a<Jim\5OB2mZ7bj.CJ%!;fRX?s1GEIo?0q#RrE'B6i];ojRCVn`-:HoA2P4F*u_!bT6TV@(!1Uh>]<>V!o;W<m?)A<B,F*E5r5[M?WU#FdmRt=fPqV.3C8(%qQb,8@be]gMI/P3\5V1#p:m&S6,T%q^Tm^gl:9a4PkMOlm;G<uhD\b3"2Fkb1&'tPiL=<8IT?=X0D<t&_n5-)ll2d6-gfPU*qVI[%+"gr-o&lW_XZ_'EF*t&if&nU.@.r:)`UekXg@(ZRHZfi]/RPq=bX]/%+!O4*YuY_k%9TFc"ci;3f\6EBhh\^jGKVDRAD:kb[^3.Y%5'^*+Xr9:j2V4S7^CB>cq5n2`06;n1eSd,pO#lFclWXD7!R8ETV7mi,OuoK^J<)iRn+LIYK3,ifTp79BW8abfIG>ScS*R9HAMkj'%l-sXTTD&#ojc3Z6ha7K]Fee_GdfO9UY!h&jd"/I+(t=JGdr?m-6m[oDmaWg\\U,paUH!Q!)Q'"9><&n*_l:7L,6W5Z)6DoYrVcS=%Z/C!`+$P/Rq8%$0.BIp!g6/mk[n=^(1nHBSO57Ku+a[$kfj&mom330?8+,bR1G<$dYkV8QhcmM*lFZ^`24jQZear:R<ufPh,]9OL%893(dNuSl*k#UO(@ut.+`T)Zcos/LaJ>#0jDEiO,Sn\lg??`oDgqW9)pG^^\I]olG5!:p\>^KQ%X(%+6[X2u!YXfCRA,3h8Pj6h1%[k)5EJXtYu_#/U_08/_Z,uQ,G4!jb6@V4TPdIZ+4oA5s_km.FJPJ=PeNTTE@ku$D]@<$Y)ot6o<2KKtL/,T#:"6u'A9V*hB!(.35%Hem3gDfS@E:#(K>atW?)9:MK;TV't'=T,m5qr46bN5'c@o:i3C/<1dR_MTd*!!VK5lf.I2q<D@_k2Yn>R,kSXS)9i;_Y=A+X+&>Y%BqJtUdl5G_K.."Qm-(YA/&e>cE.?dnEDkLJj!l8KMBor=fr?ui;ck[h+5FnP0Ag]N[f\A?2-CFP"\O+?X4Dp.KrE'r[<hCl\B'Gj%Je<C?=3QHf7II*N(0bq]Nc1<.heS]s0437D_DD`Y[#4'pi_egn8(]YPkIH5?c0rPcj%_O?Hh=t_\Q2rd]2.4+48B]g2btXbd$=1@%gSe+9(3V25qcibuZSs`2?gc\NiF0AK0'teN"]%>tHVt09PF.&Xp<6flp/g[hE-CENmB*e&Gu092&)sT[lbgk?_\Ol9NuRin>!0gT%]s3!kqOsJ0]U:PTkjDf5`T'%(&#"I`5AboGeuOlCEd0]jHJ9fO&!dtHf:G4653@lcmbUPeQ7':A[3b(6P09T<9N_8be!L=0oM.-5%q[=t6k3b=h@tj"h-h8-1[D>:Lq^CV2#A8VdFfPP6gbQkb5s\=:;sF9RF874^cQ64s,sAfkgj%V'$aR(p2"$C&,2Bc>fA#&chqrn]%o[,&`?E0Sh2(qhM;YCd4Ej>KCb`D.W^@0k%(.uJ-oQ<KE*U=3&#TnZ.MDaAMH;V?TI_V4rp0L_+7NXd?;(Y`d_6SN%!L,/:Q[a:#%(@tmF_QC$)Nj_l]dgKct%pu]X'i'CpHK!pND)!Gem;*JXp#^+3LCUC%R!h*>>C2K>rD\%8Ch&`12=oAW8o\(*/euuY#Ii6:^0Lfc%J$eK).cqdj\Vk=&YZn7`%e61frd>WQcNhNaZ\<&(\+@BeP8e1F\\J0Y\7tSq@Et>i`ENk="dlNtnXI=ISR[)%D>;'$WjNm!h.Pcr%47^+aZ`D?ijQW-RK_=?QDBfsfIsQ+4=P/+P=Bo[s^g,`NB:IK'#<Ue#;@S5m@Kh\8n8dCESU:qHqfHmh-$t,P.p2$'%Q]M46(r.2%G`U[kaOs3jYIBk0-_HN`Lr$n_]#u1/#%6Jo]H>nN@;3otIsNrW$?:!fMC.r$>jM=L"5S!dZr:\l.uS?*_N15U+6aI>kK5??%sL5)%/FIoZ@D,q<[DKUTnMADgk$OpAcl".pamS<_6MBO:L:1h=]?@>9KDWhEW'U,$QkGm23c&%3K?>-Y"R#3depFF/+J+t>p#Xr5!C*s2%FKsZ)SedZam0*82doq1mkmm\hcQ/Ua:YAo.h:lRHNSFFk9iKbngA\6uALq2eQ+,=6firt!E^+d#Ir,Z''W4m^D:H->[^I)>@GNMa%ID-PWf)T-[D&g?I4g11>N1Op`;trXo[Bb5/HFbl.gsOreT=<!NGAhCW*o>EMZs$t.p@74_4.,9$G&BN@RC;R=HAVdcoGAqFl%AGt%Epp_=&t.D8\'D[2`Ol(l\7PED^sW6V>I2GN87TaH%[u4VDghMk^KK3k^?QI,QBmDQ%(aXF7_*iU6)r=Un*]Tqead#g[..Sd[5:L.%Q"k-u:)2C:EphJ1@uue;L="WD?GC.>Ib`TnfFP8@TV,8Eem<_aknh*`0cRXBXQVA:K>*QkKj,Jma*l7nY\79h"QAifWGm0mIE1_<%lTH^=f<_N7<bc!-cX8ZB&%o;'%hJ1mki(I4=SJ:#-j4]RBA^>Q$H1\3X#Y[-gV^5r;!<)Gml%fPhq]nIg\^o^&8lm+*D[O:r*O:P%dALhh+.lTi[?Hr$dsd;6#%1\!I9Jc$I9n@?h@#C-LN+q`']q*l0\?WX]X`(N6[R!<4!4Bq:YR6e\[R8KkAG-eHUWldnZ58R1S9h/%Z;#DFYXh9Gq=BXdhi#&Dc1]l_DSMHY%D(tO&KDK7q=6u56#F$hD-5QOp4q,QmDqF^71NbH*u7^3Q#lpsp,;b6G)1"_M!]]]NkR\_%/Je1C3gP-s)TTOV6Eur*%eB5Trmo'b`em_l#&67&#'\]aWlBT/bRJ-[YAS8=pPZ)fa/Wp/1Q>V]hiI3H;3k_d3d8q#I<?W]^OMrH%bW*UHpGPXubFc8ZhKR46m$sog!nmIM"s`j:qh)T!ah.$BG2)&T47A6b?\q9BgLnaO8!>1rKTCY7Y8$H8SQAUZJEl_/=S/rg>==YF%Ngd/;HFTP)gt2GR<S4:SQ]$c2$1-eU#Kqh7>Gm54""r@Em[N[C3>)Y;`KI\g:j5kUel_J1LU1UO[.X5<\W0/UY9g7,o$KOH[+!@0%^Z:u7\F7JEO!+Mt[O_=2?i66dXeW[8hHMWS0>CX/kY"n$d<9:jCa\QERQikehSW915='<h6/15;[D$id0tQCViH+Db*W<?+AcQUn%jYtNGr[5qR=.oRW0AbGd/3[o=Ae>kNDu[rqp)`(1oTngV^U>X?b>jKFG\]L*B]JelSG6UDf/=85ma'bPqNmIrmO7NEK@O*.$[[#m%S876'@S@cn@P-]m2qL:/hX[,I8##MKm'@#lraC4r<E08$@_W9IYI4HP:8joA`Oe4.FrZO,]lc8Yj19TF1\YSEr<IE@f#lS/H*^]R%.l_n1!Eu+).]=q]YMK&"&,+2a#F4`]j0+^pM0J,`rdb'=TQ(q#rRWDYkW)o_f)Imn/qG=PD&"Jf,$e0)YEs2f*F?BrEO!@0:3m?o%Ets\I7$an*%mu<&M\>2K^*tri/?m^<W-<UA8uo/`18q6j]?Q6B^.FI"eOC8^`rG/aci&1#3=rcY&`Eg0L"]?ohTf=<M/aBca+O00%?[Pj+,AbZHKW0BGXXJCblG-6Bj7cT;cY"fglPiB\p3HsL4^/Kg%2AIR$9gl;"o/+WN.YO&A7:=PB$C.?;KIDPV"I3Q;LZ;`JB?`T%a6'Wd^7X@-2NHaKf.'uAOEeEGAFO<$GCRf6G'r0RI!bq5G&3eBg^/piSjkGNhl$Ki3G)Yt#p\rus#Q`eHfCB`gJN6D="MtJ>/'*2%)@N]`B8*Bro`Z^^Z``D7!5`),VD!%ESV8/<b_g7.kf89l=[8SZ9Lqh[:eV!-66[AYSt?TId-R7LQS?(;"^sC;Jmi-sIb'5@B829?%\SqmC':;T5q^[><i7g2Vn$kQq,9rk0@F8jYQLC:YNM#Cg(6+2%bcG5t<2#Y$9W/)?CRSD`2A#MR4lO!j9\DO)mK\si=c:HH23*3-%_tEs.!emimh4D]60M0WM&73q>((bSnL@5<a!WB>ef0RL$$H':1F5aq8H3&sIFGg)2!V@_3Ek[rq0f>YpBm<cV=93jjA:jk!M.u`f%dgo]$,4L6jj(2C<lgr.<%'+pT9\[X7@%;1sD8Wfd4r=JW0X7/6_oJpL&\\Ft6qmXa'8kl(YVnVai\&^0NT_uiPNc1'Y!S/L@G)ud%K'?Gm0fFWtTS3FM"47<R#X,Y*=WfFQ_SRW,TbUWoO%30)@r5_u6lZde)#tNU)M&qqeM[krRl,l\Aag3RBQ8=%,$Z@CYAkjmVD!0`%KjhKZiTdWZ'.EG\=7B<2^5!A:H7#]ugLJTaOY_DM$bp,^3-$_N(2O$h;kGKFHsg6F"Z([#oXMpclT1>s):8GmlTg.XfKN6o)mK8Z%$]\`7FIOVD[;D9o#A1cZ*J_hc2Z9o=R"!WX"G*cZ>o6\aJIaldPtP6+Job=BWCC8e\[ItFd4W^X+9!K?\b6)B0&&gT,7I[XJt?au%kSYjtbK7O/LMo2`5!SWAgY[^E"$7&T$k(ig)b/`i1`b5j^*,>;Uk(LC/ppQS599i>T:R5S73YGVTJr]t?Nroo&Qk(0Dj>Tk@,PNt%^8([`\-1$HA`<nNi=!]G0omFbfNTI`5QZWTXT-'D`dm@7dVsU\)Tr@JS-:%bZ#+mBMWOq_!:kHbKpa5ZD&<0n]oe#Da_t_;do\jb%XD!tt!*;kLg]k!L#(nOG>6JA;!!`N1pn>_>;1fGH7["u/Q@+D#'UC7(iP>c9JA1hE$:CsJ#Qi[)+W,8bPD;q.\RQ6D/K9#8A$Fa)%f,Fc#hhLtm/=7IjkJ01sJfr[QKEgNS!a(>Gj_.a&0j&Y.L&kaDG$MZYD^'`^Oq?t;P=UBji1%/6%Kk9&fZkTD_T'h'\DW!i)[K+S%1?@#HV^$J(%4FnW(JpIe\HiAG%S&jO"bJCH71p7fFWgP`>20l<2K8JZM?p147'u6U\3G:6$Ba`;PG8f,T02\l+:^XTV(ndG<tc@5%TVb^6'R2?+Stf5AOC]8p<gO:b[)O3u[>tEKM[oMMJ.-9?W"H+`;):H=8EU+1C4.Fb<pNj<V\ZmF>7>468"7@#*c(pK6;gW/0Emg8%@+Z/AeGK;R"8Ridr5FX4(@5agLqOH)9\Q@5E#B$TN3MEA2XknsH"K;Q2!&LLKg'X5D[r"Q>sB0V4:ugA"4/M]lXB:\^t/^R.hV!6%EoMb+Hq#5S``>f9:F<#dKU=$d!:kB%L=dNQqZ9V3Gc#9]7&`PD&;J^ojMLSDa'?_q22FLR#^BGRI!X0!`^$ETEi]N2`9(AZ"IZ+`%R<NQc*k[ND3-6]eH?-;2iOIN(.!VERRZdPuXMe9UTE%8MMBLF:8Zi534@,WJS'9Q!KB;>r>?J%=GCd`p5k!&[,soJ/R%c6i5D(:l%Ga=cU5W&GDA0l:-K^(EC>>fj9-uokS4=(e[gU%jhI45<S!!GL3[28UY?<pYIEisi,CCKACQR>+kj:k:o^m@G03IHCq])q=&_c<eS%5kQ$=i@9Kb$4n>rd\$qqBc33q:eo,Oe3&;m&EGehJo(_EB!gboKReq1fn=.&*$ET8j=^-H'Oq,oI:+?>!,gs-Tojni#kB^ENAaOg%6/gMnDAn8ddjg!pUc,:b6\,e3b0!),>(7//`Nle2"C87EW14a8JR#QmCCDfT]\6dJ>+QlTO't)NCA?2V_JqAVCqu,?/>&b@!4I\'%0Z0P`J9n3>>[Xd*gg7iSPR<Gp!J[2I-^6A38PBaG<%"!-m>47.:ll77Pg^u]>c7q=Ug5/I29XeUWf3+S6?%(?K_qY%Ktc`lGqi/-%1\WZ<W8/_Q6[SoX.II`%7:<H)JP#dT6Essd)H\0p/7-#c:if8@/\*.f].W>`)JE[cbX"_%%J1#9-'$QVK^oHG,Zl8;6DI'NfEH8&%-<c3:N=ZP_oYsm"]c%e%>[&<u5Y:X4"(e8$,"-IECfC`C5>`_A6F]OmL34o=0*YE8[+\Jd[8u==MTLds#r!-:g:+ko/Q3ouLnU3!%"NV9m[AeTaN<tT/K8nR0^eg`A&3'bZKlS3%U/iSEFjC@,%I6hY?joLFM//$\)n-^rPt#+C<WG13P8Gf,jUKPdS'[gqPQ]&QCUL.%%%?Ci+<[=&,>]pl3KOEA_YTZ5!%&3N;85^a"gMjq^[m5P.+r*[?KU`1.?SG3]Y\bm685594V@Fe\Z$@1oOFW-"Y"sX'64S;qTK]UN%/`GGo5r9j$b`e]V'd6!E%n+bs!_j*aQKc=YSpX/=j_Isia'phQ$'H<^&<O#`32Q_+\-Y5&7KLNX\!(P4J<".)\d:]h`M4Ur84#]M%f-`k$p%t[^)t"99e34ur$tKO9_iR+sSXp,?!K/d2E=A)M!3qDIo[u(_!b][i9$9P,XMgdlHQ"jFH9\j.S^?c\5WM[9=Lge+.g[<m%bH`]m@^nQ4&ck_0/;Au>H1F=#Vt8tP$lgE02:,onORINob7lke#tYCR.J9YA6)5_Y5Y=;tYWXipN\)O?)j-s)VK<"cH2pa1?4YYf%q@\4CH2<^%HSk/nCJu\GWe<cJ8P&8>oVW&E'@H&U/&>[!Uij7VJpGjK>fm*E*aEgG3XTuU`sE;.?#@\.!X=i>,]H*P.rnLp$KQq.%PElctp)1/d3t^QNC6R>LXrpXG<fSdZcp%Y.-L'.pW-^uH+HZ_]jMd7%%hPs!;hOY:g3Le\,m#+ZAE]>1;?<O.&r?1@N)1Th$Y.[[%DF%3)'d^HaM!CN_oO=am3K^Lq.SE%VBRV*/Fh?H2g#In9Qu:'eR'OC+$!]uEPCR*Qo4\WC*rr[qj@Y_Z"#&V^d%K$SO$K6s)r916%Mue'i2,H/?UF)8q4ojT2$&:p&^@_A7he\@%aa.MQ'[n%Q3dHaF>BCj`e#\,#)1Xii:Cn0k>b1(lJLAU^r=[]t6S[!B^'a)o7bllD%(N!*W^a'[$CB+LL`Gg7->mWR76I\9LGBFH?a&#D5fU6-g[-aY<M4eYML+h0A7c#4!E-5K[gPEqsTRL*tO?J2oneB1KQ3`F33rCRK%C=kCpDHe@H36E^0rBPCF1SBlNNK*D#Pm0JY#7)Kr(Xb%uJhBHQ@sbMGkHO@ZM^7"m[P1i"^qp\lRU$jL1I6S[(etbGDIT``_E\uH%Ru(Ss!\?3iZ8.XO[]_QWV_9Vp=icojnu&oF'VE7u8W]cn')Bc0;]cDoA5D9?1GNH<8HX*IQiNP(!Q60;k&QS*&ja)5UmqC8WLNSQ%EIae-9sD\AUf_.1`]dlE!5ga#F#8VG31aUiJTSOO!g!gQ5sQ*$CICkaQpb>2!-9]@YS\D[-0pF3C,<U9K/%ACJVT;H4W;3b?r$nm%+?^NW)AXhZ"M#;L#D>d;>q?Vg/0O/Dbc\?o*hLh,CPs?N289]T3dE>+(kFI]99?6-Z4U/a82O4H=&'=.1hs.Wd^uouF=8=m<oaG=%1h[VS1@2:13<I]r71uDq7*+oO<?rqS[NMr2&_S%*0kH;WQ0FB8(V8"G#?]E+;J+8eU^qGHjC*n(YB]O\,>B7jdm8Fs-d"GoY\PS#%digTi&W"^ccn3<[Zg_q+:T6g63me7qRfUThqSC)uCK%,k1.nr`b&l/`dih/dAdjmOCaT`F7t]6+/rd05,6p?P=g0]XS!5gAK7l&h%ACH==nrsdTad#G,WC.(U0PG1gR_hmQH_<]G%q7dhFFHOq$eiFQQ&$LiLQu[:**,P>J_Z,OSF7<cS<@-7V,;A5;]o@?I,Q4,M:@3"%jSV@_mXpt$JL'IX5a#Z0+j!RA8[_<ZboW@798O_BF.Tc/@a#,!T(>Z7N\j-=;==/qF20\BmlP\u.&WqTnB'*ta1/meVQcEt`_qoG%8A6196Af@461eD\cE!!a,!n1LEtQ8;'N,rf7qu_uk$bs@1(E?=7K7KC+eL>QL+eU:9Me<V_*)UPU*-laBu#)(Vt?![5H&dgWuuHE%2DhUfmba"0"e$N+o/)C+[Ef(?_-eCbP7eu$!qd<,:F;Y<YpCm9&qPdSlQq\6puID'?1q34Lr[5IAmu?a=m0LUC[tj<3^H5R;*t']%D%\B3B\D0hoeA]ASq"^2,S3D""tFZ$b#G!f#:/Q<1JKaS:pl41!Z3Tl<BH(c!_WZ:^f(@[UtiPs^g%:ldNBX_+dpP/BVGF`n,t"%%g7WF!#W[&T-:@o\NF3(O<.YqqkgWO[An"/il0;7r+<huD&;(S"V$*_X'f?PHI<aPsfa[pk]6(+X$Bu3#R%GfI4N;=tYbZj&^5F^C%-11;dT_A2kdnq2SFopJAh,jZ>*r'?qFU+:(ep)lD2BP:X+0]B*&[8ug3[;j("T"a$>m`C`pbJii&`?/[-DDYMnhI6Y#'GJHAeW(@%^@X+d-;f,K8/h%,&Jibt8n-R#<I<NeU%)#ZM-G_B>m#?_3jX7=KO+.L8>m4i)RG=8*/2A(%SU=/%kV<`39V:"\bGWq0C\0J!d`n%%\uMtI@A*)n0ntKuJ1?=F+>B<67U2&,!=?^N$UE-b<hT@n2NGm-%/5J7\q:hj$$ejpMAGb8e)PLF2RaBP7tMjc.98lG-,MpGRG*u/%A#7O=N[iWm,(]&h9GeUsB_+5D7T7a&!Tp]IJJ_S"1`@-U"&K@P2id?GF=e\IIKAAPlr-:u)mo[_K]#1OKbb"*[#]kA1Jfkq7Ih/g%&>5d28Yp"Ed1?ee1J!)cq\%qf&>T=;`":nS&Zj6nK6T5Xa<uuWHL,#DN"5"_&uZKe?S`_"dg;*e"3E=.3O$kLZ=,dg)c(`5I*s@B%,_f^*JcQ-j_Jlou@_81G1-sWH+mcbRL]K*o8jQY1'eXp\_#D3+jQ@QfiQ7eO`LO_OG6QWnK*MO4\3;I.LkZ27/4>02V,Ug]RWO5:%e&E[6jVFUY3-`_7ZOVm^Te!"!lD!"Jm\Nd(I7KTE/.2,=_`<h.j!*E[,N#h=1"S-?3[o#FLQ%%c8YjfQX\T)J=`0rR.!^H;dXiU[%Q17*THi-t74P4`>'MFNa<T@Ztdnq5Km^8&]>P_XbNWDQ'5joOZVN]F?G7:.[;FALSTr>l-K1*`kUmR?63KD!L6Dg7=(argc*n(As%\*sf<7ZNFO-4g\D&@-SmJF0t"6O96S,6AM$P-n^l0k#e=l^\SLTqR#FO<nRo5i':R#S(5s.C^=,RK>."@:9`@R-AU4PDQ$h)@:,Y%5(V*bN<<,=nVA$^5*Url-AjNnegf,l\ahUY&!LcI8sDl/0ET.eHVd8W+csR3@kiWJ#.MRg8g+rG0X,6$7]"IQMVLh)8r'?:'NYY6%0s61*i%ZL2f[DO=TN2;/'/2=q-ZhBNgaQie>/rnMibG;0X>S@?dLepK_IC(r@!g+oLEZRnq?f)R5gp4omrGWV6$Ulqklh]uOK(RH%>VBSc<1R&c$up@aKc!a'5tT+]nds=m.2YFP8JJsn@LXtPXO&,Mn5*m,:`Rh=@=TKl*TWff>5Mtfqi2AIYWtq:/Zp'='S41=!2Flm%/C6Prr"EY>.Q>^,a#O0Io9gi8]\FIEIOpQU.\6ldgNX`/[=^u0fFFJW"Hl60:HsRa*3YIE/lFB3","T[:n03,FbQ);9[g4fN0PNC%/9Wo4M=.ItVNju_0_X;p1j,goA&-e-0n`+/51i2H;$%>\%PMq^q`Y>lL#g@8A"11MA*hp3K;ZG*nI-Kmm6nAJ#gn0F7@:".GYeq7%/>g`d$P/aF"/[V+(!":?+i;[W+@&V_>`so*AeV.dKO@VH]XVH>C5fYSJC@]?*7-u!G["S"\o%&5Te?ri;T\ud2ZuLDoeQ_+PK9ui%qT#-3`,_L>?BQlXTeK=E"NWJmNZhq9(.4ZD1oNa53ZcCZ]q"E"=pp.:`0Q,@(nSM7>t:n4F<H5J%':625-?5a**^PEJAYik\Y9(4%hd`!X"DYe)!O;]_(.^!RU3./9I'1Bq/cp<po"'cENYZQg6ip7A/mdVDr2%2X*;EBuhN%f\NSkP%!KAYaK=Y$B[VDNVn)m)U0r.@#%q1FXR6=/TloCGg]U`Kts!D6jTCcf2+!Xp52K&iX50Fh<D3`us]Vmq2M2B>[f=Tlb*`Fh`:0WL2o^GQSW%HN?X+#]7C2$-]<Cl0A6%YUNG0&!7L48P$7h+#]h/iH&OuNX6A"CYXI"e\`@i&pu=gL[ud@#Z.pB&CUpS=qi\(a5E%#i&H:%Z&K+Vb>inD2$Q;-W^AYL"'HYO%,4)"qYX'8]%s4le@sGu?([SM/hi>R\DoYI,bN@p!'$.<R"s%.Y#?Mb$#toJq32@h8"*aqHOWI$U+[XfEn<eja07gqu6IAd?9\dYX%6N<$2kN.L+9DGbW_qUIXMZZ3Qdj'OK8J6X;D2%CgHKZn,bi;$mYZY/`/d3:'oO1B_6X]bt1485MUg+$B8q]]_UjS9R(I!Q4TbId.%?!q17(IE65]qRi9o5r+[@jBS\Gn9]6cUF!67'@XuT&o:m1d:cb[OHd!2c)%:M2b/i@k#J566?(CJaa>4>"X^^j?b06<RS[Z:aP\P%#0c(gO-?k]K!b[^=Kus1G`\T]l8BSJNaq<)*?i)%W,kYLn1ItOQtQ6tFa7;(?TUAY(q"6@$:Gii`7T&sE@D+tLEQ.9'DjXHU,4o[%_[B2A9AtRZ(uSPUBhNAmEnRK,3?56<("-KcfW>A(0AYN^SSK-k6lk2[A!]j2fFhBC^;XibboqSH0a+&+^j[ILIVDb;8-+]/H$Z\<%#FDQ73?,]).#U7HK>,.]J`*,'![g(F!Ht5P:"D;_3Y&-+BN/JtK>lGn0Z).*dAJ[/0edNfrE*Ka3%cokQ]!4&'-n0HDhZ$5#(apS%;ZalV/ogOc:Hd'!*)dG8H&^Sb/.lP7B(BHELrEPRCa"?@+^?%?MW.MHj*jGi7suHt[7H%FD<MkCCNO%2"6p/8%8!e"JJdV0Z!<."%*ee;MO.B$.d<&5s$rG1a^-%86BMO9O8MXR0;\5MDP$4hO>r9L]GV9QW;T`W7RgG1r>1F\?7mqtnR1Z_#A9oj4Nr&Um!)^[Q]NR-W%9r5]@[3Z8[?&Ip-\ihlVd6ti)[a,GMGTu[H[h-Z,<#CDeY[OEC*JKKF`mJE)^8(*YRN;\=1^J1O"qS8=.G1Rgd%`"+A<kY/KM780%7iq!-%+uC":lBks\ibD`Qh6\3A*=^oVEf;lOJ"ijLS[`Sjn3"i"j.*[3b"/a7>-`a8LW4HVDt6q8Hj*V-Jm]lcpDXt67)m6lB&ZW%M@b,$&9E9Q=1Y&#ODX<s6H"c&:tAndb)A\sd!iblFe5B<<!\7&$Bm^XNuTYI,q;+K?kR!0l:[Ks$A%>9GnP3G[qXcJaQ`iUj`DRY%2:%@o$AQbi;AOMkUHTD,)hRZTStS-dg>jC9!Q8PeN02]mY9gSCia?R9m7t=]RY4@lL_1-o=]SA-d1(VhL4R"3:r<<-piQ$/jJ'WB%B;<H2'1=B06I7`K1IKbZ'Nh*A9UmRVrYF=7W(L_T,Tn9V^S$,p04FAc$4M+ccu'a()B:u6!2K?EPpINUC:mRsKYGh)PbA9)[=K?l%J`rV::ItVpadE/@8:$aKYUE4<5sSUi%-]_4'rKlQa-!Vu)i.9G7q$L\J5:`=bQT&AB<-E`(_Ik6"7<Hq+dMi@2_Gi9gI='b#dpS&%pr7CZa;?LY$l7<\^o.EY:Keaj0<#4R12nXe6n;ZP7C?#1aC#:e-685U``PnNWgfXc39.fAg*B4K+@HQQ9F7]%Np;iS(dTq2ol>X9%"MH]6Ou-sI:*4'TU@[f8TSM,cknl,]ZMP.TO7F;7j>_7#)6HR9EIoCFK&^n!3fe(*+_im>F'pB,*f$$hMg=k1&;NOmK^"lmd@i6f%S\`_LJn5`bA0+01KoaS3%T1`5d7*q#>nMZ?nc>1l%oA#4@r5G/"$Q;EF5U=*Un\?O!h5tek.IDD+0udf<>IDlUmI8R/$;U%W7AQ+%f^L#=KD7983>)H87ij8#(f$R\1\[.s)Ba(@BtR\:'k6ZsBdR!.'uESm(.#6'((Clikjrp0#=9XiNSk)#Rns>[)BnD,81-AX3f;+[%;k^_,#`6Z_TU7LT_m9to$l2b\@rVSlHse;#:uYD$2Nk@l0c%`J>meu8<KM&drZhn8V78sB$"NJ(27TepLJM3$KfO;Zg8&fl85]U7%0U1Zk`,"arE7-:(>_B`g%ON]ieTnAZW17?e?UbUI?7Dg>T6aUZZ<SMjpBcl&7OOa8#Y>r?8%qf4q+CRcNiC3_8MIm8L\doc.F<-H%Q$=79DABa?'ULRVi,(lM`('/rN^L3ZhpaoOBr,2bD.dW]X_KuY&6;Kj@&Uk:.oPdLaV`jQGF"Dbi1#I/;Y[,rU8(p5\6S(u+@!FN%n&ZNSFFh>,&s@/(cijoQA/ClQ+Ct<T+V8!><R?(BB@0/76ojtR8)d4WP_sdf6]38YKoL]?ZBAMB,]EfqRH`2RN@n?':s8FBU]AEM%2^9K2aW<7.KK)am8cZmS-:\>$&.;ul-u[%;:_UVNO@?%-k?!+!!+T'>^^cM/fFO3dW0d+Mac1%n+XMYK:no[)Or+XC".]F;Cneh*%GQaeZ$[nhG_[ET:3gA!+digTs0c8A07fa*:Oca$6dRfP?`hWkohpP!@`&qG)BdQ='UiSB5*[jP;j*GQ',Y)#?2>T"D$\rH^@!$mc%P"#Z>ogLf&D0=Im_f^Q9[?3T'EQKLGK:!N'Yc&Nh;^BqFl3BYY't>1#TDF,0-t_JLUn+G8L9sG3NKt=.6*Hm'/[0ko*<55DVG`qI%9Q_'j_4D'#8bCn=&_VEp!(6&aP"l(#EUo3aP>2EQ<6m$%8^%_7&-F','P^%gKoYnj*"Cj[@nn*^91&*@SBk63?4PVlUPpHt*#".&%$m<-kLL]CsE^QZ_p5$]o]`_;lDfKQ&KU4+iIpf\)TXM'<+>6/G/eOD`MWp5A$hUi5+fDbW)1J<M3nVhpdil-'@o0'V\g9-NoV-+S%_sX\kl:aN92)qNnWQlD%S#_++b`J,e>t9M:kCYd00Ik;DoN3H[f\#7b'gCs*0hA"C0'2'-9*BJFSqLA'F&WDsK9XePVY\`WJARK/%-LeUQ:H:ff;A<(RqAeK?H8/0@W`>o`b#8n)MS.@;.(c0VM#04i-5AYr1]jZQC*R<2YTN7JJ342:NLNI(C8>=c7Wumt=V>-#3aA:n%!]h^U\Iqi8O:"i41C*-_4G0df`g,d"24@n!5]*;0T^5.t7,6J30rZF!=C4:^74q3&P?i>@JiMR>@_hpu`!&<pF(tuYe5G2ckrY)W%T8q,X6?eeJ/k*Ta]FTBB@iLYX"Ks>[p>o.`;-0>;d4q5&iSNXr,+S04NDm4W&Y\i'Yds6=QTB5I0I)Z\9Va!C<[O\\7`9@=\7*<s%TY>J!=c0B&PBVuATI,D^nT>L#4(JX]osGbp6d[gS>EB'F%A?K"-A0A'<s"942JkWdM,/\Bn,rol;dDRoM$#;,'?JLS(e)q.Ap>)r%J(QPVRjiEhi-CVas7UkA+?@JIL#OCh^)i>6eklPRVppk4CH$Zi%W=h:d(bY5JB<L>_*,_Ad2;a:$:@*go6h>o,O,m"9S.k["X3pR%PoCro.#Yt7YVs.9B".r1cT^\TIKoD2@EQAFbXNc0WJuM:;]E-1Fi`_7h=r+J@eh]D7s'if&<:gqZQh2bdZ>tUI0k]d\5_iMil%F0%Kjbl$Q_b,Q?(t>T,*[q./<9Tt#jc#]dOqf2!Cr7,aFKY<-V*%VO<GQA#]^PJ1cVEd9OGW(F's]j&odtr@.Nl_U_bf0%;'?r$)-^&%<(8VrbgYsA#)1ih_c8C7#OCI]?\F[]X'^+f(+hVkkG0$;6mr6HA)\JtMi`5%\NC#':#gqR+ii2sHV1RlMSet!pW,,RM*__/Xa1k&%<[,`oBP4s$@M%KD,IeOAbXI/?@##Ccmr;Y(!"2do]Qo'a9VFkj,DdW*gI0Hn-1"rXCqdDV9&uNG*K?+Q&[U0Qjh%f47-_!#Kde\N%E.G-TA#^SW3pA3@#7D)T:o'>>S;7Z-K`iJ?d$6LU>SWLld=#Y[DhXD]F"*NV_'/O5YVc.G'h;-@<s(-"TeDXW;J(hD3SPRobq^N_%qhD%Q^0/eqLcR6CS<>)9+r6?WLkQs<aeU0LJ;EI"<e?+RQ$l8S'D%:kU\p[qSTN)o=F*BV1P?#U`FG']J/4G=oR+[l.VXuP:Qu>t%mS-e*(bd+D\nMD1RA3Hho&#\XfCB?P#[J:BbY/;qVG0#0"M5ui5'bT*=?AhpZPo$[LlPl)>OsQeB'cEO'#Pr^+?5Z;c>bBpD1"Om%BC'oVlUqNi7Oj3M*)j^D9_>D!*%O:tDlf5_`5Pn3&O7r4ac-HG.DqPLas%aY@M3g>/'%RNBS&[tbE:C)<0O'liT\f@M#]u<[L`L6%f?.ldAGSh*A-O?Y)8O=R7>*ec/"V\CMq=Oe.LYbReP#E^en^-SC+lh>9TD6!g8%6j@n0qsGU>*_$bF/@GD4Oc`VV>1ds/@eV0GL#%2<fo:eel:q1rhP?[=ViafI(uhJ2'f,M`jSbJ<1o3T)4n6PgZ%!cjPjMD%;.g3$C[mfJ.(k*oG"j)He$5cm';ObHMUQWdr,J$8?T7%f?EuC.)GB[?J(TsN#:d^$;2QE`@<'r4]*A-(Mm7BSnkX3Jlg1\p)=JCHBf$bCRt_2_spP7)8_MX=WB>Z=CCFDUU<?AR8FJh>`spu%5U<S(A/Ps26*_PtQAF10pAt#Dl,.3h.?,q%IYT3m/lHfh8;Q9JYqH/Q)9fC;igfjSU1`%tAB&E-V-m4AZDA2g7PbAWLf@<J'<ciZ%VP!&]7VcH=E2$;s#sK".jf;>Yb>YQ?%a`/)O^SN/jAJ<JFO(2jkFj3gR#Fj>5sjd_#Epn[Sr+F?8B41$Go.NbB8NM=@1PD.'YbQg%Cp]1LTeBSC\ER5>#t&RV9IsC94>erP@@4ZjA@o9d?%ZXW=6NKl^(M&IG\D1f;'cf[.Kh)50T+K0a?g;VUaJdfpi])"Q7FfcVoY#j%%?8$E?l\8:Maea!p(AQ9N!BqU<ku6O>[PL:R3p00o\\iU+;$m-GL1!:S1r,A>Y0N7\Pq^.KXlA]iJg.Hk$0&Zrb<.E8HKoBrf)CE%3o?!X%;c@qP9_b,Xd6Jk(f56<5rQa[0`cO56?a27@2bh#`qB4r*@oM")GaESI9nF-edfBXPbhPX&Y_gU0V,@S"K`$[7$`k<TS]g[%7)C?-%lKIa)3K4o2Dk)q,".9hfPHO8.@R_^PDmB<ED9gt)Mmm^L)R>L<0#!VZD[@^Ci\hV7>Mpac%(lA>r;2AF,[uq@81,d(uukH%4>.a07!t=(;DbJB7#Q*A`._HqTuIg]L`Fq^ZXk%>5-[q26])>)aR$oqRt5`>JP:n6>N)QX@r#fZSP(r"Il\&])VC?>TL-_)s4XCr%k.5`A'ZI@JS;Rs1F*,]]hL'K&@o?E]+/Ofh+8!k:nWfo%3s3.71;0'mdZK,s\;ALUB\Ai#B08l`TBM7sG0i>2ad]\X+_7H:mgB,u%W=*e<f\r;^`.U:CA&Zh6;;*PX\W$KA;.Z!(hU@cF+jRk7;]:$V,YNEkXj<7ID8JgQ5V0-M.8grNW.Eh,;[N[O8flE73'KU3l+@CP%/pPHt+bq$>J8ll[R880/aQ-iFr@.eR`V*QekCc2[3_P:#*5Ib[gd;O"J\e.(Gj%3Hm')kQT+`;,lrPT4<d_Jj^OgZ*I868j(oN_<%oMfr,h8KW^4@\hWHP5j/QQflkA]45oi?u;JjMJ`lPaq>gLg7Y4Mt^:e)rX57H@h"1:\0r37tu(-7-TiUkJQ8<\GcpU5T/d94UjC$%UE!0"jKf8.1V4ViA1<#*E_9K%EfPer12BBHY!IXFK7;K7(o!:AJ51:qA]:eRPG%:B+A#/FZoJnZ2,R-FN%kncRimNlM$"ST71f!C%<!=]7JR4)fHHO]\S>-1IYl^>B!(P%PU`VPRBJR6g7;qLbC2WS;p(4b\R;X.=eK]Zc"<.`=GCg%E(+L&J?uYBh][OejCbZ-W*%Fd9%)/#b+0K_347c%&ma!CBi9EuWXZ0E\qQc4\HBp^[$%#=1G0^B*#:;9*o7m7a-$@1/](_:/]9@>P+A.Mu:A\CfD2BSrZ)Mtj=h#-fC%?**B`8Fu3-N?4L?+o63n(4W?nJSQ:Tm:gDc8G=/1SF&\ID\Nt:HE(a?EBdo,..0WZku7m4H88T0Z5'JhEK+s>,#"mr(t"\dqY7(Q%4OT9n*Ze_14S+qnf90bn1-$4C,MV?s="^,)`>iTj12[-!7$I2#nO_L;?8;na)j\0qFH=T:r:hO0jqOR`grNn4^>1']Ja0R_P]EX/%oUJ_OST#AQ:?H-77;AVL&0++m5R!:)Y#EZ1HNENm#%o$aV-tQA5EHL&i#IZjL($_g<bHD;I)&$`I)RTIoI:=l8JrS?L@aqo'6$4t%E1?[^pJ9/8mITW8%:3CdL-ebFF?mX@"Gq!Jm!NC$7PcCPi<)*QUU5jpJAG)?Lq,i-FcUU,d#f:s_'WeQB?-c63$S_mL6X1+/q/^V%KQ+4FiQ9Y!kusZ>,Emf@l[(+l38HD]Ln``<E?.D%8'4kbS2QJ3CZ.il!2`G_F,#5)-)p;tn1nWr3](sNpkNS*&7VFC4Tu9-Z2qXo%KidJ3<s`\'TJe0=7`6H?PXVS;=G4$CA(dC%Tu,\)Pi<+4$i)THWnG4i2!FX"fkP1kL#jm6/D!PB]g4u`-;7sN&=^pK'+JKth2E`*%/4qLZ7h8P7ie8e&I0Z9h)"/dAEJ2.@_W:)`iU8$VGOXl&ea:I-1rt##3-[EY!B*HKhrS(!PR`@";^s32"C8C0?+d5u,ll:TE9Tk(%MJ%u,!$1VbJ3U'd__pdZA3W#UJ-q%kF$>_bN4_4af:i;q'#j>rV!'6R+Jr:AXS"'ro>-W;mJ89/BQkmAW"-BY]?P&+:!UL1$8bb%%^!&!@dS[e.OFhNWZXm)M3@D]m;#_M&blo,TNWSI"Q"A\PTHR+/ESZ]Y$mC##P]?o5-ROH9#oY+W+<3klZ`IO?[+Q5"3Cc\(OpLSV%]+L8L2<#oF.jg\`L)MJO!PoXX4PQ-cOiL&sb4Zuf1$o65-3XG`KF_X6(amA'EE"dXiUSQamO'2,f*R(WK*+E__ad&WI9TqLPB*-8%,`![\SYAfZHpQ8u2[fQIe=0PfJb0Kk6EVaROc*@nj1CD/\6d%QKPjDMP=:7[8T14h(G-Yd2l#P*U'm@rOtkX3"rr16i[qJO73>$n%i,KD:aRW;Q$4APC&%bqT5^NQ2EUOJV8&liB_'qssQOe/UTSltICo)]h=ZHJ6;C+/]FF8rW6&7>hC(NGfq'FW0`66&qb["fNCF^nL%3K:4:dNr_XbAgNB*erWDBC@n/$'>)JFS\c#<U)6?699U?4ZOu+916hhEo#]*LF)`nh,%U?TsV=F4FMbUls&3F2Wr/dkRe_of98h%%6LQ''\Vqsp,!tq1&9$mM@7\a\2$hT$:nHNoj5fQ/T5Vh!="+'nQCp8U@_Y)n!@j$6q**EnAIXp39l=jhj#^W_X[]!?PiE*L4=*X'%JIE)Dp`One'4tJ>*?npt;4duFHp]Ogklj7Wmds0Wkls1:n,2;aFO9"%4WLZF8K1--Gl>M=MZc(QnajJ^`0tnP0=:udYB^6hP3:Vb%JSf.0M*T6be]Da)b_'mC3^eX?I1i@6D)1^EX\q&Df^BTj&;j.]8i4?jWR5!%2^A/!I6(L8F]7i;\kGI=ae2j7?$KO]nftf3*=)ZS%1dk)4DFHlO7L&<+4-VbB_:RN=etSp[7QTb`k1mA77E%"W=V$JLQeTY\:V9/`&#8C=/l0p?'T\Q3L1.@p]!EF8^/j6YhF]/S&tl@G%PW1jN/D.j-#R/BUl@!pb)E0&F,A*V=/6S>,E+2L=Bc)uS1PJ7PbR1=WMG8P)?8#js$BidK9$n7$%IIRD$3f]k:,_\#"K7\[A]"dE%Ag?@CWKiiqh\tPOq-!cA#HS>%XM@mH$ApXVeNt-+ipM%2G,LJaWI(%:G<GNL=ijR3q+@iIK!Q:Kj^[#c\%%J9Lkj^to*u!>p1TgK%O^thhdFV,%?!lW\6A3r.jYNI&5Y;f(aP;")akMqcicDZ27q!*3jt!=(36*]g/ZV1!oRiN>nYH:J6<B*tJh"_+A4C7G*9fY5D)t(e%jqhKgP+KdsmMOp"adYbNppj'J1B:l2YQ9P*,slti6&cWMD4rO221PsYQCIY/!HAbZ81)oK^dsctF\P^A[#f+UNBg'q-.>;U'e[PH%i^6#;W(g9L%_;1I_=Qc8Ej23567B)!=sXDeS..<,V!TboP-f9%/d4V@?I8;ML0d(p&4XI/8>+69.CspB15P;>Zm7!e5g\Qb(o`)C%B*mM(./^Pm3Vle="t9+0>:^'UY$BhJVMBa4?-CWg$Md%TQZEARENC<j2(!k02H7@[DsG>G(@GhO_58+d08\mHIj@Rsb*7q2=?@K'%lCURj,=c-`,VOT#Ytd@feA%%4+-$CoBK8iY*-rm/IieDE7pnk?4[N0.6o)K>2O<tR;smCVYnP8oLQHGrTqDW7&FpPtVEL'>08"Ln%O_Y2SfN_A<3cV#:SIm%/qZFh$+Xq7q,K+4RWd[(_[J3KB/I.][&?k7YMT)TE+ikh1;84eL[&[45]r$FD)5rgr3X-_?S?-iA>m6P@%H[u``_WW"-cqX3bY[r>YgbXU-'`sRWiRo]pQcR^Fm.i+CW-Fp@]+AmY)$YFE#bjF$"IY:7DsEV/@5D"+I0CrZURB_2`[?'[2;ep0%c<AB)mn1J'qIJ$I@T"D&DYC<!-#BeDC^0A!aXBaVLdPZ<'Bph_6l\qC3S?)eL,L6q"dhp*UC<`qb8PCG)UVkVq/0#B+0mucV?fpp%`-Jjhd2=9aI>%B=]e<HLkF%S-$D\3c-Y,)Zl3V6or.W?-0<isJOCC'O^FES/<@<(c.4'0\,n$QN`R>tD:H]_i*0nc+3c@>36I47>%X0rH!/2k7VJOu*janQTWpup7fNhp\Cj:b!->3;RaI*5j;+e`!*)Ka`%1-8=p@$e25i)p.ff-c?=lm9ZR#-8&;g+uJWN?AD);[-=7%>H0=2EgBeIb9RJC7<781[a2!\i1m>M3j0f_r%8GM)g\A.NZ/B&/i;8XA=b-UG#(8BMT,`GS9I^+PU'WA$bCM/:)XjT\iF*XJj]?+%UY;<$]LcXSm0/I#_Y>PgfFH9OK8KOH]MiQUn=7uqbEfhP0S=%D"W4*+Y.T9<Vu$=sR`F\C]+b^eKboB<"DDb5@7gKF'Gc+EW^eB8%J+h`27s>tF&q#:UL[tR++n8p_6#8bnG)<rV7LX$s!R,..:iAQR1O%:CKhb@;F0`E/Y0'2(YU`Qb5DjQoS!tK4\@J51X9e.o?P,\4%Cp$ujJ4FG3*1qjmWiup$S7FJ#6n4-$$4r#,M*BtCot]/7:RJW$4bqh-bMMADkdM,qM@]mX"P92?R,8gR0Fg[ua%&*)TA`J]d+e`1%mbFAV%=A;DG64Hi*>l>=Qk3i--MRoj'RD56ADR3;Kq#=tE5Es%F!14,>b&%=rO^on3$rHS;B$BYrs'n?M>:>;IP&;FUXGN"$Y+>$%_/N^0=]H?20YdATclW$#ZK*,_:lp<]BMlb%*^6HU3_no(D8(X6$aKGlpd..$bAfsX$RM':O["FtL;*n`me4m!Vt(3l1BZoA(_@69%:?Cno1&JpoV7Akk#0K.1Or6n@>AND)*#eH8Pa:Y=%FFar!sm_G`!%lI\%-pZ=:,jO$&/qS9^Oc\g6pA$4Q<S+9bY0DK?H!s>;Yf&%_iaK'q1*ut5<_:5=ALs9d2Y83r(s!$!t0&E!?U_mh?OEeAAVg\FC5,@icRS[@?rkgB27R\jR?0NZ4n:,!dRmGe`R2RGnL/>17Hs[%2>"kMYE.5qFd9^CBPKidX&$e1LIKN_PrPWOi7?olcH#]U3VtR]n^-=9m*N"E<GUj(W;s%A:QYE4#D;c<BVeTap'H[@%cD^CWHbZu%kAlW.Isl@@Mc+LP=[NQ(rLG$&j"JGud_Is.FsZ`P%;c"G0iS=t'OS)>J]Io6";LrsXRETup*2Z:bY^Vg].`3[E=7kK""3`[>DJiY%k%2arG_:<XU&Fk^i)[6prO(GRiW92`_<<FH+ctOq'1hSe#d1HaE`U0,48`1brH(lW]%5o*2YM&!CrsZ58+#=/V.I=Lj#oP@>VG-V%e,=H)3ra$epBmc$i[*_'6H"3nJ7%6Qbu-pC>eP=dWG_oQYTPG417ZtsR:E@Lqp8^i")RV.E".J/#Y<LVf<U3AWX&LNKdl1)3n/XT%j4r619RpTDE(^-9PG0,m$ePQOFa6$qn%g0aS4#VB\Yf9:kI8P2p*HqCT>ihj!)a8Al(6eM?<l[:>XeK?aML#T8-bkIJ=,tCjr6?O%dTf?EqVnWbNqRqX0W,Z)l%#-`QU?!G$5CT^TkX66-G^q>=P&iDOLYUD$ZmFd]mKhH)+a2\Z,<3(/!`<^?dDC'FQ2SLq?d,Blf]l2%Lh8X@m$nC>>O??*`Ua!#nHQk,9$!M6pT("[_S]&jEES7Qebh47MUXRL':W-\WFekF12K*U,%_n96=nVb6tnLJ+'QTA<abbC8/Lg*%+=T5.'VG"B!:1s-3ND4KJ?f<6:q7*8O3h%rSB42l+,$7"%mO7VdlI!\Rm]CC%f=239<VjoNun:&)TpT0GhjS+%31:Xd)f`)YhD(@%2?T$D!Jq%UU&el]%^@S2f1,u.N;F>/"(1(pqnk3!q:n#Di/;!<oM`9/=Y8Y+J;&Z*7*teB)Ok[<@mi#Wl=%ONEM+e'-'(p3OTK3:%bRO];W9/Ku%Ts;eW#(;Mg"XN%cCp-ORmRAKlEtIf2q,rT:KU0O8-H'4X0MJ(5K8@DF_7fX'SgFjEpknc=PC/rcScBc3qN(+#gFDC%csL<@2W&[@F:D76hARlb>Lmj7.ZbuWL!?5$OO]I&</3hNr`VP,A?.Xn6$!mffLBDoI7Fhf=?^hYM]g2n!]p2B7j)W1'scVpS`8#p%k)fU7a16&`(#(eDNHOis+A[7##-f\N*ta/o$gGbJ).pRXhh"DIUW7H])&*7==WNYsJG3IYaD%tdaSf@GM-%e,HYqCt(%!,>7=\?=%EgdhqP#tlQ<)hg"<TfYs;K3&-j*0@=iOEE/p`h[FM8'eA2?2X7@GL\g*5:L_ZnP1-J+/]WJGo^CAl4['2?;DI6r*^A/?mM!PhP>7%,^>V2J.L#!^V*D8%ikHCI9htUp`JG>X*>pEQD,SCbQ0si"ScOn`(^6)U'ACMI07K*#Tu_e_D@7+Df^OZ)PK5%j>iBMGKo8Zd&<o$%(I7f/\V'U&KrFM)S_LMZ@Rg)(DYB%,Ma*M#@P!%35[(qID>FV)aX?+7*a/a#p@'*p,Z1us0>bSoguqN;fT,$#546-=:ofl4^'eTn%Y_G8]$*Y%knP6%cMiVk%*fs=[:s0o4QRIO="_FrSDCYc>5$Z,>:$&*/Z/mZrT_oZmCajPn*Y9^ujtT0s+fFNDO[U^QZu@j@$ZLDc%!jXp85HVuXa)A%QdpSY'lg.2*5_9enea)T`'CMHoD%N>>2m_O834<23E^h+dGa8l5+2KTMlV]jh?c,M1L=?'3b!+Q[f:,te5jL6k%_9b4/qDp2jJt^3s[)W1;K8TL,KY4hF@I2D)A0L02DWXu5BgK)C$]KLdS;YPK5(TuV!VFF*%a:>.s447\4e@j!?DS0?CW`@$irCE!%m&2$,?d2AM-c7S;a]%!2&L^,:*bJf/7#4s)?7GrPi.gYC&Y.3m4%!%L:q^m/o;X\0SFaB!.7#Lh7qqL4#Ui8*At9_g`0GA#VcbRX%H*X"=Ao[3b3*684k@qiSC;umYeIR("qt'+_,^m!SF/sTQ';^$UE="!\"u4it?9//+N1mp#@%Y1dgjO^ud_d10Oa^8s(<i08"0Q!"%^\ckeOgL`F;Z/;s@"9W.C>ESFlj]Y.\K:h>ZMVX^>.g-RBGVmf$OhsO%W^6SEF?qM^:5cT@m\T0$)`6&3VU$=!a8*74^s%[AR&V^%)HYS?mB"&'8Lb9+EX,1,#F$VF!XS5=b+c,clanPI<u"THi`4gW5)#jXA>Ljn(d$?T70=VtjFL6poc9hF-_SuMU8sFr!i1(]KYD]3%o,>MhQdjMpCCB-#5<fpnorhLUq+#DiF9Ltc9l/50)7Pg=::i[&>pl[7Zkf@gl"-Du.7)ujO=\<I&WCd@"8.<'&9Hd]Y<J!X@;a:V%7_GbH=`7#'aQH#PZ1Pf1'OX$+rP[\<DkMhrT"W_5bqiNCA5j,G[3])0Nh^Hn7E>^ZK&h<LZJhtOAQYS?f]`jp@o1FLk,gH2Zl(qg%:Sm#25J)[$,35:)Vr8n,V(Hfb%,/8folQRE%m9R>E]MC!a,=m'e4OUC:1Yqa.nnE9:dgdud=s#_8Nq]&D>Sct&l5RTUms`8>fhVt%&@.cUo-'M,S43jeI"%t=!UBT)W^J<HSau;7[)kf]l0Oop!4a<6-9]%lgrr7p=J_mj7qT:'dg2?2)_6bDOc_TXj%`)AlQ$,aP#1W1%41)/*G0I!AHocAnAHKlUo6'F_+[!E.?FnBA#J)XW*'?:ukEki,nrp#oPej,Q1_^c44ZUHn,FT5<nKd7@QjM3=QPM4*2[GFJ6H7,@%P)$uXf>Fl"S.`u12co(]TC9V*S*kmmcM_(@J`,MshLak5$GM6"0\lWh%B_\e(!h%HPP9MUWYa?+I5uSfOp6$I.fifCheL9]4*6%Z%oCW^2L;S#_Fk.Jq=kE<s4Op.OfKTUJ"O2]`D[*'%oN7q2Z(TI/%9/ZqC\,MoNlpe%)d\/f8P$'RmSQ>toQepd^'Im^bX"MVi,(rn%h]YJe5!K*>@5B518$M5N%?CK`'hl*`'o+t_V]C-s/@@qY:o"&(5%,Vc&[`t0Hi2SP^"@(K^AcH`o/P%/G2+2(BlABkO#3rgk\#ph%!f!)P`/2CVO5RVH\$=B0D(UU,O]!S,A;*KDRBA7O!/Qe4EXIkOKE<g!*s"c@P//5K#Hr1@?f;=InsMj@*;YVBG47ps,.Z[pr\jlL%!=N9oe5ee$G@);bGFC+e(]Q4)1G/nM.oM&j'P8J%5l4,#M1_u;L:GR@r=N;Ds0i\kX@NS7j?[s1^*#mr,:nm]%_`4W:92u45c(I"%L:M#ALh/)#56An`0:@H-W8PN;"rZt-"sQ/;XaW=?7-M.SL,.C)d-;1:L;P8e-hnn<`<)YjG6jBPgERKp>u>qQ?3m<0:_]gOea,Q<%S(q3Jq9*bgi;EZ*,[cQtodFYda:<#'dW$auNkdpS?Ng!]5e"!d/n0UQBHhP%boF>fN/Md5,=DQ.nL+22IHf<=0K4@HD6AMFP+?R?%XfsZ*Y?0;omeGkF7EQ>F))]I>:0nZ#a5&?j`chS$arhKm%\gLRH<Ib3Z*)GLN:\PAiVc=ZJ?q26Sk>WKH=q"flkQc+0:\D>8L9:e%5qiPcpO*9bHO!4qW52EZ+BqIflHFpq5$"SjlhG(cZ%2>3gGh(T3/X7cGl5@2gm8Idc@>3MG6="q!$F>O$4l,1S79SN>-\!VaQan(%Dj*C1$&Ydu850h_1V=MhZ:XcUW3a$#RO<c!.ho'ZKgS0mO@.o$1%m\9/K+GY=QFG7)V/SN([KUtFo@0dC>DN,X]GUHq*:p/fIQia%pK-\23%Wg,)2,OZBH1roL)RRtlXq8ukbSC&P^7oT!U1Dn?LoJ!q&t7mP$JB6SQ's9G6a5OOFS$(!L,@M'(II6M2E!7>:@Br3/WMT%L1+LE`@`hjXE)/k(r(Y3eARnoQSgC:$'%A6Qg3s!/a-DS$hEa/lip#*QAlQdOp<[>7V_i(R5;=\0L47/0Y;7G'7tEl/(HUc#PD-?%Z)uS$A1$%4Z*Z3jJ?E.?ds2/,:.NYP_qN"0m*'`W22Tt"W%kaj"E^j3-+:6JhWY?dr]u1VQLtJ:;ZoS;jUIHp(LfARE<X9>>*d0]%^1_sDX_>=ATto#YK_X'CNs/9Oj7NW!,+4KoG0<[VB,YF8#Feb)U_d"_6X5b9BRWag,d3G5hlEc]k+r.$g0'ifcYn\E!s/iNm_]_f%AKXMI,GQ/IbGSY@p2KQ&MEK(pQC1>%>cVPNkh7Nc?7UMhgCI(@%hUdb.3u3kdO0EUo(OM^i1qB*@!qP_btNrt^,BpKDuk(HW\Q3/%\RdZ9+Gks["0OD91g]m5=E>q$%;WH+bkQQG<(Q--7:CaH<fg.;97oFm8YVon5e34<N:U?iI%VEg4^it*2A*_tHG]6GNM62S[p;lH%EFD_4?o%iQ!AM\(&-\6V49]Dpd+r@<UecKbq@00!MGNADWY25RH"uPn%IJFraHV4&@6;\A$#.J]>/h(/a?Jk,@sEWA$.JKQ"C(S2%Q\I&b5tO[6=D\(]M0M&Q`ES,+P]5<@An-&e+aP",ja0qfSaJ&SPTXc:`N\M9C[HeV!h_CEm;)('f4BMr<rg,Z\:`SEjtrK1gR:hM%dNmDVS"OApk3'>/-h2LJ6u5q0;giN:Q$ESf'Hb-c()s3-0I(#4kLR*ZG4P=NL?nc\%]r1@q](oUl7?hkQ`R:I'0'j0*D@*^!MmSe%CT]qFVtoKC;lU<DMd+e!gdJp)Ci)JeU0D$lhhl/3JS\2AhM*bL]>@q1NH%!a/*hjtphRK:@BHZ>"XTa96V%V?(=ef062K2#JBc^6%LGaPWT28sN;.QP'*MVU\Ei5?P:\.imJ@i;!KJQh9hi33I=:=JV-KWDD#V]Z_RD0Vs5Kd%.p^/,Z9@BD=iV#bqh#?'!mOCgL\2ud6%+.C87`+Q4T=k3Se#eGKck9g*tf?EV!Af:Y)5<KQam8pmeT29%I[7(2>A)$k\V;gnOAE3`q+u"NSX7B8pKrmi5-(/.+(:Cpkpe_*U%CV=)LX^SMc7$4KCJ>C-5at*l?@r),N;+<XRIb+HP!@j@LKFEuVlU/nd.(7:]/G9:`b<IoI3<2tN`qgrnE&)mR!-9(If.j%0K9E^/%R(gnNB'F_j-3Q9/B4/J.J=51$B"^=;QA9@r6-O_Q(g!=nQ<"&\R4WKn!&U'Y\lM<dql0@K\&oWDY1%=!=rZC2<Sng=,QoM")aQFf%!/V]51GO@<9)AI"a5>/\Gq1k!n,E%pC^)Q^FGg(8#;@BW34q%s4&a4Rq=a_@o3iZL];3e7%YFB%Q+=;5F1fSl35?okFp*gcXWZ](%?<TdH5)3nUIY[2X#ra("K"'OEC[hm'ks7:kWamp#=#(@$ooMROrRp=_YVq_`P0Om_emh,ol;7;Z"hk6`RA!jj&I'22+7EU.f(oTY%'eU/e;:3?,TF1i@*T-X>6=rs51k)Qu9^";)H%I]$XjSt.2g7o/$BJ;NHD9PTbq?cf5eYm!_A[rsUGqq6dYsWQ-W/c+"05%j'79rp%^[.Xjn@\W)$TJ+ZGD-[>r5#.TRLJ62`u./HNK*qt+J;X_2g?pMEUHX]]'KR;mi!l%o_F15e'+E%hf\WQriWfrM[_W.VF8#bL]G]W%F^h]#Y;]:]2P72Xi90=Kh\Gg/8j2q+(%p]m0Dk3!5s3;3gXkhRi9u0Kk;Yt_+?Pl-:c(3hpOUHX36'i$eOYMl8=8=lha+Y:=BlF+%rrf-WU"`-;r8`:c4p*n5.W-Cp'&lCI6Fd0g)(<dj]ne++@bqEe>H_.KMb*ARJ>fTmMAs@".*kjPg&UQq!2Lf-//;q,b;'Z-gZQ2Q%IU)1Hd=("["3]t-:,"-ui9)9lS)l%XX01U/m%2B=4<eme@"<6U-DDY4(01U%r0hA:m`U*FiFHg/Y(<g_O`!6P;J/m007a9:Un?ZV%\R[u+,P?'%Jk6\!_[Nm]C#V^S1FW=rWM7Kt_3#I$H,DZm-NRp4g'F)d<,DZ1.Sc#>]6MK$S_/kQ8Oq.?o/Q*d4Bml&7<0.JA\<2s%>=^$,-YuU"r-ZQSHS>Jd.A8q<RFb'aSMf.0Zmej(1sGZDjhIc]BRgZ=.#97],S_QUb_AU>[g+13IiJgC+2m)!V<:pYoEh9>=hh*u%n5=C=5Y?)%FIR8!#'q<dMP90WSHIH/"89YJC(;7oH*?(sZ.R_0q?,Z`]ZAWnSNno4VQ%V]emeMQ\5$;cf[rSmG9%'>"7r>Lnr1Qe%#1+HCFF%,#Wuk_HnE:Va$`tk8_M@IT]*PMjB_Alhmq6eS`M)%2`[G>08Yd;M08H*e)^Zu&.C0iQV'B=hC\GcK1rD[Z&`P%E&*EFD%!JlBa#Nk`=nblHt@0[1_?8DR/H.*^I8Pq>cKH0gIN?k+@CT?LnLP@!pC'.XIkS[-<Dh$c4hNZJA_%Fb.5t(dV#Kkm*Jk5iD73)."%=DLXDlEZ)Cd$-iq[*PsmSZMB-]'!<'T0\9CV>M!;mA@;dnqT=mTKBT=#O%)(FK9&"]C,[[dp$Sqi`!8I$QPHj(;iO9f[f-ig-[uo%[(8$Q8[6GpT!Ve$372JXK=oA@%,F;(.>CKeYh8%H["f&OpP5pHm^RDm2pq"RgQH&^$^t@mi(9Vn@6T!L156Z?H^lMk&OW+N_q*!p%\qA,Qjrel$NB,7;!&M)kK9.jT#XO:GPIG^]$;[8YBM2?*P(/+KrGDnb/!LW,p</oQh$BRmD]rXA))D'ZbiiR989hDpPteVo1V42O%S*FPKk/5aPC+1s:0mQjAQY.qH'R'--.T`mOn1C[mp1[ue907oLd:VnU3;Aq\r,'EP"\p*)(-ACf%$q\aIDr9#9U)\:-%N/Y2'AC(%r"7=#Z'Ib'PPHHjZMjB.$7l/s^.H_P>rf'Br5kuX%F',41H*jn[@"(<rTbTo0*'7%GFU4'mB[D3SIn[kf+n!T%asIRWU7#OYHSXX%]WR-M&6iAcgh.E/W<!_VWmFNZcVW8*2iKgC&CME4+@-7m#_W#nqb0E*YH!A_6WR,)A=Moe6dKAci<bG&)aGL-)4Oag2IdD?HtR7>%>j!hsd+X*&peEMbn$YXpk$C5[EJ-8Ij3gVSGmtf=aZ[qn0A]5's6V;U1\[a^j?l&Gco26MO9E:-`e$?K'q"/q?04ZZ'BgVcd<QKm%C\"M1XJ/$$&.1.+Sa(CY\GYA5oL0Rn64)V^,VM])/OK'&am%O'80!?8W=1(p_b77F*7>\dMo+$"`PCA;^)POj3N:q$G<=/=oU@&M%]WYoHS7-ViII&)#76pH$JG$=%9/f(]fm1Mns6B3U%Jc2hM:)s=1>r\O#BskTlX!,]S:fcDT`u'$/TZ"h*Tt<[ZXIsYdj2cHkY*O&%jUK`;K.+H3-[_(Dm[h_r0U35V;.`M3Wc%4J^O6_&M-Y-4qBK%3=npJ?1k"Z*p,nSCrOl@5#&Yf0WegDo*dtoBc0ngpTI0/MH9jd*%1t"rJM==:LLe*M]#s]1d+B9`.6oG^%SfmdLWo(U<A>q/[I6c"->MY[n(N1&#EkBU(`l-FD`2BUc!kiraLkV2B"6,7,_gqk_&/h6Q%.1T7f//`lm$bapYN9r9/%FW2?1J<;po`h_cokGQ[KHXAL*;STRnq"f]8C#jkRKt"6?4[L^1SN0B[2n.D+,BU]<$?R6.[B=\FC&/A%&3WH6,go[f9>gn]Bp!:ppa,O_:Yo:O@3Aj=J4rl01uTrO2"1KB^[@:'%Pjdl,`T.E_\m,\N(2_VJ,kc-@Q727=Udn_ROlWd'iKu-%Md6E?:'9-ZTQCfE,!F)O;7MK<7>5o'N3u5,EsigpA&Ugl=fd"s]Li3.L:#SlSp2!Cc"_,u?97)P,'2Z1cU&p.ABP#A3`NIhBn.7+%l#&?(6igt4m/`[JD6d7]\I/hgYnePU7Ooq+%.'mfIu1dF])3ZniF##$P<>1p[dq5.8874s2\to%Fa7(TW=#V;dHI2V(/I'@)d)bS%J<#8^?T_i7%138NasB*SEDmk4-u2@gD!1Hn<!q"3Z)&_37GtF2ZisPOg]B#jkMJR'*CJ?<*'28rW/F%&1:]0GJYHKkU+X`\mpX]@%C-?$Yr:=,8I]q51Sjf/*NrDn?=U7ie!r!O0q\M:hnhL1h-]6>JqE-I[73dF_6`_)p5SU2dJ4C:M;7!2?aVRsI;N4WEL8:r(M+W1U%$?A\/4^$$NLjWH.0T1YJW[RPe%&'*7Fi+t_m%h#3\@u@2&eaX7X&'iM(TGQD5E20b,n]P8r9+?Ph%27(VaFSM!1ft)X5K=r>?QSt%8g`^iE%o'oOA9^.9ooK+6S%sVA6Co$gN7A[E]=XE_SQAqd^Tm0@TLHk'rtVh9&?_78lgZs7P>?I[TC'k@nMoF:M*K/TYl6ig;=W@%<5L_l3\86;),-Mf<n)td^67i,j7WU(T@KU18hHk0duHk>^bg'e:T'TM!;Z68LY;HVJ>IL53BqXQ9I(NKU_=\tZn,.>qjGZ38]*kn%"=3`VIft=$#%UGCEe/9\MP)OiJE4A2CCHlYh*7u0Ku*mm"CDbZP-73\434L25]Tm++r-b9cCga0M/piSHu39AOld[[oEhpUoa"DP%K3kc*T+irE@#I;XV3p!)Bj=K1nmtB4_pCK41Zt_u5S3+>.6YaH5I1DI`=aj)E_f'``%6eGD`MJaj3GY20*-aAW2)e(O9md1V7F2h%jcX>$B[^[%f1f9-eQRY$e0rhjrq2u3Nh-#r"3+)+clR72W_2L!r-;bLrC<BEX^?B4[R&d50I-#)9BgQ#=[;]nK0<?hl"ktM:h9u!%.R"/p@?WQ[*Kd)$c0TT+SH#Xp$2Hs_0</aGkmLKW[q@CRncii:cin:uF7e%]*!U\:o'nbF(h-t_nki_$/l&J0OidlMG`LbE@_EID%ek*t3?2Y=;OQWe/@n-hLPKhW^_)%RVI*7K=0Z<Qb'RpIGjsl]@?>'*+r=F7YOJ"R*G^s?r=a)#hG:EMiiG2-gI"Rk2RWaF!MmHcf%Z%D#?/b?3Z5"%63b`$./9YN`8RO45#aC$`$JDq!?QU(88BV4lr!D.Sg$jh)X)7/kEG,G2gRV0qfg+'>[<r5a`c8%%>&rl%#M=j2s%>^$+p#WMnNos4;Z4ng-W5:08H^3HQTf?Bj*E[6s0jScb8;^2\="]/slnN+YPFsr=g?M0M.X-U;MPDJFW#L#Ul>4Eg]3>@S?Ma<=B%P#tOb[?ih=Q?Wa7/7t`"eOP9E.CKIOjO>=QB3kOC1&1hanI*%FJ=94blW"8b%A`s6^DA&]'Pga%#H\mSHrZq!:/4CIh;kfAr_997%HL<$]`Von>5H[pqB(_3ch"fMaOR9XX&uRJ$Q_`@5.?a58#T^$=&4Pj+piWSL8:])<$ufb>W'lGI,%MFj:#emE'=/,[e?7%l-O-<^%.`ZGS^)irTSHR;`!'mpd__A3F;Ad]%TSh@SZ"pa*Ts^KqYe\qc>Rn]*A<T3/U!jC>O$QmHP\oh3.WfPmpK,^(=dN^K%ge4i..he9%TmJ;$j:PXDi!se^=t(\;F,T9eEtaLH?Ltan$oV=JODTU>YW__oSDS2JIK[PR05up\oIopWHhdc\3%qbW\njDD<audM"!,#hQcfKH%XjQbE5([492c)jDT8:e*Er]'6o%Zpa0C"iP!IMFRQ+fS#&b:KZ+G=i2J#HT9J@Gt!AF2.TC8.l'Sg\f]Y%slLs5CSOlj\\YNZRQg%6<DihNBW8\L7\R=(J?eq7s1f8oQ;CsDei^PeRRPpX%[nGJX>cK\ek9KDg!dGA"7PHmb4N22hNm&r%.MQ_[@ur*fogDcSr1taF9]>%o&7hEYS?I/H8k#V0o#It\$TF()BAn(eN-o67HNpIXQ0&`rtE&JpZnt4N\XnSp?bVM"5nJ#qF0-AOGNb^JfuC">5T#m+C#5\W&_g,%PpAVPJ>q+30Rath=_?e_C/VXuEZC5KE5%o+d^'(uWqF_XPWBK^R>3Pn3AskQl*.5P+h0,[UIdkL.GO"!&5TVV'A+;'H3"T+!YE\d%2jEDDIY4qZErkQrP0Gq#*Z"RW+>0%W@e6q`aq8N#5mT[@Fh13"YsUlI.g[8=KB/hB0/1T$a/fl7Wh=Digpt6uk"&$R,usV9Uae/A%Qa<h;=MR$CqVRQj!H9lu[ga+$E\H&$n!@#l&B><bNaf9N1e=[ic6,mA3l9El4(sgQ.K`Hb7pJ<+TlGJ%'SQ:%RD$89lDOHm+PB"7%:fccE$GKpgPI[prf0QZTWUm")PuW;,qdkH]/igDpV*Y'W;pp\(aH&4X3@nQY+?>@8PqRYr`=':mn[r?;U]3a]e5[+r9W6^H499P*%,t]no:1]@_m%VGq5_-,c(1&=&0X,+,D71tLm3]T3RZn"eh5P90+(Vo\mk+)b_1KO]EA6o9fNJJsrc)W'REXa'r=N;DDi^V>_K^El%KA3/a%F3Pi,IhXk\';orD\]@Yoi;G/0<f>D"LkiIf<2RiXff-:@!I6Fq]iVae`9AVKp/#>F"\n4aXL8e3[7lI/5js/++r.=p<]ZX%2&+>8?,iS>NHY+-cEiZsauMdE0)/<kR:NDFi?]H]C6P^s&4<Lm^8"TDYeW1uGt@'?@D/hh^$00BfZ3=I1gtL>Zbe!lhW0c9h5_*-%>O74U*Khap0e]X`NI[^Z@LApPR6BnP,&mfKj3T4lFD^O>*hN<*Z`HmQTp1HD'nj=NXC;c/#%CR3DiEV_mMAIn_c-XOlfeU&re_\j%6NLoVHCBnsVC%.dgLRT1RR_.m_aHoP0Qua:0!hKC;rTDP'>ssJ0E?-1jm7L=^lY<*eUIri('%bE!4n2*f5\jn\m;Xr!SHn.DC(JO%+H8HJCOKegp0fdB\bB^F>-RcFS?0C_AHaoPU6:C:#ZanET`nstZa,_4VD-ds7Y=iMO@]M/j%Hj^/`i<E%e,9QDDpRVSh/.:]r\S.%?eX:P9Z)"=NL;C*&J45V'q'rOHo:L;6/&!%*r/B_`jmTb_H79?RK-3SSQCec\$BJP,!R,=DE@X[&O(LM&\s/&jZ$c4bJN?V<h!g0%=N7@nJ@]jFnY+>?gRrnGB#JS<0G@D(3e@g;mNk)0O2*dA?nojX'o/#ETa;AcZY8'-CdIbkAPsB/h0Zhdp)<p`or^O!jIMpZeO3GG%<S%+m`#A6k?VHrcFo):bRT?fs?!3,r7kDgep#6>",&g=S\<@do3-dYqR>:Q]LeMqJ-LW38GKFpGRX7Nb1Nq!HfNGM]Q&cY7MH0`A%U/9L8@5*_k!qQ.@['*18(!KSL#V5qk`)9Q-@GsZ+=W-;+dVFUf.hs=`Ek+LMC9b1ipqGaN,L'FI3uB!)C4X96C^ICR*X>A[&:28K%Y'RER6,>(k(ln%s4D^r2?erP1/e4u-M>fAi8eAO8nqE.U1h*2:g+j)"/Ont7QqB*k0ZUhPnkM^cY:de'L_OGhKQlc/eJUA\r(]_5%`A$gK%fp)\e<XNF"KeoO>T#Kee;+u30rrO;m5@*MS$O9UEcNOnXVr%XoO<jB*@o@[2lO%[!<p1ed["rBTJ_'g6dmd.d@0m\+X7Hj%&;p?ONe@3GQ4HZ\G*7J3758CU2b_1%JLFuI8R@M5+9/tYjKpMel;^s2GA`2iiilj]HMf3^O,]]F_QZ3;-@"]fJ]_kNV'%]_-Yd%0%F]D"g!GOYZ<5k;7)YiA7TM)oJSP<>r;7rtYACiXaX.;O1D-5R]`<(-7RZaJ*asa!IR9rA#=R"iCDV#S$r];AJnHZ(<Us&(;Em&sM%<&MHGePW0a".75V",:[.'<55s?7b&[17.22K+:57V]]HX8_mD>2=kd&^*hL"eK/4V$J\fb=i2M.B(V42B6'`kCcroc,)m7GGm)UG%4JZoq#?-Gb6R!(=MW.^R18tfN"S8c0Z,6\OQQFqt^"CShnH,%!^Q#=t7`a3?/P,tOj?m0OCJDsN(7u]e<s4cp#0@1Lr6-L$$:)%H%`p1@*R\bT4c\IgLml->\4Phc&%X"rjc2$8?;F3N?LsU58a:Nm'*"]Um$;5t\($uS'l,Fni?\f9;?m=+l_Eis,WZ!Aer8J`m$*F5&%RBl<0[55HY4Mq8PcrtGDU_t[)DifleWaq#HJ;4^BG>l5l"g-Dr;=7#J`?^7FecgDUB$/HNW?toTq$O".[f3Ur0\?9ZK#9j4!sZ/S%BWL&Cc82FnZq@6JTKaiUlEccTA0j)cCg&7874nHUK<0]Y5fc.IYOdFdHi6Tc_D4gC1s>K21&)(NXP'9S6Z0"gBHG\BfD=QaWpm#^%;nQi`B="Fkn8VX*bVm?qD70M87.*hVm+4-U%1@g3BgZ!iTX]a(*#brhm7R7p5u_G+/+8FQ>2Kl'KbrlUXk\=;7taL]OXJ^UI0B2A%!g3FM!GL&"K9q/<2WN^Hn*&,4SJY8LJ1)ZLA5Lp$(t$S?SZ-b)MH?)'[&\-M-c.jD\#lbq1L>YT>u=XoGU[BYO0r^@ne>n5:qH/D%i2Ea.@%`%qG?H=R/d@Z#g!)MXOs=8a5b'R.!cj="6CS=Xa/`/[)FtoqT(q/-^o3*%%ruLsl+nrf*?*j\V:G9m_3:ek%T_9c(@F>t%;DfLM-m`&"`G&=9@GtO[hlKBDKY_;E,u:?'Wd"2fKmT^drIi"t?qNEHj0h+h+TJ!P5\P1Un=qt9-4-uL4cT:,T+oe;!JRFK;$)QG%gTXc[&2Sef.DQcAN#.`t5&UGeKR"I\4'<mW`2/DT5r%bkid3r\J3b^!#QA7-%,H[,#tSVC8pCqUG*1XV6?4r;D?CKm2S9;L.[e5U%`6OpW!\XS7)FP)*,u>tAH%.t+SaAki<j/=4(5Sui@ZE7.TNY/0aH:QKHp:<M8/@/6IRdQ+0&O#r]&nF7mubI%4EM8_"`_$FJ-^>5%/4nUjQ5Ec)h3@&)/h0L*GAatcHPMrk8/G8;Q25:UIEpP.8TN36-#Ica'W61QQ_Dj/B&K)sc_^38*2R8:qVDbYhI(,*lH-_pT2p?p%MPYG1[F+O(0^"DC%($42k,!]>ACnN(a"b(tj+S_!.N&N^9.>.YMVGm4AaOh%-rl:-*2G?D)So=S.\!*A"0X_@D-53Ha^YCJ/H6g<%<;<1jkmm&IX]t;3=[`";RZ;ns28S_,1.`:aA?38*NMg/$rM*?3@lAD:[*7lj"lhK7qOHmkmAr-ph1#j@p!tu(-Apn,pqHS&&\bL1%HS,Jd,b^8.bfU(IUee*?2g:VsS>\@O?@^n5%Q@Wf%s%Ysm!g,kFoM5%rpL@#"&KEh50Vi@b&%\4pe`d9NaJ_@hT'K,*_\/uf1(!s%Y'*Ues70M]l=JiHq]O63oW'WAB(c@7)gGTaLYb/KrWpg(s,F5rE0iV.nbgfA^*:XMPK!fo[m,IW&=m\DQ5e:KVY:j%3p28uB.1EC%0[hS)CENA`q[)j0k:7u]%8'i7[-a,*(gdS@R1/&gipDfb\ii4a"scCApa!o>K.qSN4HT0k-Z%VN]3`[^P+9@A6^<]#O+\/b_bq.q%"V;8tb#$X"q[!Wh@isVC:3:)VR)d/pHsF5=?ON`M0A$0eh@mBp5;8p0bi!N1:?!AB9$d,@08pOGK+oWM`#0J>#6!uA6]:0i5P^uf%,bHnnMO5Jhm*bf0+um?:Gl&^&5.&04S]Y0_=c"s`"bae#$K.A'iV#bqcH="gT-J411gWGDnA7[5_"IMXgE49,9c#)5l&<2;lI<,C%'^MO6UJ*k!IDFh87kfDCGhMuWh7g;iV"MDPCjfCNhBsk'CR0@jfail8!Ft2^hj@>]VIPpgqd"),&!O'$L4/=])s7u#P^=?ApAs6E%>gRQ+MXhUGrW>N>=AkFoAo[YNA15.r2p+:d5cisqdGqrcT94A,,M`4u6?`ZsEc7++I+<Dr(T=!Q2@\pn_Y@4MZHj0>AK++.B^2Mp%!?IZHIV#hc*'sJ"lP0hPVZW-dADMN560-RB5hH=KjVXNU#OP$C%k/e%N$4"rQ!hLSFsLqPWf5(68Ch7-aCk:L*II2+-)24L>"\8d%#$J$&-Hq3AGE]s9C1a_ugqC;%IQ6okZ$O$bni'`("bb5!N:.4=f;7AKNoL3WqAM(O@K(;R(\@A1I3#5^-cE((@ui39`;;U#'9^a3%I7SN`HGX,u"(k>"auNXrnECh&lB=26V2;o)$HVS6@uQcaF^_5c-@I*g&Pe;O4quni<2>Ii2.u,u*eR#XKB>1_50IB7H17(AbQ:1I%%.o2NU@]u_-M07R`<qR,$^>-:rZ67JAs;t!T[I[?:7&$`86:nS6^d9;_ZQVG?T3Qi%"N#;4c/Ltq661\=V8t[7Kh8LYJaEnH\`4c%#E;\o;:e$sZ-Al1mK$_?=^LaWf'c%No6Ijf%oGY7+u?`H&f\BW?23-YeF!DQ&Gg^X(dVm'5,B*O_R#Rn5Cek5a$gCh,Ts+njNAGQ%q?;[g4lk",SD/@AT@P5!Xe,e83Rbq33Kk]nE"@^&']g-B&/(I-Q=GJ/m%T-&(b9c>:-oj,81o[HbmQWY+LdbUo/g#lX!V0`Y+ZqC%g,=&fho?i^^"?dZjGWb($>$il)EQ@G;'aSIc@B:V%tC+oW0]4<FP7iH"B[bPF`,+WqupW@?_"7Sqk5%B]aLI&$d$"LF+K-opi#6l%mlu(d70Y6(G(6-S;;E4,j<b&Kar>_Vlkk1=,0`o_TN_>bS$$.H%ta&d;P=#R9lTou8P6+1E?87;^/N<6ND=226G?6q]'d6pHncH_%*ch@Blf+g^b'cPDLUbRHi.RrE#2W\C.'H4jL_:lg)(4`9nTU3I;uu(`,n>C$p_Ht;!:+m3qLpU"@,P?OEjnPV4o=c#B:/EN);tQ;%hVEJ<Am$7c88CD]ae]+K"2]Y'In1X=g_$R#IXM@#.;BK!Jo;51q:#!1BC(hT(ElHMp:H':LP:I1&fr,Klf;kq^<$0W@.lj'qb"4\%f!mu?5]Q$G0[-G5/[U9j7_(DUb_UMi(?YR&/_MYWa3B`L]p^0u=LU&lrO-T!FfXV\K]`TaH8uq5Dt6'r*#U`B`O$!tF*ZTa0J^Ph%CX)R-(YYD*%*7eg`+K$^9E'h?EH>YkYNEnk@8NI:]+"lXbA+JO(UBVS1%fQEjDXU!%(84>"hHK>SouT?pcDmJSB:gD.g%U<8C=AJ%S*aNI,REYUk=:(mL(\do*XBo36L7J6WMTu2X[g;U$Pipu%[qkbjF<;3T<S5PBtnNsI/3h6^L`M?@^/DAkqaOX:PB6]gfhU%&Y"Q7%%HAT6Lnm+\]*D4Z1boRZRDi3J3-`)l=U)Ip8bXo'HZ)%kliYt1)!F`%9J[XmL[iG4<kKFN]mc.l7#2(SAJa.>K0hbNpjm_q!+Tjh%gNh_dc0_`[UK^&<@AsIkkT0Hi2qR8PBuo0r11CHabH#]TFPR$t$7D-/0V*c^NjE!pK]WmI$5`gnVg<X(kQScU&O>b/qmds4)X'(f%fOu5'0=Qp_2jJ1n1-$/d,_1OW%`T\(D%lmN<k'`:rUdR]biWPMfccUr,"b[c?n;9.nGkeZ$B>0DEMt@i`SCQVo>J#@/RR.<AJSZ1%AO4V:4YS6Ga<Hkm9AiuM&e13V)Yd(S!0GtHSKhj#'2_W://AZFZmKdrL57>jQ4mH9KF#t[!MBU<>0[C-:nD:0'(136G:c6b!XpMU%Z.GPqr0j`X`*<U5%Cas0Z[&J"h+7/ZpmDL\4j;Qc.seLGZF)D!H]m5RfK.MoS3BnsqZ0n+h$rE?1fGX?A(WcY!`<"N3p?]%mXSYu%):qJ?12hu>F;G_h"_'CAP:%pR2.H94DIoMB08B&j@UG69mZGe?'tNY(V1?e(3YqR7cQn\qIDA0V,GlhBOZUTibZPh[3p1Cn8oFOQ%O9=@g$(6l.^=?sa%6qrO7LL_U-kmE.,tnJ4GH;bT7/[2'9uhl1:H=Q\GWU?gX1"hK'B;a<Q0c_>FY'_p`>/te5UM]3O'T.Ejp&(,%0uj"*S]-9Wr'UmF<LN[-*5,N[G)/K<XeT!&'17^!JBDTb*/Q'tQL@2jK&cu,)(N.oNH?&lc@HEdQ'.jF7+sP?!2fs;q"a5XCk?q4%oq-T>e>UXMcVkq^A^75pNruQuOW$k!FqPoi1iugH-b",q/*+UEPSP#MZ\A3A"Lg<K10^cU;4t\!))>"031cGMQFH:Yh.Nbr=j,R<%Q7k'>2at;g%iEq3PmNp!G+A`]m$:&sXl:Z=eWP.;rZ,+CP\8*`<VVi]V1A&\T-"FKrBeNFHiGGtorc_m@-)uW=0)Bt2ki/@BmMc0%`S3$96.]-0DqZDJSb72iB\e>NQb]2mq&,+H%%*J*P._5DE2,75dnSG=Q-A"0cidrNV[Znl"G#0r4b<A/$U9*YoTLF#Jk+YmZVLB[%r:n`uO&sHMO"F)EJ,FF/ki.6.ip#G'>GJc<(lWU-naTe<Si*O%qLPd;<t-YTLP@-`UUi.T24ie4T$7Tt4^k%^&`Wsi4I_c/ZOcZK%(4&"PG4@%&ranLun=HeHA=BoQ<abY.4/_GtO&Mu=OmeL+<@-nR,t2V\d8QI^TU$qLTTY:Y$:8!`&I_5Bl(L"sjEQ@Qd2q+Qjg(VB%=SF;GNa`B^L+-.nR0jZ8/r)7%CUZ*Va]C_:,M<:6\&N&7frMO*pU9e@l1O$GHfYD3TPtB&K#-ESllK'eIUZYu<WEL4k,W9eN#;-G%Ll?es+nM.o[\dG:.ka#;>pd0',h]?ZG^gsO-QH8Vh5*U)[uOk?]0eF@aHm@+jDa(bm%&L5c8"8QJB>f:SYm;;1+B9EXe0M3$rkk"%Tkb8Hr?AJO%Z9<+N61FVG]^i0.94MXBaCntmdm:;iS$G\hs2C*S=&nah)rY(*6TG.FmFB0m9/8iIjom0qd'ZAnWOu?&[U2qL&nP$%oTB`.+YIO&os%q7i6IWRq`r`OI%150TiVH3#RqE(rO.'8OX"qU*"d]"`+CZ86h=$$N5=qn@WGDUFLKD=#/.9P3I%+Z@/9BON'RI=%;)0X3EVk8gV74d3Kn5qdaU?b*Eh(abeMn0uTGG"_i5fQpW+.Jida<7IL`!n`qM)3bC<Lk<f%4!Am#>'3p<l1Fb/4^C6k8^KMi#8a%'UaaBctbr*+8X4Q4.ia"lgM]4M1pBD\U7=`D)A.C9Rde]o.lX;0rf/N@lf:tNnfCq`ZcaaJg5oNP(97_aLuYrefgOo[`.Na,G1[5%NkL7*c+iZdVMDoiT8</+D$fgJ^37`WaBN"irB=ODFG*UD>+\>F63'q/GqkH;Yue`l;RGk?_UcF#/Ti^&lHFGfKrg.]_qj`s;odf:%aAPm*(_ENu%EjUaOKO+c,8W>M7BmV(>C+/@-!\/mkM6b649L`JIm=P?hRn<>Yb*-I:J-;e0a-&[bKtD@LqGe*qM)3bT-"G&&KS<I%H]\>i[qsRrGK#"WN(%@>[TNM3Qp"io"&TmIbb!B"\Lh,da`;53M\A%WT!2i0ail:R1EVs*+Vj*LJj'!]P7$[ib$i`oRT:Fun;C'2%,LA+@D=bHR&<W:r:McaD5a@c-A"I5ZafEJj"@>9QOA*'R6)/u)OZ%+]2+oi:c,?W;L,Y':a?ZOJMUoSU#GUPi7j>diYt4A8P\1XY%MMGA;3DUJPGH,9s5qCOikYau4<,r#]D09DV?QZ>hgN@hEd+X*<WH";e7=MUY58E;.<FY#%3GQ'?$6+Z:3hXqO`I[Pe^S&NO#[LCg%j3LZ:"qiF_ni%h"D=n`<gS\+?nM^P`<E%n"f/_]\<Bhj2DSbS;bUBtUkcF)sBr8.h(ZT5Y^ui%aoO8LPSJ<XM@Ls'p?5V's$oPRj%YGe65]0*E=oa]@17@*kjYTp%2rAs4g]g8tWVS*g[-5*DsRp?Y>acr;[*R"fb*EKIs&Cn<HMXr*YXD24=UV1R@$NQm/"@QZ"+T,+1%Msc-UD1,o'r/'-U9nrqnOG2gil65\o7kB#h&[Y-Ap_@jHek-n$F"PJl3a]9^CC?T'5hH6tJekQ"><H;pj2R%7J3i3$@@jkic,t<I%(Rrbf[l,PSD:c1Z728m>'=*CBIOo<ZS947RRC`@tL$h]L[L\kRR(hF8I%!fJlto4Ck,Z4%VeAA0D*k;4'8p-`FR;cJ)!_3g1]IG(%bQp!J;3VR;8E]cU/;FO[d@BF2QFH1E8@5e5+?oJi@tCp,?99>=@l?QRO<=2>['6d`0aMs.o+Y3bb0/9rOOK4PClpkpG[k!SD9p2g%YgVF.16>%cl#WYA;=5p=<fWKql=DIfSh(pY1Z:iObpJC'`F]h1:IkiJP94Up]$&%oMQd.](BR4Yof-gaH#)n6@+\3:k(OLe'(!1G%\ME@`TO<RE9SOD[XXOKBXEtpD(h-LNNPQ*/:sj;)Te$ia5_E:&eZ"Z:RjhT\KnP<<NL+'_0oir'20)1LSRpFcC::j<i]BcJR`7l^%-OQ/[?=eg2$7pg@!TEKe['m%]+>e)TC]pUKW7u_coNBLc*>."i\F7f7mG8PbB"a#rY(gU1(j*`M4:(W'+N\C$)XYt'<L`e8drnk2%)U]L0-*os;R*`?Z!N4@CAk&_g*/"lGDT^N:QaKZMP>B7U09f9NQeeWU/$jP.k4.-*nJ6#<bRO5sFD6Pc1Oghf:o=Ei'u@,T"jm";%3Bbr22.t<i1iJ@Ui1QsHB'$VWBC:)_6InUbkP*\b.?o1=B.Ubb!<!N.I(.AO[hlO9q2'jl[[MASD*b5CCKX2o*f@ak[Z^r0>"S0*%9AfeR-+Ys2+Kj/+g83+C.(*S=SNa5mZ]_Dt(*U03-Fe@\UHK,!>K^2*2NT!%'c5j>H[nmHf?O]AaABCli]a'@JFJsM3cpo*JUMC^%$q7.8>FL$mhk/BN?ELfW/78lNpaKJVXoP7#CIr#.(:Oi$8`Kn,XKQ4-7uQd[<lf?J7K01=>j<-!6Lt8`@nLQLh>N"\Rt%ns_>1$?%rJR[6(J/Nn]`arg1k\UM2PLHeZV44O%_i@S,2_TFAG6(d>NUN\o-$%A#f,/q/uAE=*Yg!EI00RLm%cX<ne-K&'Q=@l*FHHR]$8$X%R=&TqEFP$uFnl`g&.Z.u+hJf6iC&P<`*nVg5RtJf*I-t1WGu's'tZZ_`.5M9-hLid>.@7kd->X$j9RR$n?n6Ujo@tlA:8\YC_o<4%JCLp]Y7n$%6>P9B)I%soC@,q8D9]8bOORlmDk=9'ETU_hK45jE`*s<.\1A/3SoPQ:WiLfqQ;jfR91&`lHp?F"\l(Yr^p/?WEOB("%+61pU.__>@i;(K!F&*9T*!)I9N)M7.a?nakIbQ%#qD78!_IZ`4,sO]F&3H.DpLEL78/mTDWLN]TqSBXi@n+-+rMkj)*D495Q/%3R%_cahaL*hOO$L?)("M+"cgkYn&'W1@??JGh4@0bnL[afG)MkGS%GZU)TZ@/W]b$?"Eq7H&HrW`XEZc]=uY^;45E9IFLER!K2a\tFT%`./hqeYc,=Im]Uaq>%;"1M9deh8/t_nupS-+QO'9?9%KnHL'4AfY.3ZGipVq4^/GQah(?m48[_SHR!HU^%M8Ibq5a%"q=3RV_d"&%Woi(>?NIg<k0`NIFS?FaDZ9#6=hAe1=a5$:."j9.6g0OZa=;Xs@mCa7^K<dG#<9'/OV/FZ`spNhcfXDo0fotra4]/84'!kJ'(5*Y%+HF]:aFD;<H@K9`VO-l9f6b8nf_d0A]MUO(f2%7YnLbp8qC*ct^K\#(RG[srrVi^BN\%R"-(gmpOi6<NW@g15_=bBu&d:T(4fJ]7%CYC#0SP3Lu`"#'_C&k3M/bmGCW%nB=f"g6cR:lSVjpRi^9uNaO5e!;W34KTA=Z<\RL%gT73.tC=BgQQ1.Qdi0;YC`$M<d5kH5WF+%m*:oT2j\f/8tNj\h[@q@RNiKoX]@cXC9ZMB_O5R]2.8"%/0E'/6Y_8$L/g:ea-.'%#_]5S6&UKuVMh%fEfU!5&.6`^\:P:Q3QO0\%/Tj<YUpX[#+Teih#-K_2I)H*CTQ9m-F7l/4P@TiF$2(PH+DB>8#AG*%J"0>!]8V(l_0RZM21c(Q28c917$\JfK*>`d)b,j+LYs4I%<bc`.07q=g?8j6uJmXSk+Eg3@)$k].R:c.;=XDB:hRU&[%J8QAR&B^>[1Uo_MFdLp'!9u;DVmk__-X5pPd,iIq7D/V.0\(La:t:6%0(Xa*+D6:q:^"f#]_9/',FFRlQBX8@J[^?.=RJ`i7R32H#U*?+^-Z(L]?\:*Z*ac*WA-4LqZf$YB#>9!42$2k9J9`C@Whs@URA5(%4+2`^[5M>=.ke7F+n,%+A,cb5Ln3Wd@-mLil7q>k8sck?,Dk<eFW/EuQ9l1dHQRhKnkMu"lQ9kfBaR(TkpU!imi[4;a2P$'W_*Yj%S1&:5ZZSTA+)=nqf3Lj?$EZ=!:Yid_.f2P=@hi9s"OWr+]K=-M`/Lq"kkSX?"NZJq35eqNG"M:i[ae3-n3"\@KS>F@),q:I-^M!`%W5c]/nOs(=og9!^#_"?c'DhQ-92i@G(U27iK_Wp?\Bo@H(,fB?D=)_ddU@%kGE=);[:CYb"(INhEAA1'iiQ6HIU/;Rf$S4a6@>e(%&HX[u]-Z<YN9DW'3uft<@>9qG5@u;mp327S[d1"7d:t7"hVT&T$D"dkdGt>_H5o4taCX)0Te!jRDI)t<G?m-dkgeAkH'cF7hkfOQ%FAn>=j$\X'mW"I3K^'Zd@@V%7Xr'bC%\("S0L)U`h9D_BQieP;;^,?q(kA1R_#S&j_7mVR#'C82/-Ik7^X&39HFp9&DhV1X#a)BR%XCA''Wg2/m??SjtAd;to*9'O*:^0Ja!+.W7!O)(TbAS(E?\&!<YOL3p"crZNM<PFW'ia>i]h#8H1`*4c0SbFocfJOC>t2)PRbqE]%jmhPDBdaUk*8R#b_>/,/(C/;'IHKB@gHm_dXB<N:A4d.H&3A9Sq&EGXf(X`WXm+3)]M9`AE*\SMdb<)8;J2+qib*LmN_$&r]8hRc%Gf.%&Alag,=4gV09QKi\%2ba[34J3g5P!B/KPU`si/&Un(*,L_o_F/om5JF]?NQ@UoGXQTb[csKq]`aoUqD[6A.U2"+'MmqgjL!K%okjs_T"m>.)lS=UiJ]XA1Ro&4H%n,`lP-3%X[U<dH,Va0s%%Co_=S%m"!'WK)mHDC$##>Aa]Q8Kpdi:jU9$bm%KrfC2)^RScAolh%6%ahYm5ND/Ej4,5j7sK6eq!_ZKO,_63Sp3@(6HlBos%rT>R*#`>nZIW1.a_@Y;JRP9N3b&q08IPeZ[OJ1`m'UBB:A$S_JC[3IF\]%S/_Z:PtV#Zi4'ho/%iRp!+2?#<L".c88\MT#,%OoDscdoQJ'm1N_t$M;jagq_9<#BbP&:G$!(Caeoa(H-a.<,\X;!:plq8-462sE%XQ1=TM.3>uN+<5)'8VU[ME*.pR-p6idTaRB/MPE7#hi5\,^8=>YAe4!8K[(Pj#/Ae*j=nmes6DZ<]d\]D#3Lj61]33T%m]%CEMnA%.+M7-.2oJr^*!-RW_i?M)YaWAgY]tPNl*>>SoA0U$:dpJVW\TrP!Q-6%"-gRbhSk[:)<seE#eU2gmj815j!9F7mN5r5*+5/LVA$!%eWds,Y</:^ZW`7uTDJ?q5k!Ur%@llqO,.`O2CbYePZTOqQYir>9<)]?2@tu8e]im9O:>4jn+FA;UCTeT9T8HHa;!6)O0GcHoYk%Z%0>"AS=n/aS((`Z.11J,O88[",#AZN;l._$,Q]_^'g>p]DLq`!uajB+3'do6s&ji@kKMcp6MSo=np_6Mf>mAs-I.=d_MBkQd%jBET%)N(XIqne<<<cj:FIB;pEJgrML2+4TH!>J-@FI=;H@2b)!/"@fH$e-Z:'"")UR=lj7ITdZ$`A1EqqeW98O3j=$."LNBB7>a'.f!'O%%U70m-t8EWZ!j]WHk)Fl@;K%KV@^^srP-4g*+<uC[<.d'"[N`qd0qOO^q,@J70p!jEY,;`nfs=L=3LhT.CmGJnTmeF>l4j\`dLG\%M9r?J8=O:(mo#0:+#CdpP0a9RBo%j.Z<-jK"I"r`hEcS`".=m+WLtpsGcVc/_c.'$Th'U"i+iFY(Y%,(5'^"C&iEHNi18Af$,rR`%"CoqocMDaH8H:7X`#kQHA2>,\+Yfh[LN?:.%kDWWD_ArR-1_]fA051Z;=Hu]n>Ko?fkBJZjO*6aS]UJM+`&bQ"mR^H<KPheX'4dQ%.J%(..2#k]krMV<'u7J[d4iVcE1uMV#9d,V6]H+5"ACBQ5\C-!">V7q"=K/n2cFPQ\EnWh.MjL"0io.u0E>"MENDH(mVq!s+eb2t%hIs=@n\*n&VriaiSU?P%A9Aaf.VrR(<`D7Z<_K`9?8R=C8S!N*W<3D:T7ElBU\]Kj/OIfR`3_fdli!gllXB>n7iXJ5hbWLA%98PX%OmOdg7CHhq(j*_GQ1e$s:!uocL4oPW&P*/!o$!<Jc'HsW-Z!1d6,N2qfe+Ms&WjpdGZD>\VZ:6R;eP>R.&Gj$M)+Y>:\dW-nUe'S%n9h<R";^Q-'TL39/9ug"8GdqM>V41A`qJjC91or+39g*cD;\ZOG0kE^dmBLED#kob;HSPae,)W<?P0(X;LZNpMSCLhNq#96+e'S`%qZ.KIKmkEEg-CQs^4Qj0;--duZ]((f1hn'-Uj2=KnM5f3'GO6>-]Q#.97=uPH58O1K4HX.+kLf9WsUF.2c-Il\<9iY&W`nl4fmj_%%W]=oe]aZip-U]62IYNml;550J,(15O35@p7)e&+e^X.q9eFF-\S;&;F5q9q?e;Q/!^i"Nk`:9tXC.1bAc4fna7EB&(X6<5[BuUW%i@lL2*.d<C[t7K'+Qt8S"MTN_DK0ZR2Ck)NRcjJDeuX#XlQaXAFkus"<bi<,;r9g>l_7UHR^LX5I0RS;#LLKq4Nok'poTU&%J'AX%k>cS3==l+<NUd.WAaJ1)9#V35*nW.],/jh<Xo_.^H%65I(3p&K5'1?a0Rd\&d;WQWAKF_*L4()'_Cn3Zf(\LM'RuG[!)W&/4MVT/%9I18P&uV@C`Nbfg)aoZD5]RDtUg;8p)@VM/WsL7nL-\C&qj\#LE<KZ&!MXP,+:6@;UV?Sqp);ahVVu)@@p=C$P]!Ram5d$@@V`DP%"$5Q74&o21CAo[tj2PmG`f!FN*h_19XCr)>3hUZl-NJl01e5Xlj*Q?7pdL$<l,]r5)knKelS%OoQI5F#!]YZu^T>K_\j:UjRp#;;%.%Y]6;7S3Rm6sioEVM'T!/89Hk:h^a3!D]36Z\n%kpT%2;`fu3E0<%,:d\!)$AKgo39Mj#lsIPfOEqc?S3\`QJ(n3rWnX_hp3.b2%]sbLJm;dN0;O#Eg\hf4;M_B0j;J9,2-KA`%G6n>*rW-iUqfOCJ[JEtekpH*7hEg7dGH^)3'[#"Q!K'DAo(ELB!G_UG$0d=^NqFk.%Srhpe+dPSD<7P>+>HV2@eT8U^c4E7>!?Ml]Re3q!E,@-faK5Fi,M$T?A$le>@8,:H.UHaXYLqQ\Ch!bo;VCX1#a<r>O'q2D#3moK%1,6;H3n$dYD<piB/X_q?&"p&E,34/Y@-HIk20fDXAf*hg_H']pmrRIK4*SS]5b;'%;tOg>6$#!?cfMT6irj;DpELMEGlooX-pb)@%i5$WL7X97heofHVYZcsH%s.5Bi#HT:.*Y0KT#!,)!VEXJA#/3oZiOV2XuOYP"CSBU]ZL;`YpkIZ0J<u+S$"k)A5cL[4R>E8ZgWa@%9IiA\,n4Lh9[3C^[p1^M&@FN&1^X4g8)A\&5WUZUhr;dJ^(/b+U[t[c%l'_>+^=e>/Btnp5.LtU7'jS[Lc_]p%%R8.(Mf8m9'u#b%@$Ai@68*Lb@XdP1N6oKZ6S`E!DqA.joCZR+f!fe.*8oX8kDSlgo:i^Y6*5:9JTA.Z88.(oL<rG;?MhM?4SQ7<%c0"S.tQZ&U)=sO%oAuG[D%f1WNgLRjU#@Y:JU[f0N(qh4N?V76V!si25!j,6)0s%25e_ThX+5\ZeGRp^6[FJsAdnf]"'He0[2>u3r:RPH0-0_tQb=4s%:^LVPcF["H6B$G"J_CTXKQoC?eNAY!lj,u^<,]Y=#m"j_o9,BT_]'e6=e<9uI9)6q\:6ZMg+<9oRf`U^njKP@!%01gqODYg5hl(?%V<=UHp'^^&Eth00LC8gLr1l,]\U`L1G?._6qLbsF?JM\H\kXVABiM:6Nk\77hq3NkFZ61bgs\OR)*I5WfbOE\1S9u#,!^QWoku4`%NJNg-QZ5c=(EFVnb8qa*M\L5]eO-<b_rKCT3scEifHtqC7"bBiB>.!@ZB<Z&K/#U#b[_'u5;i)^_X_:##,eY>K2JD8BiT+B=\ZgT%]^5gMZJV??Fe*X4@;$b2FY;kT%\"ZhYD5kFC!R)AphaDr99T;fT+(Z=LR[:'ZSE]RU!-Q5h(#Lb#MCd%UIdX_=[V,'T`Y(7['1P*%4QH2+fH'YDp.')Y^-;s/h=^aq"1LcdF1^#4<Zf/#qnGRH.D43:_89C[E4nNHr=P!,(#\acU"/g:$Oe\mDLVeu[p#kj[;(kO@UD])%1AHd,B-nRQV89lIe8eTl]!/45Cf?D+S=SK;`q;8p2$Z9Lg$/-!Q-2N2_i.\QAqrB8ZOno=FcGtHE.hSHp3l/c%;@Y?O>JC#Im/"0%a`%M^auKt,@c@hCh9Kh0\)lCd:E57D?=JO8)btK<"t$>b8K@T4pc0cT&Iq[k>r>:Gm,?'Y5Kg8>;a*uX9AuB"/]GR4<HPeg_<&/g%JkCHYjF1nD4G:9NIcrupd]LV83[:+<44>(k5W<t4NMn)5d?ll_11Si8_OaOO:Cj$WJ$>9_F,6q(;D^%Y<mLlZU<qZ26@GF^PEYg5%\TTnlpp82o0.lBcAqY4(."ueNbghE@_q+d-1g.>A$ptpa=T"'D]S.f6==!cD0&'p_lS+E_,s[5H4BR;&20l]+6!_/_q@X#=-\=mV%9!"HK=4'OZ*PBo.ktW>FE1JaK"ejisT]+H2jE7i1S'qY^>&$pU#DC0-0?S3p;&YA524akod8fQXHuo_j=>c'@,1\2tprQ-Ir)Hab%lYRUr\4B^uJe:0b7]a?2.PGssaIP#C"!?,0!GI9i97N<OXFQI=PAGeLBFPIPh\$SNFMo>6@[O8=/p$2]BP]t^W"Lfno^9C:kV(o^%YP7rL*q*>B0Z0_4%(@+TN.9;9O^U%35hqV2EBXD$*%mE^^f^fE_LDpZ`6jtY(F)3#mNZi;6aJj%fJCJKEO^_5aG;D4&(4TOmf9"]%AQIe(aa+7i6]p`,.2$KaJWGsC&5nZWE7Kh/cFl]?A;;cf435E,72&Y&]45B`;q*\<C"6d[K&muIAm&Lk;_H-4>0Z$EiQ[Ii7T&Ni%a%[fXo9[j^IJc-TrKmQMUWq]cq"9.91GqhC8SI&Oa$hG/8Qs;00kUjO1Dm.f17+Ilk9GdJMq.)CA6\b?/Dc=C?lZo`)%&DV`BSq`%`&L$Er>e@d#@qV>6_@Qn%G\Rd,XCr21>kmc>NS`,E<MNkLsY>6Ge^!L/_sNdI6dVikfm+pcI7)/03[f8>YZ06,UQ)!Wu(`<P)KAa%S&A7F\+Dco_9YDo?mM!^1f1_b2os5b(8.cbaPDHk)j";al^__g.WRA3AhlVd6PG,7LQK/S_tV8a3<LasQnZ@*8b$c+Z,(e%bQ2KC%fe2,ZE8C60A=?('"t<>81(s2uQ-M*g&!6JD1T#SZ2D(YgR^.R3_W"roFFfAf/;>1FVs%UuA8t+Bj4IY`#I"r']Rt`nhZX7T[-Ahl%N%R"SjsaT\V=^kQomN,P?&-oG3WB>Y1?hj__h:3l+JWTq_^K\[f.C-%ca7kMd8jgU[<(!&ADE7VdtWo3-lo,$:g7IjVar5&]XF3u%3[)<QV+2dH6PX,gB_Z].q1H38BW%tE<eg)8+<I)ia]YB5VV&sFl/Z#F>oJ=]*Y^aoo7iN\"Ji%V/<>+V:_=C.m/,(KIhQ:%Dcl]"%GYsl^Rj4n;e/r($>3.5uKC#=1m@['9:(U7E;W5(4R6+B]:?Vb]-C-'YH#Vsh6&:ht-@?auRP^,PiD)td46S,dr2'5'*0ORoTrM*&%RS)GagNKp(N6Wee#Wj5EdqU3pOWA-nUUrk[?)Ir1Ps<eJ[?X>#OP1d!eD)3kK,'K!1ool!-!2ldJ2hcRZLBZCUtX-hnKf;0Ml>W-%TibKc9dptC6FR@W3!>Y(F4`5R@u$C!W7imrUMRfrrmPa2XhbY>6Knj\D7&U,oDRS:(<dadRg+$qVuUjX!5qEIVV_nF`)+#--U^M9%>l\Tg&EH+\eIi_X,pM>A2Lj&+^3HO_1[N^J'6JjPEol]KRDULGAiaC4+@Gl0K?)U/@[d?sZ(5\C%5.D(J>'maTL!GuTqT'V8ErdQ%.t"OI=#eXZ[nForr`YX[m;1BG:+<WJHFA4^71q"L+^(Nfr5>nk'K73iKmnH9j%u*!VZ*ld&k/_=q&>D1kdsDgH:d6h0]"uXp.$ga%;_reenl=cPS9&KO:EB>`C<";U+QJBO,@A)\42JM."Imf->*(mF!o%<A?DkEGYl\;'&j:enL:Iq?OGrQI_NKMiRl(<"=D:3j4VS*^%+LAqnRffHVCsX?;BnCDuQb,_"$WLi%!%@e"8$embbS6dQLU-q.6j3T$9)QgK5fndb--CR:DBM4XFl=Y;b@hA:-/])t%qjD$b9Uq"%#\4$(/8$r3QYdn_%F9?%Of<r7/buu#Bk(a\bAOdfcCOXr\keWEJ[8m`[_`qL9Z7cp[K*%S;:+NA9_#LsI>KY*q0+Nrj7-([<`5M:%f102E=;$Rs0j-XI%+A[K>ol:\2`:lVH@,_Qm5"qB&PS@I$5W+0pNDau(I*N,^V$Z1UgQ<9nb-\d5D"`Tnu%CV.:P+--3J*3ft%P>%=i[KZ%NmPpT9$4E!#OnrZk.B_[!m1:8kN6%#pL^_8A&^(hfA>B_R"B((TML#Z*H0/qBC+_f=&F.760A!"%75n^(gf5X*GrM9>Ot'%HH:C]5h\*/]A<C#nYQ)!D!-u@<DB9PohN1p'>aeO+:?o$OS6_*'eWhrD8f-^E#5@&;_V(s*gn4M8P9.@Ms92&m'0]NnX"'M)2YTT%1j,t[4-%]&'KXfZku7Zhf`[92nSq6:Hp+n5U5KV7P[\FR_#Rcnbje;+]Dt&COgk2K[?b2->-2?Q*H'g+)rSlYidq0:([+G]<@)Y9%<^%+fJaCpZ?(llg"\s>6`.\mSq<#,YFe%ardbA9rdk5Q6(6(Sq8r5Fr[-:f6>DnBM@fNP/GasIe[CqC=$6!e8SiU9\:f()F'(Hjj%3:3&_cT!/b0[)aO")e?7\a#Ma^%C^&$IoTNhrNo'MWm'b%%9^.cuCr^9e5qV-W56<PQd/(q<g1iT*@n(!#=u1PMeU!I[C-O0=mBT%Kt.P^q;E!3Y"!aC'oPGMJm?2Wr;@5A6@9Cq<<`?-?CR?_QdH]h(=Pcn\QK(h:bf`.QitKM(fpoYP0<TGHMW+6g\19Cs5sL(5_o7s%,Vgi5,Gomr$?ou#-][GQDoYug2+N`!_R7Ft'AfeFJ,-:,kG`n4c<*2mHjaaIa`-adhF^=D?dQg&JGJn.W4@q%1KAVRb31^WFr!fI%"Ch?&(Lr@MldMlb.9tHcHU"'j@hNtnqD+aB"i]YIYY`;SWS6qB<#U+Ha'U=PLcd/n4/!K/b/""q4M+Ne#LpCu/eksdZG:8,N^=6-%`V$$=Z/.pgihW\Fks(trM+S1Z/oWTHWOadPVr".gpao`T)*S'1c)f`JJ'A5iog"8j[u<qZaM7Tr8a]R;&rNYDJ;;[D`@M"O2umV?%V?^d*li>eV.>Y\B!+*QjaF419\N)pXDZXlATWnJR+GD*J%<]Pi:4S'eo*.gRnZkf='Bgcb\M$hTN_01/mAU_.]p.[T`JUS9i5^m`%q!4%TXr2:qjcPBsm3a5\7TR<e`.L2uViHhi8S%>(,?0Ng=^HjfMcU(eEP-5H*\0rnJMAf%`_n"Oe]RLB-foA#aUU>ZlY41.Y\V2a%68_(4^I*L/M,/Uu(=W]%U:qdm#9g@g,6]5'EN$IB'E[LC\:F?')U/^l*W`K>)bgj[pOf1Z.#c%c[1mI<?a=/UcRl:kf]Nr%;[pWB%iHS@R2)!Jg,K,*Td[DpM-Vm'SGYk^X;>!n]q28cT).R&,9$dS^!l[u/OUNlnVoltVMG=^ir((N)W,ER9r0T<QW8)TA8hWD0i$t0U%=>!@8n%c&%i<QV1/!05OYll*-WlV"UW^I9p6)0VLAF%Ge+M,ih"sfHV(r/3dc7R-5@/\TWk&`r7qJK*uBqCPK.,AFFghqpN(ggH2%4(IJ&"3J*2oi'9te^C9Ll"_d4eg)Ojr<^T"@MPR\3TA!baB&a1P:3Ct6294X(m.7;2pO!sIVn)^#m=u-LTQ/sV@[[d$B!pEqj<0k%W&G&M,L8)1C%>XS-5C>[V;iPUIq6Lsrc8VHT<JQKC(IUE_OQ0JoX8<DMqDG*GB]T5j9X\]qdN!'e)+X=#:t%KQnZG,.0@4J^Z3Z?%r/Ug/rf7"M;mMLIa`n3YY(=XkX^]D?<75ZK$>QDq`H#1u"8V9hkYb]W8$fN\;4>1E)p`bbS5[YhU.-]t+?^&-I-HfL.j'`9@I>5-%gj6Dbo:^Vl6g6=T8WR2*&pICZ@KBj0=7o`m.sup\jDPPhqW&p*Sk)36rNPoZ2NA/ibl:'#JO-I3H6/I3aGQf"O4c3]Sgn!ACQ\f#%UjerSE2rE8Ycd>l&2(_4jtor58C>+#o!R%8jo7\AHH7CXXTd\AYt2_Mbs!+n.4JOJGqg#dm+LNfXaA$9@<C(pegSRk+C>sP<o5?P%of<$5P\Ye#45#BC#dP1\0QqU'OpV+cFkibFVqIb2:K;cm?<SY$bc/Fb1VOc603+_C?U\<n!emn\O<m(1llC>$EJ%"6`/rWL1h6$L%_$^CTI7T[++aj2<9R-Rt^T;DC.,fq/LL9$JY\S<F/<WsVHP'[cS`T-e!a(^F0T,*i0o"/h4r!$fp8$S47=S*&DO:a$=AZnM6iE]T%&rP<?r&hanJ(_OX52Pc.r-85Xqfl*F_dp5Q572j2N2uU)#o30kl<UZ?G'j+2h*Adfq'!)C^bqd#*?S'-Ln1Yc8##-U_l`Y_Ea:Ro%8O%1cF!:)g5t:Vn24#[2:2?fLZ+@Ah+]!M)&!KeYfmOJSpAi!U<XX,O;0et6\*bL`CH*Cdh(O!25Mb3,_LS0,rWSu:46^\@"I7)g%]&tUtIA.t!$jTS<f2tU4@E<nr32GmWT$IAO)=9QM!$409s+)DkUbqS8MY"5CKm/bMW1g*d-Jk@`bS6ErLJF"^8j&@Y<E;7MIKIT.%+qV"U6ADF6.NTk3"fe#A8A/HMQ'iMQjcD5?=\V_Xqiapu1>eHm=B%UgVBF3Z8>GuRoEU*-OLKCp4e(Nj,#fOC'ViNb2qQ4tBM=UY%TRhgO/0`^<&m[oXHt6^k"(J4pmiMQ&AH5\/%IA$K?a%_aM5[7FPDbU%n0`\T<q2<GNCplFE*S[r6Fg&.]E#3+JRhdRN?6&$$(1r"%(b_tf_KAYT]Ba"bH4<0?fsWdicTZr"&[5MS0>E:$<X-C#;ZX$E)bt:"1'F!-707!T^+`L>-0,JPVLBQ82ocV"1!*A#l%U[`="pbP%iun"3fsI,S<!QrS4`_=rNF8Ik*82bC\FI+3W"lj3QWW"l?tJgT=UCeWNHP,R1:8RW1opZu\l<Na,(P.m87ZcCOBC&7K*h>j5gFBe%&eHeT'e-YgK%?V>?,djQTft.VrfjROLpMoOokWi-<<[n<]TS'LEc2fjVCAK`OOSaLA0.qYS5jVhG<(i#['-HR4Neun2ssuYQ-K_m%MHt^PkHl)+pQ,Q.=<r`t`7T_aQ7)(^kPaiX$iT(^LAsJGluPV68bJaie?RtRZ-2GTs1.LpG;";mB-D:F3b2j&2W[;Jnsu.kKP1s#%f\Dk)+;MEeEu#_[&(Z'=XM0G680e>TZM9X:p\lID.cJ>]Z1FrZX1ei'0DR>:WF/;tP#??GLBLLkYcQs*Fg)`26lWgn.@^9@CU]mn%?3)d3V@)Gk&kZPa*\u[QJ?1UEp-KW+hH<So66ACMci5^A`l%ZBbujl(Rb&FU="4Z.._8li-t\rCVI0#Za2;6QqOb24@*<:Cc=AQc%*>MXG+sq]OU;u;"_2:^^m['jVK>G4L.fF<SZr,j2^tSUg'n$"%><su>$Y#.WQ"6'N])CF.2gtJ7bc\SFk60i4rc[e+JGVW.&t&Ao%&e"_o^]fMN]d(')$QHfB`UfK^S[qfKPa`,edfsem*g7'\-(MsTprgglJZk*miu#T$baJ/4mQ_a&'9pcq%f8E"PN>m#*fLLTaID*l%OnSR?Gk^Pgb`23!EgOiIH1@r0qB/AH<9&?)1m%O5!&Zs6bYi]1.Q?os6hp=-Rafm?"=>V<@uV6G<&[!8/5rRnJ>h9V+++u^/O&7N%mlP&I=Bp2eSkKA!0",2bqig,o2uceuUf]_AjY`S`&WFb^N"(XtPL<SN'@3Cjr5m"bQWT7U'c^aQAi7UXoG;!fi_EuW.;8cQ6[tPk%+M/uJ5"W?i;AapSA/p]Ym>ai)ao3P=U)oisa!i;O]Yi+L%V.X*o6@ihQ7t8*01NuMTH\$0qpl4AdfS;=$j*04#=LMQ_LTpSL7>M?%Uf4$`Q8f6mZV3tLXuGGb5O#^RUq_^\I9NAAZE'O)bnHpE6=<R+Q2VSj5DNf*A1=Y?E6%<XLA32Ham>.mLjW2pM)GV/dEjsQHhggc%eW,k$(tugPK;+W'f3*P>P-Qf*+26f#AbqoWo/LquRW-q)ep"m5NdReabKiq4N8ji[bU%m=L`\:P6B.jZ#W=#@O,!W0qV=mNXa^1?%TDqi=V8$N<qt[XJrt"nYr\!RTl8FfHJd$D<)(C+?o)u-"Z4HcAYqkVm<W!@F)6>iT>&jlil\+:ZT79_A77s=I#.sHtipq"0%r:P+%s+iQ+n'%DE()IH_8U_%=&$j3u[3=HFd2J"sW=T:u0U>PoEn.sgrDT.5(KWI>^WGAs9e(o_04sjK((JV#eKmWrgTs9??[T+'OmdB/%r<?Qda2rrg$?lBiNQgbZF1N'8Cj:I0Dr1!_NV&M59>ptWf`W654ss<DiGK.'bXjbS4h#B-$bVc!JDU$Ah![a\nB[0Q`=X2dNI.$\%qDKr/L]Ol'#4ed_O&j+WffZfX*P*uIkK9I<Fn*%A!>0WBF7"jR=^6EWN5[N(6st0\":3))+BW3RjF\kQP-LBu;iPJ=.2n3]K%fgH%[+d=o$V',:rGlUd_eC2AnO6=<Re9\mXg-Bd.SgFs)O?`+U1)'Zln7a``.0**aF%rV2`[G_rih\&*>d[P<Alb"a<6qnSQI?Wc(nft%6f*&1Gs"nh*[r<uW?i&XP\6`5:I<6#f#oj0k*\X/5dbm3j?-7_IaEE_8O,M]64]<T8*WtIRrX8A>Jl;]*"TU2iA2F#ok$*k@\#ji%bD0;cn.[B]s(BjX2mM`l1%:ftnt-NeYK+HU@sn8!NrL?\s4>:)/`;aQYcgT<a;h[C1>n8)O#*1FR>c6FbEb-Z^sm_`/m^D@1&nf&%rI6G>T9L"o>"P;j7&n%b/8igs)Sb'('KrgdFsJ5T/M,R7$^=*.`92I:F%1ZYDa'q?qWWLur`rW:SNQhA,i3[uB3BM'IrP5&Cam=O%oRD\IHeTP%0PMssOG?/=n75@!MX5R-#n!3Abhg7.,d3JL)OP?5fjp]s!6KEEFkha]hl8!(kF&2:jTh+7"XpVa4I+Hd$4?=F;#oJ/%4Vftu&'cJn@TJ2Aqc9WP'4cQ&Ta6G0H/[\#\*^^5kjLr`#f&jI5(Hn9$hU<t0sfmJ'6Ocm\CdBZ+N`Li,CqE_r^];P^&=W>j0nTA%ej:s'pdM_b(M_>FF(=_[oG8NgOq^b65R-^0PYRbuS/.Nn?^1@a<+I?\al3,miog`4j5e#Yc@ae`eVL0f:\-?HVTA+Z+6rmc,;Q<j%iojfjI[%W/%&+TYK=C%0d4=j2jt&J9FnZW6m!0,(8_Co=9Y$h2plh[FPmHX<Eq8RE*%"c3"B.W[Fp:h8&gneDl2\kqP5Y,;qjUj\%6Que[7kh52Zo)@0(E?;^L<'Td_HU/h(`h"Q9Qc.^ZH=^])5*GhPKUNelYNR39NBt(46[)>CKc5=7/ZjXJ,XM9i57\VrnhE2s.-=5%6Vb(#%chZAao_1"%_C_VV9(OeObX2gQUEPWE.%\GR'9`"]q-u50fS^?k.0Xq>Y`2P($0dMJ5tZm&R5H'ro=Se$9nN@K9,ftKDg5Q%2#d<0"e6]7U8XLAo1dR7$^7s@3I.Y8#tCLoPsWS(">2&c,F(9'`\-8]_9*@$jkKesYKJ^$Tf7c.p]jS)U@GUlZseAc'!0A>M>p!L%MA>OM#15Tc.*GY8ro]1oEWJhmb]\je-V>k+nc@[5;%\U\jds@@rej`u)#%[JZcG;/]^2=`FS\!%7iN6PpTkP(XlH(%=U6=A_:2Iu%kZ"@=f*sr-Zt=M[1e!1T1_4E.+Fh,U^N6AFQ-#Y=\h\.`mS3AiUpt'S8WS@b=9#uOkd\r!eICY6<h?WH^Zbp4R%d_\jTCeL'_F%5%D%aoNe::Q@Q"haj?Yms)lTg-^M$Mg3&QA"0oi9m_UBeJ8^S-W.brDGV)iHW>&.93lD0/a`&=Heq7N5oV_9WqJ3nk1"Bq[B5$b7na%GBGj(;=+&)P+U7;`h#$60P7+h<7qb:3(`"$M`VVRU[.B3>*]LZEO+Lbq%lu=<E*phs'W?9'j0]o]K^pr4?_dJg)07\n:SLCom<?\%d1qH7F)DE#+5H=4P(qQ\&,b#3Wl<>55bZeJ8af:X#8(N<n,7lMpR8Bd5pV#2ruY-_="`E2j<a]D;k)@];>'j6oe;f30m^-3hVUJO%H?@A1qubbMhFeJdfco+Yhc/?Pa`HL1rBp7%l%9"B)<?d,;#ca'h7\_b%K=8^rWPe5r8[dd8S,It+:Kj:+=$9i53G84hBBa]ACgq/%VA`W4Wt<0;s6SSU#2jte=:["_CIU"'\_2>/is?6E/7-^?&]T.#.)-cUH?u'=gG<R9S)QO'7^/;bYPn/PJ)(#6o4MNd+dqo8$$?cp%^UWI^7?Z??orP8ali'Dos(Pi`IksZ8-1cKlP([*7"J>&HIRLP<)5?aP,G,XMg2A7HfI\Yl%C1=Z/GH@p?K$O?,hlj*B^Ac(R5U]d%ROEo!N-?7dP`=2:n')N2<C\I3oa/bFECJ9Wq4(X&:_r,cbpm(N7*I(53nkRK>><]*_1*#4UU7M"qt9X_!H;j$CW[72CA-Z!HP%3R%%GP#()mHuVkl'V%?dUh%UIZ38aEOAN;U,k!s*r`uY0#cC!JFWAr`p&uA\4t1)C<_<cuQo.Zo_?VMutAeS&!,;h"8.n!6PMVBTC&o%FK9W18p(_Dh?UTu78Gdl17kGH(j'gn<"'o%0cW.6l%Woac1_06?LON]W^,)p>V;GI)+F4])(>ak16kKlS=(#'5n*]?ouBAuOH<1G%^HXR)MBJnZcnIRN[t"pLe<M<$+@'6MAjX`M#fKr\a=KRl%,W3HRes5RLcna<d[CICi>nBPotb^&W\+n;hK=Bj9PAA2,PO+5s0COf%>0]:EGUAu/Z+t7mfLHT][nn(ABXJ29Q?Ks5BsRk/[%A"!_Lg%4M=RZo)XF#MK\bAL::'*NLJ!%-lmnTa212P^:2<4@HHnd^6A#h6%*Zjt3R4r.hi@5hooh0T?L;p/GO_OsBoKNqmEWK3kcXos*-@X+T+g+J)QSUDJ7krg)WN9I5].07HP]&rXc;,)FMO7r2Z29/4Ric$&%lrIkD0SFlNF]FX'c?`nf*$DpC'l^6;USJ`Z!_<&!8agnJKIHMfH"L_Dfi1sXLL$h=<7Vke--Qns9W[GF=3_)rGa"\j;sVI4I%9Mm%l+cl*PQ0YI?^9ZO\/7-FDoHb>@9F!Q<+2`e81%KZe<@XlSUQB'a"!6`ok%_0F]W$*DCDA3o(L^c2e/\T[u$V,iM2PrE?>gS5n!&9%3;=LdWcXdN5bj"&.Gb=CH=`I3XB3Lj?ao(r9'JU$N@&ZSHDNAtn?MLOTUjRh@ua4C(`k4FAYM3-\_B:IONJJI$uVS:jc'<`[i7tB%Mu7-PI-!!\+u-!nlRe\'ZHWoA)3U?=(ZEGOL`N8`\\tPEVejF],l-ZFlk^gr-*c=gjl_(ZLL&EQA-Z8uKLm:ghYZEA:5C+:WdlEV%cWWi%IYieGeX6_A$5*1(V'.Y*'`,(;$k>Ke3j^ra'OXutoCeX0b(PhKa$b3km:Rg=`OVX.T&I8d1e"p$7"FVG$S4=sOS->sU^?[7%UA]jobWe7q&KY@P+mNedHLjkX<:_(4</og\M<kR?>E)$O\iUR!apMUIXM]`r\I)2?/"+%uX/A5thpSX/Qf6k:=iu"rLTQ3c$Bi[?%_5p_Xd`DrS0#jcA+)e70@0WTa]F.Z#k*&IQ'&L`ZCF?Ha)AB,1V^Nt(BY0*?mc:m9?%<q3Ub8rb.-o0<[->SgK0cG[V&3KIH0W\-%bf%\#)72GZ;MQf,L<UH/2r9L<8!)pSb^/Yc&K)DX0M2^o_rcmB<Z7n>.E&i*8$D1.)"WKsaRTqtqj]ZP3-0;5$^;Kp%nX.*HcG,D%h6Aed.M_`t%m!+\\MQ3tjD]<6\!deOS:OS5fV*`ar_#JA8>&!XT`$49Ku>\g')8@M*:agP[IL8Y,Ic,KJn]CZ$3k&McI(/>-g@%8%X@[f[c^Bi/<%cXG4AC3Ze3b"I$G92e;obE"/j`(5AWFuV^=QWcR'A1l@ho.c+Qb_Y>i/l\D++B2bLOhl#?dNYXD`[C1L3Q@+k,U`%2?r/$LMREb':K_cd]6)D$)8D<1kYs%eIEk7IOIY+KtE@Jm/^,/Vp!N;$p[(0[N>8$3\d=Mdc%d*<"hV7`1c9eJqE2+ULhm/K2_SF%`UH964eaV=\UDkFUDaWd&;#$6Wk.H4<>2!Na;OmQn';lhXd=B&lY-h2FG*%+nc<HS6:LneA3'_Sn87IDCXL*/Bh/E)&M+,2*o-!p%)H<eEL&pR_F=.N]?6'H`_Hnj\8@lMZeS/_^Q:%_\JXoK5WVDOC1%Os!V-a\l,*EA[hhoN$qRA<jWe^MOc]<L[SZDlHMX&7o8iH]K%C0#$QAkL#+S03Xr8<qSiqiU1=oe>Y1[3$8aEho"(luXgTUoIWpOH9[T\B=[?2D]:2]"CXK(6&tMO*uPI`\AtH`EO'd.i/-]U8q3-%^[UN_R$VW@HOM=?dOa'-EjCPl.;tteSB2nORd)lJiJ^bKB$/=6@St]La]Cid20g4mORt1V#2mUGTia_n6HfN4eEislOn"WZT(Gmc%HX?7-hYWT'$0!P\(qOimm$5=J[nG4P<SeK\Y/k]:a`hG-4,(?KM=)=4S@9U1?TVuu<90uPjH&bSk&?DpQ!R,sX;*gOR.mGGVncb\%VDSF[.Qc.aedN]_m.l1l0Neu0TOI_dpj-$qH1I%5!:6T!nD,7E6?/J)`PR?X7g_l]U-#DbLtQh?`[ph:XIjM/1J&Z(-t*tZ$d'd9%KH;<jEY@,,17>t+PaF)=QBat7H6Iga/#fp3+2BASn$d&Sn.FKZP8=WJ&`F$t_.b)oVNjM\p)'(I%c^6Hgr6pU]W:>4<HB_U>t#<4%U_1AF7`gA@oSIdiQLfmWk/=u5*m5nKTu5^u/Mg(_\#K#'S[u$,9Oji3VuJ)G2iQhNPcX>HC&uGq-a(bu$FYiA<i,T/LjBuZRZmRa%ZsSSJV+F%U>@%9HWg0kI$Z%1P:Eba*r@/M?d@EHKP9M2](b=m&-QLg4C)9`q`)m$iQ!'%@a2"g>b!rLjD/hD.?\+PY:+#+[8JlU"%^_3S(0dn2?;U07LXN>]@D0B#kU3;.3U,j0BY_4NUl@d):bSP8DW?FBfmn%+b\+/SeN3+O5#7J=MrL#,_=Y6lfI?XU*p)Cb@Kn&KH%@L7-A:C?gk2t\]FiSkuRU<:d+\2JluN@o&gKFtrZRfgTY-7"acOdHOI[m]""9s,9]Kil=D;K\#pJ(]1X*m:f69CE\lIu"mA1C[n)%pQaO^;ig[:i(kRk6Lc<0*,)%"n<lSCbD#lgiqesX*ZdP)]#:F<2-lIqA:u7S8FENqZXmpOKYj.9g71Prhpm*D[7q@;Muf6J_%MP6%:->5<bR1e<2BTN;eIQM<E9g6JRp<GJY@<o`.7>Ln3pm-fmI-i;<dHkD;:];_r)b_DPWmpn1FPGQ'"=$I5T7shlnuZ"I&b.5X/]K]%lW2.:f?+B@%ah4dZ?j'bEYJuSDCSt9qmlhDj0ng8i4m!Ko>>PBahode'p:<Ui&.s5d`EodKF,W7JZ89eeWLCL'SlFhM%UCP%$Hl1%99,#u,TM:#CCDC;P6dYS1Ti8TE'M5*G+0]ITW@?5LS'WH(rtpU1UT=&J'0Or)<"WPJ<@k$#ap=ENVQ_rEDmU+44[7Refdsr/4$qu%"([r+j[rcZbN-PADT<Q<@dKto[(%n7/j6-VH%MaSkOuXYQCf/Ja><YKK?iW(78V5X[RiM*PM&!D<+CIGZ\-kJm@%WY59c2;olW3!%8="C9NJ*,Y!C?3s0Pmbt7aM@,ZE2EJ<(A;#0^Ic@l"no3a49uP6P[u.P0$!N-$iPI.hg449rh-AU2X9`b$is=59eU4okPe$/T_0n%D=uA[+h$7@:?[D``Ta5LaXu/U!fn./.m_igUQo#];3+Pi4Z3%jY5-0I_Qce<&b(5?@N2<CF`'B[(;HlV&ip(c-+^Nu%5,WO:]tu3%^H5N=,#Mt#]INj(\nVR-V<W,iMhu4jK[`8hHRVn5;'pklA;\g8,7j-$*6J'Zl/$=29)KB.?!+mtROiF7(D9g8&\tNt93YopCsu1R%7Vp=j1HO4p\h>pNT)(\$NNq*gl&eP1]C/.>d"Nb2i]V&Zc$`hE;]l?H;b[#4aJZ)HHe`nZ"jB@3]MC[G[I(jV=-*3A7btV)5E(5e%*nU"$?<one(/^>r:I\f<k0oKm\>$2"afCmUdfoRF)ROmbOC_$JFk1"&?8=):9ZaZ[JZ:[9N=ko;8mL[SeVKOuq.\].*`*82;5K;:%Bo4"2,#'E9St%Ck1Z.)(D@[V5,ec(N0m.sr'>h3_5#NB>.Gd",,"3$j)Q_Zt"Xp_jTE(6jP8;WLEFQ$^FjI9u&<:K0is4nD1Nign%eK@B+M^)3:Fke]/7F93;=JdZ:Cj"m30fI(k6Mp`:c$+g!Ep0>qJ,eD9oEdkoJmu+$0A<%+mPfZ>n&u-s\kFTHASP3$B6SEc?jMpr%Dg02L%]#"WGbC6B!=2\Xelb"dkquAkl2J8h]^b]22cDgr:@qt2cB4ZI:#j!lG>AZH%)BO4?[)C%j4>?deZ:LY[BBUh0l,"T(s%,_%-Qid19$i,r("n^o3)$LU_#qPt].SeLnEn7+90CZ^L+POGdn`j?<Q=ise+EKYHF<?eo)k"[HhbrhK*3#ehbg7V%t2F`E9,cEYm+t@%<o,`.j?Us2<JkHh:u>e!P)su2ObZod??edNr\]mq#NMN]prYX5$sfufTEJ@4kpP2Ufk.e"1qE15,3SHKcqKK]l5Fu$RbK:32_957%8&:6IC=`gLC)5&F-c1dVA]ei%_f\i;7IfG=M<.)Rk-J(ASTS3?q]cc#U#t(qJHMB>6chpG!4W&rk3_4`hKP]Lcssh>GI?bSbIl4*%ED#,K%;PQJ5f9d)Tg/8(o=pt_Hi@GBR2>33Dt#X;\Pr($$g_+tg!2==oTnFJmnY-S@P3l-UYM[W%kphR##g6H'\9T^O["!T4uliV%aIs=0[?u^f6,XAJ.%a;r>V[K0HV6="S9I78R=Ylt<;86!'.AFb#-Ktj4J@s'K%eO(imJ%u7gJ2s%l!$K2&6807ha@r&![H+_E1@q%:/dfo#Mb<CN"t=RMm`ST=GJCeR:P.?1=+:%jW+OoCCoC+\frE2+te0a3&3?hBY'$SXiGS%:ob9tRuj>S^B@FP7[.X@!`5aVUq%kV%BOebp3VX\*./lj#7,VjHji1cnF*1Ue7"-Wm;0aV#``Kmk<Lj@[8-'TiU2"u+8O$F5.%O$JSbDBAd:q3!6ba/Xo%P[<P.3A/l7284%pZ>o2St]aj;CPg]]kRqkKnR<"V-[SUI7c1?_q'0>'d9F.%u%i\dQM"MO@1ggj%!)EV>A3l8^j?%icU8sjpN9GErS^T*n*%u_B3\?%3q3(JWg7D#Zg-#(=qE!W@#hl;Wj>pU:PYo;:u^T^ZnD78J,F7O^1Q/h@2dW(Ru`Z?CGlR4hgX[!i(;6jLM=KKbK4k=F8YOpX$1q,%f<Ma@9EUZHPMVd8l'+KM;^-.h4+YlQj_6q")F9e&P=rAD$cDj?&me$@lF>uo0E:`S>Q3LTdni&+q/=KL__?joK7A&KD_n/R^lG#K%:Fe_;HFbT<)#a.q@@6*O0[,Z/r5bBIa-1E4kBNQP2=\Pm?b-'0+#AD,2n@2*VNKS.,>AC%@WO*W%*/9+9Xjh=2DOc`+.dQ6Gkc.T%a@+k:m@)Qnm'g?4).NRbVVD$ZR>uKO+230RLG/Z6o;=#OXYf?\!]ALDmq_6+rj3G_[rZHBhX$Uo9or?9'T[#nrpju7fo5o*F6Od<%TM?6I)i&4^Zq8?nm4hX@V'9m9rXDts>P]+0-q6fLd<iVR\I##+J$T^jA/WRjE2oF!Kme-.WZ[NdOaF#D(7*oMkm1Xf484ckpB:T/%a^QMT+9Z;@$,fcbh>C*qh!0JS0.RJgUWBP;:jk$\DqT'\g'qj&UOTL\V%pU)YHca`B4;66Yq;gXBTm6?gYfB^/@#,;fVWJQccZ^O%<Vj,E:^UjE6B,8"6mmj<>!.?f0QFEm`!4PbeP_j>:\R>3\G^2RHZg&_-Ts;ATgcTX_t,--Jqu3d_t>$*Jf?mW%22DUGGZE7Ec4q0%gV:2:,9ZHlj<CN[>D>DH'(m$Ta9<s;raI*=6dV$2l)=Qr4t>V>e?;R;ehH>gZ?_p'>h=<#BX.j?q:61+@i/2X0%9&R'RR`>HXY0O%BA_u0M@rOZqoT#VHLbPc`pFnX%]L3_?+7a^p?$.j2e],@P5ts:q2I,_'g5n/@r%HPR-`C6,-':K[5C-A7R]+E@f5a3`"*bcgu&V6%Z%=#\?d8U"C0O\[:S'G#]3s1R6_+OQh-k@0q\ZQPWfD8.NCbpI[XJ':4\<='EHN`a)p>4\e;lB.5$PXR4?2U58q+L!Lfj!/hY?%g%O%23>]r(V($DUo7iWC)kO%KFe]JJ[m^H?C`\baSHW/.9Bk"n;#`XD(4*)LnYl=/K3O%,;V2^>3%9[eI1OX9n?N<T8d]m7#Ic[>6*%e_B:6c];Cn,em[64;cQ2/rh^$I<<NnYN"L$bAT;q&eZ\^f#g%57'JB5YO"amMO72MGai>Lnf[d]HFqFgF?sBiqAb5>-D;g4[Ok<G%oA5h7+.PJ0fGE'^\hQ&&W/.r$of6l@>:$p;S%/CA**m43_b]hK<=aBceU.cmSY/!\mlnj`0RYZma1]Sg/]YOX=$Pn%.Zo5cM*5(G%9UI\h#'kYp[kdj6fFMiep""?u^Ssa%h1$d6QMU"nAPt"Y6;Jk,QG,[M]Zo5<TC0d[c_^eX*`4CQ3rTS`;r]8l$[^`'pOE-1-[qoA%5<nO1NbdI"0qII@7X#QH60]ugU[2==p?oL9`'se*FD4Iic7tj4lm\_jc;-te]<%Y>5eio]N$jIGME85<P5U)A6j)>bK[UZcMWPO#%o'T%k.O@F2J?"n54gaht$9<,_c%SjB`]dSe1Y63)l9M).pb`S.eJ_70W)mJQa$an0PtqZ8q4,R$kX555BFNca=(n\ZMf9T+T.jFa%7Rk&sVQJE2;\/*A@FD9@[ThbB/cg_[r@jF(jWH#;U*V`A;pGkD\7^DA77KS`A;[YtR0<JS.B4Mgl'Ya!nM46Hg:/[fd'BT7A-uZ$%C"i#TTo/*5EpQ"GFd)+4Ug_inEu%G]`?2e.Dk7=L`r2.AFWp!g2Rtj]PGYs`RNo`sS!'\TKQ_R(CNRWUgbWBe1CKUtgGW>;k89Os%n5CgEG/u1-]!6sEGIjq!%+=af\oF1IX<^8G1_/X>C?lR131EN>=pW2I(^sk$o>5Qa%RF%JCi;1iAhNo$>8QX%<GBMd\"cI:E_,G*%Q^@(k*=SL+>kK[Ymr=aFm^6/9m']>b4IOb]:4lO?Q!$L$,?L.%fra+.onZ;8YTd#CXJLi$XI#;T+J?=R8X?$VVY[;cR\KY2OqI&l%F3L@?NA.corN\ulojXa+iQADV">gnabWm).2LXgVE&i^W[OLdTc,6X>Y!a_qB!:]`Y8@ifho#]K`V5\,.%3PPPGSa4nTB_eaN1F:%W._n]?oru,3igH0hX4'DMq+Xo=XG=2$jLe.m3_D@)DY1i.m@l=Ii2GJ;)'QpV'3?o5/R3!'fE17:9nSoB9*Rk'KF\!=M%p!10'o5%Xdr.s;oB!Qh-F)5A*74J_B;d6>N5b1bhG6E'\a"R^b"r48kprRQ8q'UQ0@:Dr#CEDYH1o)CEfO*9e:N)ViaQ/Q?Kil#9>M"=3?]'%&-P6jRsI5'LWQCBk?GDDbb2GF=*?rpO&#(Q<TZfV`OrK*gmWm)Q1gD&.K@I1BQGr(%5k^;H3+t*</@^.R?2.2m75]rG.LhU\shbN%[q<[*DhFR^f`cHn(+h0p75^^G+*6K8AP=R,g2Mt`R90_pXs2OZR4.(u47L(b"3H8][tef`G4g%FlDacV?%"eXooqXXlcR:p>L.@p%YK*Ns+#ikhh3l!gWL(/#ej$C:YB)FY[=LJh/tlG]]VY@49@#c0o_JApnK,13RQSNf3Fi(AhW7,074)$8G]H%t&c9\+/Y275\+I=Z%92EU:[^9O;V_l:1f$\##5Bc2+PamPWmrc[*IdHVt0R?6-F-BZKO14bhT1mS9V>#89-rJ[I:#3g$S[\3B1ei$i5Ptdof-_s6mFS_G%O/lR"ot.]Fhpop*eb_2BBOFn+>Rn6!G4hUPDS(4d-HiQ<=)[K]W?8Qk\Z&"'R->h,q1r;\P%mHkbO!3WYm$Z>gN235p>!>GXiDPU%k1'-c9(2sl1Ar-F>0F1m69TBur*[sSIm7;<"[gS%[WZG0;U6q2ho3$>nAnd2iGbT&$YbR)&GuK<WlK5p`AN8b["U`)r3rTi$$%bY%/n`qXXSb&#05((!9(9>q>coOmX3^GWosg/R\M<uX]IPRb<pmcH+5>C+"kNej%XlHSZYCtJ`M(V\&0FR:U4$hIEG]dV*MXG_A>'^A%J?.N),["B:=$Z[]C"--j@a70bZ/@GibH,C367BE<j9Nt6E&QB5%^e@;pFQ##\l?]iCI*]*IC"U8Po]r'rn4md`02$>G31PQ-tQ<+%&X2ajP.k*b+nsK=4]da2_:CHX<4^%"MV%jDfsP5._j%&X=5jc,\jg]DHG&XufG;=F1A3K"HN9*^^0R:f86rE#4+Mb>D9^75W+Ye!%Wp>*f"aZ\_YF.A([@GeI;]a%SN1+-;^=@P'Q4oG/#Upl)C40+EQtHFcYpti'#;>BT1k<N9(C4FZ)QO'9dX5GDKN3e\aUT#rGaF>C%I.c$[)qsX.lY,rjn<$*5R#BMaq<;qMHsBhs<a`',ME$W91;9uekCX/43$5'(FGM3!pu![cL,)+,U-^%*;S&-iOQ7R`fHH_C2j3.=%>*`*+gh2b,8EO#K^9*T(APq.A5*r,E)>lgc!q*P+4!#U5PeEu_EDR[+@d4c#+"MKfs(=OAiJdBB#Bqs]0>nH%\0&97*c/O7Lbi*!%LNW+RHe-"@^[K$$I./>&l\!s(pZ9g*gTJLMMpKmB8,pb[WP4UB7[(ToDkn;qbApDoFe;'j">gTP%0`\SLL:`<kd53t*#W$@$f-N:%e@BXAlshi&E.\=3jO<>AXd^!gShI,#eGIg5iA;8[C=s/ZMJ3/lS!!%PT\nsQeU3gJ*gB(pAWb_l]q>lLf39%h?DXBH+]'ZUcaMPO%O1Cfn\Z.]G/n)QI_#cWb:=ZpDH,"A0C'TImE#Zo0[Ujd$]mm<3,'CXBL5g62O&0Aq],&3uJV'nM:m_WSO"7_Bf,5u=bfii0+"YN;%Hp[g`2Um+'AVS'$`hXU5<tG53)7uH6atiXo[AIT^it&;f^!6j!o>2*QFBDVN4aN]U3s1\![/3e<r*f0T:oB$8e!>rVkDGFG/;LYX%nqG[mL,Gn8BG!8hH<k/o[(&tMIp,aLDt5S2Mt'm24"JPsEH+:R`6Il8W)eubm#tiIgVSM+!YXoGY6](##WOLm=08'[^I->IK@'(]%i,DhM.+YdGFuW3T!*pW@^).AFAmGO[!*f75H$cmFC!U@1.BuQ4ntLHnNkm_%k\EZ+FBbuUbK0PL_5*@bh?9)?R1N.RNCqZ8HHG5O%kX'``E,_3m.Kq'JLrkl1P`PqXJLOe9Y'Q)L#DGj/W\U1H?!]rDWE2=#F;,"a`\['.8?\OE,CQ(5F%]3k39pi.E-YR!4OROUHnPuN%(C03Fj7_T>r4<Fdo>m3`*o\o7"7+(IHupPsHBu(10-?..=*fPBDQ`;RoZZ1mXP,:bdRY@AqK,j_rK+d1EO8&<?Dcg^AEauVi5.OY%1a:C>(8N$%cGp?BIemI%8:@`TRl"%WW>mL2&CYKclg-\od8mT34j\-,GV)a<`VXd`?7&B)=`Bdn`qr/T:2orH2CMLgc4SEu0lma!%/6ZaFXnCZd]kBI,OgNuB)+Brk?(<5IRJ:o)1=0J:0$!9is-fg&G9t"7Ucd0K<fkoTEt5]eB1qt7pi5hPZoC\rp%qq#a^/[_m$#V5%NDOn2Q;u:H#kTRNZ&"<Ro2]9P$D>g@QELJ3bq"(rT%;WEa%bo8YHp\@e'-G:;^)c-ZAWDEo@%:#kor$.)8j%AF^7DR/gG#^LK;Fr%<\de=a@2&ueN_"4B-(p.nuBa:#l>1/7CYg+s)PBY=OSo=rqd/AHOETV2j0-G;5Y6@!3dA'R[n5b7]`\2Dd55u:Rd+tZP7du5Pl]&%hJ%2HfL8):(tMI_.rUWh?jd-?R9X&MIbs'a;Q9HLp5R4-L8sRp<`N5CBpS1N2%tY;0h<+9a;$8<;,I]A=3^E>b%;B?a96&Yi=gO[%LIoCa[*ldYa0!nK:l`'Cj(,TNS9H?n>"0]O7]BjB?UGfb>A'r+3bsOHbJW?mq=^00-,1aZkJU+UKQT<$&_1rk<mT4ImAlWq..13&%T\o4&l&7SD;3cUQieZ"cVN+k!7uJV2B"*SeH7-0aY(Bjfi^H_u=Bnq'':9)#[J(C@Mc(Mt2->\]]Q3F_fGb]17B9r+;%'a\g?)Y!%9ADqe>Z-G`$`'Z?Ga/TV0P.m.G0;^V_Tb7@qK.#s(a^J='>tQa5gA*;-F*LfWFDLsI+3o;RRU0hEVQT7R.DudK*S#7X4W>Y&8OI,%W=qiiCW4FJ0hCBpNeGJXj8:ng3#aIZj#KQDFl14cJb.Dc-(<5ZaLDM:a,p]&')F;?@U:\RH0ic@IUllrhRs8lIFahFDGrDC/(OS7%!uLcpl?p&8dBmg`pGs]`M`pZ%m(r:#+84X,mW.AVNE]%IdoZ.:FaU;jMh7]3[cjjJi[NGG,CP?4b2/^X;;/,V):?&2fCXI@qi_</%#+m;u(1$V&;stE#r1<Z;=0f+$kZ5OCn*@tY(hfo&6C#RtN'p+=:t$M<JGgdjdkQA&ou.lsgXAb8CQ'0hHSka=dV8&Pb\%)6b/p@j%6@nmW2UQ;W;^)b6VU&&tfGJBffj:7LC7?'Ocu5mh*o?4R.J(7'!S!M?L]@DEgL&n176jrb6?RdlZt-LSrdqZ)FHN2Wmpl0BI*qhB%qFtZ^aVZ!l+WTWpnL*@d]ZIHtNO!5/`C85M"sU7<^0p)/b:<:8"bNgHg(Y@DO%Q+LWB(3U[Y+NU,mnI-MF&!_j.!JaG)Ra+iAVBO%T75JjdK/3jU61UPf=T/(TZ.U<<2!2U7YG(6rpAk;/6+3jbnLm>:oCn@`\,0#]PiL`F!7_Lli=)bDLl2Hl4D7qW_+9SZV)Rt,WG-e%;*n5M_ZEn+s'cNq]>M[dIK'mVV8jBOdE]I4i3/"_>gAQ^2%*Ys$E&g@=^lUZk].">FO_._9h.*$bk><H&sl)2%X[dk:>*_5Tcdqg%.Ogp.>;[E+XF"mll'T:,5T="RYOQL.Pq([b7sg?`XPupoLJT*aB[p]_QRkFZpT0(R-3frsCkOfc2.fe<R8SJg!st#,?!t;2bA=0s%,+l>nCPtcRKLPjlQS0.<rn-T+hjWYUI+>^(M[t.3k_H$4XbAO._`"g39hElP>#nf`A^[85]NXqG)eYQY>_KC.pc6WcV+niue6%Mp%G4Rehd&J^(\%pXkjK*,8%Ab?(E4<:`Bpl\0-crAe5NHr5Rpi!?Pe^Licp-OEp8LcUFQ62d4=el&/j>_^p=&:/<JO-^Obb<^"G7j)%JdkJmTM5Q-Kjlt\X`ZL6(&.+PfOc(]%U,MAa@,?+5=_NSL$Y95pja!]kl<nM2b!><V7MoLk(B/!P9D=a-\Yek7n5IN!tcb@NQs7O%diV*HbJgu?*)[iKI492SfGcEU\o17Lqm%;IQgZ=qSM$gpkf:DeHb(7@O+ZZV:ofb2TZ-!7.F2:rmL",&!YDRWW`GCkY=afjPJ`@4%Zb*=r`-B6e^O#]FJ*qKP<1u\!HU$SS6m]U^1>)=!2?kGG>+_EN%ap]Al[aFJfH4;Y`rtEDa4)'2_;b!q3=XOFOi18\Q8F=jT=%Dp%*19ikNJ8"U/A8u%&:cqSI9!4P9TY=!k\@+\:<82^q`(u$'W+#BClB+:qW+d-gnYQnC9a0NFsG]*A,?PO.?,U5OX8dtm6fV@'PLka%f]65X0j>"Ua+B$7j0b:DmIiLV=m9,'@qN9*>BlcGGRGbk5RH#sAu?J#LD+_>F.F3G@7>EC1`f-f77.S=VTP6\f>%1#%h8'1?+YA/%QJeQ-@"Hp2L65YQ"_Mg>=[ZO=TM.FSV(u2r3D5Sth<raKYQorP_IT-k6;YBf^#:*(9qNPuLY&oCMLf@]Mod:nio?_p5<h;S`FF*t%Fm=1)`E'tOQ>"(a>1NMTAn9I%OQQH6+Z7<G`+Q.98VE'%U?Q'u5"U3F0aVaETMn`l-;Uiq;gY!l<!t\l737*d%jG]JJH#&86!7kI%9HoY3/I9DEr)b-(B%05Sjo%bmQ!98kVb<OMT<k]*J.OZt,W?$WK=Y=Co5u&>Hi)GnjE)PE;he^.-d-80qq%a0/HS.G=god).+NZ.%2#HT_jo6F[J+(CtYC(/CL\?&-B[t/3^ZuEhR8WdB0Q!kS+hN^FF7R#C'.RM!iKLXigqH!=ZY#g"`<&cgk2LAaT?=:^:SQM,4]iA#%L*",,LE&j&+&W1RqSk4sDkf>.:u78okN2X?8Z1ms,*K:mSSJqnmsB7:`bXDmP-;Z9@F'N&^W0as6>_/'g;CnF2dao!FFf`[)U\`1%8;2lfcN5h@I_5B@00^f@VJ%NW\V(W_3+f?6@V&3jjRu<1,B\%k&/9Uee9B47/-/Zm_crGJ>u=\hZS8A6p$fh_PAU<q7:`^Z(+28q%=8U&cF:WUS'k`Ibdo5,HpthppAp4TFqbAanAi_B>a$tEhpu!g_R?EBG&]"k<ff'DrS0F+1(Kr-AYWKVLF=Z*G#W_\HOeb%(IBM4O%#I[J=#%0k9F]'\^5^ORs'a+R*@Mo]mNiS8_A`2W(\8iB3:mbJde`Om3fIFo)--kq](X^sRq-HR1pu5F[-rcgi&f)k&cPCEP6R2RI%#?L2r4pWS"ZG:)trQ@sPZC%`#f.1XFq)^M[M`s?s2gDZI*]9`3o37(C:>'(lgi%hk:QM",j+_ljm69m]O5'EHDStlXSLs+HBmX[p%G=Duh%kDV\D$`tX,T,_c`IWa$h6t>5&fe''H>L+CmlIoE9>RpYJoI^lh_arboY!Xq^N>tRo1$^S$I'tK9u&LjU,W_/O?R7K<JsFG%Uo$Ia\$-_Wk9$2frg#8E\)bVlIYcL=oPAJ^2(IQ[PCfbYIXP+gYJ@[mI,sk.A!NIQpRBa.9K6(T7G6kapM*2[-tW*(DPJ(j-FM:q%eR^Hso02mVX3`,o>:3&Rs!@t#5*p?'RVaXY2)t8:5j;u8d86-ZfFaZ4BsGa".>'Cb,H:%pHKj%B*r$AR=5nGVLubpT9&NcFO*-p9%,nT@adaq;;+U,(Hb#GPf$cm`JjfhU'/=Q'E'piYaKAEi*A*5L*n%r23B<bUN8^c()H8DY_I,>35hBUXPZL[FaWmebq`Bq8d5,5pj%YUhE,I<Kt'3%B2,)9:EB23X+m=\:dJ-n&Yj-al>kJbI+O+M`6F>Nng,E0@BG9AEUmJ]i!-kh?Rh\CE0+,X?QT`SF/aG.)iMMCBhq%6]e503u?q0Ujq@I^qp^Y1oJ8QhA-/5P,$K%@EBYn_hn';/1h3'\8OG(a^!77=B)fPA3dPrDeoD"9`Vk[@n7]_#'*0K#C(r"'imhH%Jh-hQ/;[YI[4\q*Na0VZC5\81lBnut082<shPq,*/qOipBg'[_6nL,#0^Kk_7D-Zu4^--]0nm&l+]*fclls,BFQ+s.Fpj;XkNB;!%T")!-X4EH6a"$Rq$>6V]#1\Y!4#UZ&Q/Dm![Li!GPB:])(7;<LBpm]F/6:pK>NIWLG;.TR(a!B-b#DO4AOad@*NEM2`jj-^(#g:M%r8u*f)kk`tZE<he,`s(k;E6lJ@4QT$/.iJ#N>:Tiiblk2^s1;tksA@[TN*jRA,6O%%)=BF"c70n;AGk+"A$I3g6_%*K`Q+(38S\"%;*S:AnY+o^_*j5-1''KG9`"*(?HACNU'%ZuZigqVR3@7upfop-7S9hI)-D?T*MKi#Vq]/6d\j,m5>2H"2s3gi,4JS5"S7GMOsr"e%XO/>P15]6a*Qjg2,uR9<)Y9lVE_9GZP=Hf_\YqQe$N)B8:.sK`AD[/FfI`E1Ta3mFC+7EJk\tJCN[<e0#$Q>kL^VMA6Kd#FW60*N%ZUKOsELYc(1&Eh8AK_PJrJ$ecn@c+eG`'b0]UHlnQQ#BebZ5`5320%Dc]WX\H*ZeN(T:db$+sT=?E8Y:8@fG-Q<Mm,=ZJPoe1*U4%omuiZ7>a!*#3BdB'#VhW+Qqmn*@u#eK;S.sC@PT3V"!@.0QE_hjsBFnBY'IS,a+p(iSYBZ0!<lZ/5]oC0dje2JaeBm[+JHNj_LUQ%?0<hGU.Ih[bhRN_Bng9(%Mup-%L\&DBTc4i;s9.i56qY"nO#.0]O7?FCGcBd<(Z=;!e=Kh>\/G:/C;3kO:EEYJT"#^D>utlpCSs;%i$CT/iS-DgNF5-/"2j,@_\#1_JN[-f/a:dBqYQ"<,dnTD_hM`MZp^Bgga><@ql"(U*%>]X'9;\HiN57MG]8iX9Iji3i[@-gEgj);%`q1LTfh#'g>MN^lJ[^G#TD#TJIg]WrQ8L4joXM4YN..A-`%J84S:,^9[<eUXJ'DV)'O;;"ShU9'9OF"rH3VaJj_6UnjY0_oCJYfs%Z=*=]\se+NVh?JR=V&Z+KVCV;5TLnV9Ti%8J.\>?c$F@mjUj]]n7'-ga\h3G[9;NRW=GkpCG/gP2h>c-c0B&S.btFZT!$O_PkItA%KEn7V$I2Fe_'49NlVa*::f6kGAXe3WWe$>m<=)Sb(iS%%V(umR0AIr([*F/a/(cpl(>!:sQOfU^YiGJC+/eLP^Qi;n5@X/>;rNX&%NWsZI5'8rU')a`'n@7<.]rL>TAQG\A7<jDZH#33D;C;h53=G]TgZ!\5Ai3V<9*1-b:)dlTCq5-:r_aW)RSl'Y<MtDPn?;)PUY!!m%83Ybq5.9b9onT4c-R#1cR,)>SlN2ZP,BL"Y"/Abj8-PY?nsu%CGo3YZ\,-F)VChnXpCGl,e5kXF$.CY(b4!O@QRQJ(3B>%I?*':^%jm$Csg(IW7l7cr`ZJ05#F)V.U(r5:4M7-oSnU-piX[;t7E2.Pfs12bN5YE!4Kc3:rfS@h/J678MdR^W!M4BTPrl^K,>HL_<-^e(r%5n:tHpnS;R12%@e0:fZsl#1Os_n/U`R6[IF'+5EbrBPsHrtGN)qn$!hVWWaGB7I\3EMPR\""`0.P%Mks1+]W5R!92Y>cSAb?E5qf%-?Io`VIsReWtef9\8NSP?*1<<\A%K70&+EL[Lqb/9NK(k5Lbop6F%No+M-U[Sq;U0('p<[!!"5k^2BFgg>:@[dApVAaF_[!@u,qp%RtV!Q_5l>8gg!0nDXmGK8ssE23a9\cr!ZeNkeP9k<NTIMJ6#$5G/UF09-$pCQ5""3&eJK<6_oTlQD3u]#Sg&[ELYLd/87^u;i'FA%Ol1Z8ODpLZZZKed4G)6g[A;qelqqaN$9j]/rP"/7ML;Y?)[)p-`0Zo"!A%qg+O,JL09eDN8K,QJ)M$h8#(Pa&O9s(?Ud.pj_Zp.)%Wt?YP^?HuV)6rc;:JV?7#eg&"QU=V+]-LM'(+R8NPUP_r[ooY!GS)c-/ou]EoMDC0H_3]_VbEU!FlsYH\1B_q2:[1LS$<:`0q1-j%eh$q?#XOiV]3)mDE=R,o7[H-iDI5%:XP"8?K!WNme(0:uTgZ6,Sh.9QFXcnN(UGkPUtaIgc=?;HikSd%)u.U."L':q,?CFKX?PG?%:4Jc#5BjR)h^Sn"+_\-)3cZBI!3!86ra_nrj%t4(2`6ig75#F1gl1>9],s@II6U:]2J/dHaX1p^eX7e43YNhuF>"RJ:P"&=E;"k=%f0b[3ER_A[n.HJ$fda0%kii[=_l*up/DUJL;^b&2@*;M4Lpa%J7b_ma>IJ.b5"?*G3<a$hOjt]oDj!`C@3br%A8J$4N0qa57"C!/%VW65o8?1(m>?'7W3nNXcU81DXCDusE:_Ze^BSRA$[$j%iN2VPf2!"W"Qr2B&W?.sgFe!9M<&K)9OHE"Rd='F]h*TapNNUFTG6W%W%#utL]Y]_t9o\:hqS^-/`(0.n)]lLC^>$F4`?.c07*lW6n(3prZPe3(-Bqmk+<Wu@0[su%K<;YFE%4ERK:(^s.PQt7h(H.naaH>hW%MTW=%i)N\46Uf?`:I`'[R]igQJDP7p(6Vcr>H=%9X2`X//Q-qMW4&M.ZC`ZF()/5J%\f212[Wo"l0&"Vn6;AS7BC((gl2O9r\B.b%nJ@E@eLL2N"f*s''_->1Z3X9Kk^::XQrKf5E`5n=_3StF_^<GZ*Efg\[Er[=J\>jilNj6P@l;S_P^\;2e7r,uX^mEk5IG4P_b<6/%p#]MB7.s:PW-XXg6k4_]7pEu@[?iGQ#1f5"2<o:@>?<g7O:j=\[JDIS!Ap_sBRnlt:;^THd"o6'/2=T*h;;0Wl7sqW[fp+a\qqBL%,bC<Yi/Mr_20`YsOo'7J$,:pp1a9=S8-UeSZ=7>"$?#gV9'W@h5Xr,XF.Op'RSFZOmHr3/5o&t-<n0QiDJrKm/\/pgn<3E'&Y=LI%7+_b/@k5:lM66Q46hqV/-]%R!6u!koTdC7,9Js7V-$7lM7gP@KMFS1C"QQRt2e6&0>Jq5KBt5(?c[Uf!plA2e]?&aaG*27G7>BOt%,N&12G===PkQUpH##V"75u9u9:Tha\W6Ik^6u+()>;Vm+bed48#9WcT/rDRS%M/!N$c4U2:1qP.BVem+\!W&P>V80rZQFALi4OKA%K+m@-qRmRb9#R2_UbYpsDh:drA?\e>Q.j)X^cNC%aYecF#k!-'bNI+_?;W@>I`8MA48NR"7_-ES3U1;dii5Q:3$/\h7?>KUcVIn0%j]n=0ma"Qj>.(:sDoU'[KSt660`../ft<IOO_3eiBpds*.S+elmF*h6>B_#:qds:G.XRK_.CG+S'\l#\6RL8bb61-&l"FKC"J<T4%X2*&N_L@I.4c8;L`bd11BU0%NP8gQZeXj:Q--SrD%**gFC07F#),\GDd;@s<$@0YM6I&B4&k])g$fJg_kqPG46'I'hb!ii%.P*s#%"C@n.s)bsjRFR)pWE)W@9&[j6,#AT18(U#Dc`+:UAm_,f02A>SVq:[@b>[iJ=nq$>fs5%U,<.j9ko,Z15)[OjO'IYBmhDEPSFBS@%pfBAcSoJVl*sYLe0'gchL9.^To@ISl?i'k,"Nta_<2])f75'!=CDZ$nq1"WKF&%F;lZ.AS,?shSB"N_Pb=^_V`^\6N7S,UK17b+4%S5I"Dg&95Gb$I`^clcPr6i3?iOb0MWG-KmT>MXaM*ccPZh2`H?rB3Goq,BLId7$uPmW1oM.m4-cM^!9q>fC\qa^YX[lD%>bM@!3^%I#OM[lLs/+AmqKa$Q\J"Q[hHj``4N5:Y;O&][4O6YgtokBYjOkIQ;uR'k2Le#YEK&jVou]Fi!U]4:$mJM+21f2GT8&7<6$Knm-Uo%ma!R?<&acOQ[L@C0NKbt1*tC2+gEm-C#h=5NsWuX9]HpIWb22P73cpTd6i^@0rG&(]VF=")Ui!]&io:TB:.=:VCIb(a"IgZl2GC"%rP'hW$abEXT?.=V$Bp&?SO)+Dk):*l22^N]#P)+EO]t1k:HRGVQO=]dW?eOV\oBrrLLem2;dC,ij4mrmg0VaS@.IAN)HmX:\p9db%"T-I0PDgdE['Y_%=uoMbLMBGHpaXa=$j""%r+nLr\].fK^Mp32ZV@D2$`uph!=hWF*%ar(Al\h%aA0HZhj-5skqpdq=#D4:\'!"q%<.2E?@2fUl9i12-DgHd26KVLV+@&pV][19'pb*6iejcIY&<e4S$ccAu2Gb`/KK5]o_WD:k-B0FINuH/M[*Vu.db:XrK>_k;9Nh26%QK)7;4j(F&@m[=efu550jZ?BE+,H^V`3s#48Q#1m!BK]6I!M_Y8V:A%g1*OLCEkY*(C;3/$<LZTi5(j6EjbWb,&'!GkLX*(W\kZ%%_1R;er,sq+,9?Z@R[D^e3Zf7J@kh!+(KU5PaVu[$<&NU8S=r3&U+#o*4MLQVYJ'[!j'"jrg5uOK49aE)AI=6SjEf@#KYn)drutls%Huk^-$"nnrJpQ8<eFIA#k4S/nc,F^LC(TBbW6/+t/nUEdJV-9p\\_`gq7Ru$-*<]2(,ZlJ&q>8>3Op&%J3gnS&#OjS/nJ>-LjU2f%+e8?tZ>oP7:Z]9`kIBXC0m'6=dVdN1FFXOdTG=R_TruXr1pWOf<%shJSnP,OC:a&nSpWT)5l'u&+!4tR9<9]u=)[oon(q+P5.`HS%cW:ha.3.3T*".8Ddo"nt;(Ik>I%H5PEm0$F1M0_Dl2)fuiijOqV06cultpK^D?lZj#VE8AAl(ag<A7%Ydg3"4OOa(Cpd#X;7%8;d%'G>-[)GW]bQ^)iENtsQj=YRjE\b_C@EO&ViA`1.q,h,$Y<P_EE03[jVqTWG'VR\Ze.>GkWA6=a^X5:'<!XFKX-9Q.7HCQ6hp(!:M%_7MFj@\oX*Cn;5>B6c1RZVRad#PO]hZ%?jd4LAtJm"Gh?1BJg?hS\;TF,lhQ(Q@]p>\1]!4C-W!:4G6Z;1*/]Ur(+K,bL\3`AWb_%cGh;AhUZWm?nD#RNfEU/dFKe,;3i-B=Q^#'rO'Z,l3tT%PHSJ,aN0-sah0-^6:o*JI6Q;qIGNd4,3^H3gMK.7_RQ2t1'b.Q2;9sI%_c,?[@@V84JuYZr'=b'_S_I2*kWS;#FI"D=)_a#sMU(8BIMc@*1B0N>m,'O("a22gGkd0I]`rk.1NM]2(d7U2%2%S7hK;NA"mEJY%(@;\Xf2Y+8W;>`mU=m@+Y9:mJgoHA^^rQf!+gTe'KhoD?%"Y^dEReN1"C@Em#MHIrU9C,R.-/\=GCO:_X)N=C:'3dm<!8`cnA1?0%Y]sNRDYR$Rp3\A`P?i@&>CG<?riajc9:NS?PVD1.ds7NI'lYnHkW^s"LQ;1e6_Lkj7T:R3d=OUY0NuCWc0Ip];2hc6$-p$Da<fqn%ZAS'@q!'Wr3lcaeh]CHu#;M#MF0Z]FKtJ7cYl`hIiD.Qa!8Nn"0Zfc]M-S>*:hT=beM+X'qqNo\D>7X[oh(Y922f!=Ls@i`I9X_I%+PCf<6o=;d9_Y[bFZ&hOp*]iJo,*\.E*HREnO@DNh=DD?q1@#4ZLAb^NMUl2YiTcVJk8!kmQb2Z!h:'&pau3PmldLe:8p8+F?/["%@GG'4T8YN+SN!CPj9dVmi7(YB^o?>WP:&O5Mh9'eN+KDWLeO$2=#i#cGVE#WVkO\2fp@&TGHfYqoVb#b.dJ7JD_[8dnr&1>_!S]c%8r`N3f?P]a)ArY#?L$p(T5VTn2FY3S3$rE]VNC(\E-4PnYoYo`0U<bBq7nbr$n5g-EtgQF%nb5WYP,*75<4^jqNUk=]&l?rrkUJT%7gtf!Zq-Fp\ToB7AXb5jm$=LA0]e^2$^N"b@qo6R'=0cB#m::*LYV/o-YdhoL[\,uUnBoP@N28TM0#B=TO7$>4F&^]]$K3e'Y6H=%;kB"L\sBm.ir%#)+_18K4i_,)<leatGX"%\:252pn*s"bMcc3d?9"gu$INJ6d3LL')lZQgHs13$f[aR+KdadbiZJ'Z%h=5g/qlpp%WdG,j@.3HrhOf9F91F%UJ5-_,SVO8T%;U@(@=u)UB#Fhf&sJ>:1;O?/;ZUT=(#A@F7htZCX(/-!LK$D\hHoV,0<!$%S]%I;IE4`5%WDa5q"EgUD9gu(=V-@Rl@>X-bQDY0p=A7<0J9*?p%jmH3EU.$Y>qJugZj<"ug)n"`!T]$Xmi+SLkNh,LHi(37("DkTQ&a0dSOW2=%R+TCR#(8>e'^&Lsh;`S1lEE;Yd_lKhX$Ve8.F_B*?a+J;d4nYc<I\^sCNMqm@?7R85j@(KpS6]F$p$E'OIHj)l3kII%K?*FZ=3:a%]JFi:dFN3$Dd(:3!GutLp%onR]l.\WAkJI>a@oaK"4r?0Gp/k#XE[(+3A-fW&C=mSXS!frAV0_'9CY\_l6T1oY$l$.%:MSu6mgpU%R*%5hHiEEj<=Z2:IG#-jnY$i8dTs<lqmImj8QTC]PjZtOrFVfpj"t4#@D5DBm5<OBb;<oH2k\#*,oQN'9Q"JX-n@d/XU`9!'k`@9%^P^cfQj6l0ctqB;d8prl<ReKPE6](8Yb5N^#WujJMMs/?D%\prlT+'kiq/W(eI],Le^3r86Fb*)e.`Q>0s39/[$"\N&ZbV=.*'<O%-#1k_K]Cc]h^+He#&941:"7:"4\c?rZQ!VE?(IJ_^2*_hSGgGN:s4eS9BnhkKK"i%>b"8WQIV1Ud"Nm)8:e[H)pNE%A*l/r!d*,.%.[mk@.5bZJ](b#=dG%'RWIEVs>GAUm!IrcHNDuQF)`_f,!5`?7KjRJH5)&#ugrMc.i%@8JY*kPUT#N\ahLa%?1r4,G,:57;Hu!Ea%eE3%*YrC+;4\u:Xe/6bO2@DEP['#XP)iU"-Lp>88rh3gS#Je[W+Q[Z!@>%nDB`<aKpt<pE7&Aeb6'7]?_1^8H++d)$ADE[uDN!i2%<<Qdt%`KV`!&&nOn<9h!?IoM>T_cl%4UcuK.KD5$CgbW1K['[i$e0r!V:qot"G`(,JcZAYTq6R0Xl*<k6tP@<P^2Frf,2%R%F,)s%3Wn%V:pAP!)pJeSNC2c-8#"LR3kD]_e_V59g!*87rm\gMM6/q.mQ0Oo*[cW/E_<V@L")TOMci]i-rVN+@*3A)MLKFiG>#)ahQ!4M%)2K>X*ZZ!SNX",%][NUXW[-LjX11!f+(0'o#.>4qCWV\Pa@?-.bo<!C\J`s0$@:cBQSk^F8C@35KC;,&BU/75/\jTD5^>V:82F41%[q8^V(nRG+Tj2R?kb_k1i9O%-?_6GjFW<m<'3HP&p[9$t6`9k;6'.th*OR?8K0[Fmf$Q007&K*gFbh_GHu:i4Wrpgj8<XK^)&@Bq%eUWWOJ6`$>T"pg]\;p40S/=hr&kcOYkmZ;3[hLTpZ-;SOAgnArj"1Pp=oDPggBs?&IiXcUJR$`6+UHLEYK9;:c=RClmO[m4XGR#Z%bB%Y0(i-R4@+2FXREH4-5?n>NWt7MaZ91NOelbVccCp;@\qB9/kK.WCEu@W(hgm'MUH$l*TXsgL.B_@D(^3&)?kqp9j0d2rr*^lK%glZf]1(q9Q*,PpYC%RmW@./ZTK>lg+"GoLaM8L2$ZY/K#34-]dp2+tuS%u,H-)hmggVT3GlmR-GR-"[+#fV#=3X;,La@ish0c'<u%dMX([m*7G"!$<n\q4ff55eY]*G2:llS`TL;B4EcScuGi<2;:LiroEJUjuO/kBG#X0(r^7=.$IYog1oP0('5)4dD]]q(@+kFr@\AV%:.knDL*/j#m]3&Q$\$C/E&-]d"u^fc;dEg!ihDt*p1m8EN5g^sld>6t_)XYAJW5E/8,?rr7L%.=$iT8q0GQo]:kL^.)\ohMg^J)Z%)Vqs6>(NkY#Zhdd+5L[`_994Z1eh$:_<>]J$bQHdkKqK`rh3gS#=A:Zp]!Cr6E+H<lS2R].o<U$p[\]e<h6-W?kF,%0a-paJeIBB%@%D7uhnYp2:P(b3G_NL)-,/[X8Fd`g_PS#]3S)oPl!5:qjD[PYK1nPB#i<29HGXI1At&P#a(?JfgXZ??gEht'9qF>L*qC,;Kj0cn%<`8$_o@'d0L"uXc4,)VhTDm1:nFut\0E:N;YQ+/hs6[T#Q[f#%e,Q_CrghU^%Bb3\ks,+7s74M9oO%X%:]KiIrl;d'IJs-!J,4*`%nm?M'^]3pjmhbu,qu?D.:g]#N?-M,n#t_Z4c((dZ23\NU)KM=?^mg/(c[]282>WB.#8MB6Ib@Q4:!N%_(QaO;Y<aX#i4a]F+TR7t%V8Hu24/Efs6NF8jVq.u0Pf9js^!CS"HtRF)jHZ?iAf,#RJM"6dR=<B$i"U3<4HtJZ>sj3c$tiOL<0/isQlf;0M;=4E]+5_7g)]P`%-iq\0OTR8(VMT!I`J=GciV*./i4c`iU)n:2X\>a'cG/ZrATWK#%K(XI='>W_4JIsmeogHV!=g-D<%n1@'\DqFY:a1W7L6gn;I3<(%Er$\1<0>(ti[nc]!E.2hb1]*>\u9&]qLoPDcA+H9kGPN56X3Sb4B>PM+0iB+RRhdH,'K>j9OOL#>ZT39IocgP'pS\"2Z$Q*kh3B]%j0#^1&P>P#OgL'l!4tNPWlK3NV_/YR.u&#kV@'-\'^=1[RUWH5e?2'@UZ(-MWf0c3?]:f,hcFc9n^;?'Y!p=W[:=J8a7:iPT,ol^%+3)Utho<qP)`s,'DVr,+UbT3KB_!G;!=C_&$+r^VO-Q6^S^s0^./u%+<_Irp*:%$U_H8bhFG?dJG>f'QHj6+_@H&[Fh&#m^>&m_p%]cqphb0;0K/7[ar&3`NsVg9![\I?1jP:Ksr*A_JA*0)3e#/0J*HB0$IYbL"/%inZGj&,O&VNdp9h86^Da-N\ckpMl`MR&RZ0G8Md%6u03\6]Yia74BtZ$hk9CZ]QQ#8#5.WFXeoQj2L*?Lp&XR7l<G(Z?-^KPa(iVXqmcRFb"26mu9HfW9]C%Q=pgs>/ctK9uS+0/lSo]%;9\MIkGL1X[(;.1KUA*2-_03*E!sJs$;e2L1CUP0C@tH;R8J:q;::i(EB+e)J9,_7gSLWAbeCP==u@s7U\3_1f=8T$nc.s<fLM0&%%u5Xg"C[6\%nK<UC3hB1+'\eC\S#c**>3o7W;6T;i)<YK6[(Zm=l&V#<i38p9g,?9JlbNd12-T8g!?Y6,t!A$m8556YLQH@=*En[%f3$GO<=3a\$)o^Cl+_4<-NABh9`J3ErqYfYV#7Lcr1Q1-@6^J.?:?o+f-=@c-QGutd<mKX"mT`ZM]!^Ok(N'%?C[`d:8Zu1Xb.[m%=;gL7U+;86@#D0,-H[@S-23X,`USt7$QhsK'H_(#$96P\q)#DKPWs#KU^(`<)flu^$OJ0i0?1+83I:1&cAY8^YlmV??$b#_X!O+d%SLjn3Xsq`3e(@rOc]@mpQ%F6!G]%`QG;g?o6DJPNON9HT+I6P-Z^4SJiZlYV($4mH?,nbc1o$rM%+W!iHTPqeIc_D6!&ZSDDcI%:%G%Of85hH;PJ3hi,/&4H_U[L%Z9I;^P6_V6/F#\BGW4ha/eDrY>RfZ>3P7cDmi?c,V%J=C?X[)j/23<F>q@@WVg_^>MBF@#0)n]Ks%+C%ej4>JBk&hdK$1cuC2HmYZsVCMdt'p*0m2TOm$Z`SfWB8KmiXQ=Xi&=3L9Maos^cYuJn2@_YG>g5m]P,/2H87kWV)r&c<JYV\i%,VEtCjh%]%D7#ns5%6NelsLNej%:cIg<BmM^U(G#XBE_A-J/'-4Z,7Mj6HQ5jir9ZmsjVK^CPXP*KljdOfksQX)ZuS:[o<=b)W_j%5Fn0$nr,<I"/%Q#K'<*)&_#[HKuX<"/pn99X=0_O!(7On]g\Qha@V:gehb(ZH*=?dejN:OpA-aJT>,<C?Hf6)N+peP:`ErEE2!Z'%MNQ,SXrlg&bKlgHO2nsVOi_dT'cLN>"VgA5Q*QlV:?Q5"?1D)L965ZZ<a`>':J%h-aI%BY23bUI.H')=c<dBMLQ:d<0n1(?>/8Mp%N06<j`P4=EE/?QU.;j:jMr1;VAa-@rn/&HR:,T()FrP.M/-@h:WmS*to9Ms<"QkASF6c[-91=t!K+R!OA97KeB,M>H?HP@M0!B&b%Sc_.9'N\.WNQItPHGG?=H5%Ge,2+)phIZ8$=Zn\.jo&2[CU/R-G?2-(nIJ*W&k2",#M*r<?]9]2S+ips+rWHX=]SkiB]EpH@^`Rf%I);->4AiL7#>tJJ*dF(IAT@;n5p1:DGI)N',QFZ=jUO7//F-W"[:7/(<XoIbS?#]RnnH<[*1H!sWt<&b9=+O5]4j[LEB(sW8_qHN%,5dqDmb:MhP85)SA=Th>V]^qils\W#pLdV2cWlX\hs"Nm^:i5S4!h(K?<V2/WPnnP(:1qmKm2X'Sg=\SYu#9ONY>l.-BoF.gk<.D%Q2nKjAQed]@[e%.D$ecdO)h?=,u(8LJ6]Cc&DN-\NgCib3)#qK.jdUbI;<6O99cSh8i_;:;'-#!cQ25R89ds21HN/P+dJfm@?`3G%=d^!$PpI>QI)E>peh4tm$ks"`^J:\l=<sbaCf%!"2r*7B?kg#>.RJ4e+?D!92]dsF]ZcP#rBOG$KF`W(GeK2qd_s^BAnR<)V#i#7%Qn18:b*Hf!/U87"PUr6/q+IK95kG-jH((e?9\q,W`6t,G$KPkX27`17?0B_#EBlQDpP3Y^H3MhX_n`kkGC3__35E+/-a?'bBb>nB%o5C_:eJ7%DH&2e?P-]h!X/!G<h\:&T.Bs1Qh]ta#(Lo!KlG1q/c.WGWm8s5O6u#$-h3G9YK[-2aMOZVfqLB-qe=:)K<GBK(P-K%-%Cm$P=.S25W(2nr#P]!R#Ob^5R"?Zfi.m0BY"N(>>PtFSGGld50M5HIT3&LpT1NF0Mn/(9*JiL4Nk@>9!2lL)3Ilp!A(M)>gV])jG%".9W[(#Ec:2Zr(g@%Fnu98*"=:)ha_9-c8PD`JafluX,oM[`EUYlSF7E&W+qQm<0PRtgs4#o;RR^F"#/YjVX:;P+#opVB7[Pl8O2%#p4>:VRAsHAlK0<`>+tKGPK_XCm+2?#fr9+9\k5)nQ'su"d,nQaYn`sUDC9p`e5j/WY_-&4q/pHamDR[SP6lS+CtdC(WZ`b_Fg2l%HQNmJ5j;-S66*:fs5.Y/'!0liK08uu;Ram\Pt\<>\;hK0?b)2%n]c;eo'`]r^LUlg*8OgNk\?<YO/!+NK1/9?^$uk7;]s:tRu*r8%ZKR,jD*]1$cT4-f-u=-o>m4AKPVo]C>u>m>r7:;0FKmh#BVJk0c9eK0>`K7<L0\p<laf'XPiRu(%M*ILOM!t%MkOrA2iXb)Psj6^%"L6-M/b&$lM8T^D+>T`q*Fh>^/?RU?_&.%1%OX=u_-a,qEt,4aE6U+'7f_Q]jArMbSS/1LDiRi`9VGsiTjXB&!;n'Uk*UEKJ$%k#%U1-DM$Ep5e5EQ?Y4'U'M=06-7%@r2)pq(&KP:Eb>7Q"+fLSA6>PX+3&;"S4S-XNm5DdM?[%M6e48*Iq1HE;$!bl6.rDnA*/2^ruZ%27U*F*A0A(HtM-r/72X"(CG*[dLAsL,4`/OQCeL'7%'rq)<0km"o".g*KrcTpa)^r)c,JGU,"HT$BP/Vr1ba$V,Mu4%,k.EE'0":%4@jju"(E3T37"c?a\`0cb%90i$p?CKU*O@.`D*U`]63FOjLj-XTDnt^p[cGfB=+bn-qlgR<HP.@#N7a@0#uh5)gCGJM\8Ve*T;6J%Ei<\GY5>Y<Ld*Hk-F[-N+Y55_%EQL`+#UG\nK#;0L!c7n0h.R89*J+i+DYa]e5i?66/Bo8:/S_nUrkj,HHX\ZL%FiS+GnXgQ*5Nj%5f:oJZaP$=b$d/YR)kcl2F`dNE=.'JJtN)9\):mI\GA,GCT*i2;<Pu+=Qa@Jqp^Djc%o)BVms(tHEFo)j_h1Y/6.BQ,-f%[=O6=M%aVi8?UueM.>9B`H1qi7P<.1dFN+:VeI7h&$]LD3;/]@^0E.8s6/CP"Q#^1=UR+J%!.8UmsU:<jbcnIop&-aWrMc7F=W8QZ8qM]$$%(O$</ZCr1hCRX#4\f?"DI9r<85hB.j:LmR(M<IB98o*pBF0ZAuaQD94M"M"j9-rQH`/K,p[56Fs')Ul"4o]V*aA5&Ql_o)Hi6^+:%<$]amY^_rL-_b8FGm2ISE=f]=0-Uu5d+Uc,;!=71Aj'FVjYG-f,E8_7')fYZ!TI(!@(8mV^,<35?Fn][UjVRd/`hD`FfsIeCusMB%QSp8NT(2SblLsJ#O"CWfAHH/=I:7+T6<B#Nj4ToUkE\RmTqa?:d^Uffo'(-YH*t)eeX\Sd,2M.@$&>BP#<kIQCqMRo^84E:.2$il%BXD^/\Nr$I3?:)=#LtmdS`!u>B@+uP$t:/2(I/FQ6:Q<FSU*80SeWDif4M!/'mhef]&W-+@J1ZrCqYe<!X(<LMVPQ6<b1j(<M?nR%lg-I&9q-PY1ZhKV.lZ<qh2\O06.gd:;<&k/8"#%&HDZCkN`9eQ!jXHr9qPSBA0FoJ,aVki;@!rD"#=!s*#gH<fX.Pcl89L%aKNX%%I1FXo??4QjP"!S'Da"]#EOAq;o7[2clQAVUg;YF`mtb?\\dgb`W]E5uV*?sU?[aTCLApu'Hf2nF"<"sKl`M@U7FYZ0R1<27:ZTSZ%&@DY_4o=eLTEB@gk`F#pD!>=AR5/\fY("e_IbpEq.[R@,]C8!;JNiP#8]9'/a[p#cH2SQDiVZn]M0sbE_DE#-gu]=,IT?ftC;rub%e3f!'VGN1=b3AGO8h-;@eHcWK`9ou`C<*eNDJQ(=0tb*VNa"pa\u+-8@*4S\A#ND9U[1ObY^=%!iP;T?28EcCNO4b0M_<PmHdn('%6ZTEMmq##9old*(2hU%0dTOZsd%6;iT!a^C0]4IgAfbgKrmIL^^"PiFEPGLFe)P5=mE42i>Ig/2I+<atllDr-NO/+dLZ:^Wo@La-%&EiYYXn]"epm0[BQaSreZVO#l%&M";U@(A=i,.:Z:sj%HLePB&<l9GcpEZ\Co7=I)s8)Yh:Tcl!0UVSL4%["uje*k#3@0Cm7Eflq%7a11[Uall4+U;tKZ?RQ02\dt8rWMmu/((:8'GIV7')hrQs*_XUWb8d!MXD"W'9K!!Tu-hD$8aPu(H.o8qa=&UD1iQsAn?pG&:6t%%Q?i<Of0M)tUS=h[:.,+dRC^.4knGkRIHEQubEI*X=cgaM5r(@SUMNV'-Y_6cYtbMf<E[!*j@+j\&K*WJj`r:P5pRD%;%n3smi`tZ%(d9>*6@lM6HESG-;]J@%F&_r\JbhLT/MO+o6%(Pg;&MRlm<?E7_-!_"]$=h"17b8YPMH>b\VEj:a%8WPUfr.-HZ9IUN-Rg8E4kmV%OH0.Z0q?4NXA'I_J[%\E4k.)XJ/\40ZW6'N1\d_IW/#$bE]#(JIR$<ehpOpieJ$3j6.N0=KKq>1G7nB<?U^$^03J@I"oD+-:a`Ml%,U-NoQWGhd.9n(l,qN8PDE%ma2(,0^-RfVq%T;nh\D(cCCgCs&4EOnUVq#"21BsgqC?3X3Ukp^Wk/Gttrn?$"JAM38V77pLglEF5%+oqu&gEFbb@@I[lV6N4b,?p4M@"6ddWH'_eXs[O#O%4u2RV9]!>ZbU>maErT0$,F[nQ[0-G4LJXdA@DPRGfNI7E*G&QAPQWAW3J7%kUA(%8<`![?j]:o*$'1b3n8OcV9<RRVLU'RXRK\%gZSEbDGim:'o59@3'.>:c-Vi3p`E!1gJkF]9C#IW*&A:Kd$!-ANnOXGKWcrD%%r:jWMLMi$5I3`D]f`JsHjEXfW0BkAFGV7)@#<9j[uua$'[8X,PrOpp8e3XV;@f3a#S=WOf0T+=&r(&?@&Z9<$!RF^>Rm-ldPDc#%!9nt#>ssZ`VuAMS`EWI?MJhLoOFR3@C[L0?I/CB/3;9<Xo">02S&P,U2G"9oLbQSiVbDq,5IYH8IXgJ9E1WaOeLNjBkH@+Onj)RS%0u9^4)IPGW0TJOHMHP?rm7rWQ$RNJKOF=_I/2$-@Gq.@c2aDnO*0l6VCl:TV'W7bR]+Z_U:M#?h*C;8;/dq]QM6h,i!FuDK^9<g6%s'l1U5>G:lES4S2Ur,pQ>SdE];/bb?s-\_r2YQZh$4JDCR@GlNOf^P]=3FWRA0\Rg(ud$?&n!K&*q8f.;/+Dq\[;,p>ZD6:^:=s$%-YcdhT7ha9lBY)XEu\4n3DF.3IEC?>.U83Iq<VO(02c:U?'eF<-Kq18Z'$$M>$)d1?37=!_+1]FlUp'uc$Jl[JusI`4^)!??PQ_O%$pfprYW.4d;_QWZWoOCa=pB7R@qf+o0$P^fhsX7AoZhtN8!n8Noh`WJ#f818@cMi$L3uCO>]'@a^qP+/Qi*ug4pJ\RM725Bc1@CO%9NblY<*\^p?0H/<J8.>hVT]%si__)(I0M%_l_4e;Mj>CIZlTSd-(B<(2Z;/D=M7:MT`Jo/0H\Cn83(;?SD'5<P!??Pm[K\`<Lg2e%q`0(8C-?Og<0G#7lM+enIO>^*Dq"a,:B+[hrXf02hfHjZ$Mb0]#%ChO$ni&BneoQPM+FdTRBr<ENYT>K;i4&l?jultXV6GYA17BG%=!RksDc])&STIrDinXDpFS7l?qYRV?C/,#c19rP9S6"iFU5E('cGZ4+A2>T>-kBej072j*Rp)HV:HduBF@`EAEZ9h*4t4p4WfEZ0%2CP-FXlNXC'<t$(1=*V5/*>c516"%LJ8[o5JX("BUe]Ug<=PTW$n&AuMf:Lc3JFFB?Ha%H5'N\/erBD0AT4m$ku4!^LGETe56"_5%_f!V&-mS.J2]s:^gB<ssMT/FtDV3F@;sag><k6k0J$ufTB=G33X7s]/"CWkO5)s1-GIZci%a89Ycm1E'Vl%F3'j*_;6!7ug%aFlu%l*7fXi6."cm4M"OeN-pg$WG7,,P<RPj,`6frB#-a(!R6U8YhW;Pp*dXi/::$TPTKNRXf!-DpI42_@Wd[m>Ksh8,(O':<09%Gk\oR%:/7M]7tZ/UnK5ZY!_/?l'_n`HQ,cun\R:tPD6)dL<898dO_4QI'eqXIC0qhH9u*$Col]EC;pJ,_1.d4o=J$^@oYg?h?)m:rdi`/.%$B;p7)R#N/Eu-;WU/A$kqhk0)inH7C*a?30Aib&[nII0!XnSc98L-JO^=EbnhOh>R(/fs2MNW\GC7[?,qHS.,G?.UK][,>6hBuHt%_ch"OjH1BaAl%FM?1c/.?X%IHVuqnMe?qtA&XNC:=lcP9!VsB/VL8c0m=@';!brQuIpDX28_KiCS+oX?B%U/LghX9g5CS^^b`f4s%_LOt!W@c+5<ft>H/CQeA0GVo"NQcb0_C-*dep=sF6*MkR@uKXgkPm1sjg+2)3r$TXE83Q8:fTF+A,%?:l$;0j_"r;0(aQn-7']8I%eGeTo'sA1lX<OYA"FjnFeSC7e^^Lb$o#fKWik`(]8.B.[`!D+oUdg7!"+8ouQ'Vp$@f0f'I3f/&$=AAN%p)oc7dI(mmJVB;W4K=7%3Eu=4e#tJ(,iZhuWV]9I./H41(ZVAZ$<H/VV=*da30t55"-*d$e1>KO21SAcUR+Y^G'#7uP0HI<HF,nk4AuRD;@[VN@;;%A:qRAK%"]QU`.=q(fDMlhs8V*BgZFMF[.`u4BVmu,=h\m^11<'&Y]Z[;\8/u^ofT@g5-Y`%*U%Isi7\GSn_$*,?2AIIZjJme?RY$VG3AHFo%2$M_?VYU0*gX[P-@RC(pESt#=nu`eXmHni@mB:68Gr%B<#D#O`#%C?:56\6kr7F17j/<0:^X6s9P-DgMZU:.NW-KJ;Q0i%BHp%>n%DR!ZQdcYC4OiR^`:P:6n0K%o"b=#:QW981Q3NUmHd0jNMjmp,KSYo;j?MVQnI"/_t\/3WkEZ'+,/KU7CbGFB2M7Qg1Xqs2@\5M*S%idCusebfPElVH5k8T=/?eG$Z1B<k`G(R"r8&1uZ17g@`>oq6[L]^JX_KD]1.HtCI]%/[&`WrJ83[%:g^TGpG#2)%oo-nLWbc5BO5%&kUYukLN[O<]R$4Iqam9cnC')'pc^B2*Dt3<9lYeJIIYM[fi=:^o/TDg=&P@ker^!J2'=lB3P[$j^B:]/cLp,!g$>+.FA=!lhL^q%FcD?;^(kn"9`&eqVdY!.dXdti!&kL0F0PQOA#lT"-\*\t9n?@.B<3nK.MKe<C&tl.F#@(5K;O`J11P3:m'D!,[4Id-Hl1O;WN4j2%4:U?$eC)mSp)!2p$A(`Gd;6#.0ga4HRQ,QVd'$$Aagdtu-V<qG@&\"b60R(I*igmp(3b5jirBKO_Nm0cLjrb(Z*+-<JkWb0:m#(%%EG.e&`%gDGJ+p[\h^?L6W<@AK]:*>8fpk1PG<M8b02G27NNiVBPp"*r2'kat"W[!,7epBO;(S8bnJ$Q0Y1*+A!ZmanJX;Y>J^)^[%]c^X>Q;PrU``&mY<@]S']MNB@h2)mLR.C*T?D<tOoh!<(XkcB:QApiFi!=lfI/<6qm@sHS\,A^h1J_0Nl:T2'rMhc@))b]3+RO9T%<%a=P$,mHRn\K6iZ<Tu'i70/0*X*,H6'On[73V\I.T44MaDra+R_"2WRua,TO[>u^C"U9I,P_nNG)O9&$ACF&Xq@Z6-UU_!,3^>4%p)CjFamE1]+np]31ADQ4;!CIUZqR?a>`ehXbgZEp.+Y,bIaJ@n.GTfHFK%"'b3$<s+tZgKflMc8p#*Fcm0I;[WHC@e,;5tPKfe8\%/nVj:kkt!n&`!sB^5]o=ngn>YG=Q<XkB5n@YaT:&/7@AbN]FF/.]hb*/s3F_bFimJMen&t5J9;u099A1T8<]SnPl5j1<!B59QuCc%HtSufTi?H2'bNUS(24`ii?U\Z)C?6\pEq>*SF0O:]P>BP[9fNU_Dbb3B9kn/(="jM\ohZAAkp:4WB=apQc6oVY<4V`\s?lWUeE+U%=@/t`X4a<I^#sNLF4SGP"$\^3EaOa4.\4D53f7Kg%<t?[A;u<pWlM]pI4^Y#$8H(2`pi6#`fEu<Xl"?:?0$jsHt4A;pZW(G,oJZu%===9L1&84Fh1p+/7F(?V2u%]e6bLW#?DJi2-8+2dC3MA3NHh6H-r>d61+c85gD]E4fa"CU5'):NN!@`;a?MIOct-i.CQ#5[qF<f2%I1d;7O]TlP4>9%JV*3o2f5`m<=eAo9WJIi#S&BmI3l^Z$i_0n?bq+I*knfkdD;YCb.9)5PrSf0mn^f-B"P+XA\QD,Q(Q@9I0Xesd%c,49234RdK.dY]=\Ff6l+@WoGNrm]]\A]"fVg4.pVi9M#8&,!_*Sl$H7_\1qYK9:JkS-!GnRBi6$/5#[H9M<.H@#PMpOl+.p0pEB%%tUuEN,:6rQCt:qGAn%W3OoXTs![2>](pC]"6r1,]$+RRQm3?0MO6Sp.b[6FQ:f2t:gj`"<MVQ$]]h3Y?6?c:G`n[Fa#p/!S+TtA%aVGXZH^+/Fgh$bci!7\0:i_YtkaP-\8nI;Y3+#`e*&W#aphD,DqD&orXm7TM^Em3ZPuF^QQ:'0L85egO-R`<K;s]*=aXu<dFR*Fc%]i\CXJ[8E)#AtgY@G5q15=pYb[A+L/TJW4R5*PXb^r1bT#$%NKP*Og"jKdO&Q.-#7GsJ;WRqZh!rtB$_QX+>XEj6b-VQEXE7j$$`%pZ>bgR-sK#UWJBpURA`No>XmA1T+3p_$X6liK%Y]h+g/&Lp^lb9TlNg_`L"CTbf2oag>E>5dWQo;2K@9P>q.(i.oeJGM/_E'95`!%Dq$0B"t+M]9JqIQeFZEUY;rn#Z7S6s.Bc'5I9Bg.Gf'4CY6H_i*kG(*4$a8964nmUV42)\@V3n(m;J=):S\#nocq45Et"<GT%_(1%;^c/*M)?Cnd\b,s)DZJ7HV6bdE0?58/GVi=M$K*BEge@S/!5q.8g@*[A;r[Mnhn9a/KWUN$-aA,#k?8a#p\f+]NbmR`8>slC2'Mr%CnDe`1^>oOc5Q$q7>T/r%@NXgFGea:U@;caYGT]5OD*U[UA&TDj\!_](rS,@4rtWI$3<PMgEV_4k6Ct50gA6,r\hI]WL0T%;pStm%0eG0oEL?IW/glj0A)CZP)o75iEl??L`hHR_1*AX[558kiNkoV1=G^[Z*`5J@:/ODDeZIQ<+hC[[;s=Xq.%':qj#V+DTHC&U?.g2N%M1K:tIR2i0O3)Oh0AK7a_#lq[?o#t4*I#H#TUR'jRb&DknuXqR>+;R^m+JkZr(:f-mB+F#?WbcjnI+eYr&C,(>CkR>Cg2:&h]f!0%X'1rk!gn_UgJ]:sSYNXbLMc-_=5OOFT/HDN6"C07TEBdkZ6_t?fDo"_JuEmZA\2*(!L]ZB;'/7_\'<*drQs5IFcL"%N8k`qBPj6\%^G$Bq!3T16\1La!YpjNGHoTS4BZ/#585(15/kbNZ1q#,)2gqB4>:cE;>)h^pgM/G68P>*<V`,(^hRA5a-=!'kg`3REL*m3mg`D7%%A;c!"Ph$uqU];f,F`h/1M*-XqBl+(S//Z1MUeNEs]Ne.bLc[o`?ug3U[Cj$_:Y-8mFgNOt0j;V$KWELYG2lMCHFLg,7SgoC!hYj]%q'hMfLPZAt&m&p!R^WJgok?+9%qj)[UZd1!I@\#%;D<rWJ8/%^'=^t@Xo1_D2DUk0B:@AbkjHjfG!R>Hc?6`8aFftMZ/qT1e^,;S%GIXaRc2r@P!n]aF4?W;Gmrnh$]b%JN`=_Jr)gbjd7SFRk=_CI+9VCE#X^9$!=]K;NUWkeX=:-U&,d5Bm`C4i]'4ds8UA2sZRrl_b%n]<POV$-Vu?3Zh7H^Ikp$e1[b![U4:I9+#B\](,Cg)U'=NcLs9+%B#WW1.?]g4VI:kQ\l!qe!EXcC_Of+8`'YQ%Bpg@BAj4,6ub>%aJLr-dO3X,g/+Y)qHt!E7>\%cGBOe/S1eVINfPRGp@Ti]i\gQJcl+BJG[7ohd*1-D=3bWNJ0#%I"(_tWQ"sJo=L,n6\?FZ>V]40a%E+k:6\FZh4MJSiU0Wb2lY;qh>eouer1?Pc7*9Ugi?^O%W6!`mHN&E&!d&,7uiXKC:7o,mR:B/Dr,U90!Yt6?B?$r3&LDBcR%YTG(%RZAfuJ^tFHnZrgcLICSGB^2m,Gpj#Q0T@g)<D#3mA7k@*_TWk7#'ncVk'.$i)d"R)NG0llDS\Hp4&*kL;.hcOa!lbm-f>f^['k5c%NkP:"410m*Km2q89YPL-Tfk=1bKltGV48t.TIGWOo.>p3SW&qfEV@\BJsC4XiFJ&_4@g<Y1G7E-Y9R-9e;F(S`<<Z\pcue$9<`\/%]Vm*Hop6CQJ6c,g[ahbMKXur>bfZWNY]r*k.B%Pk7)r;\\E"MQ,\<ZRCVUBiKH^t+1MU9JrcS"e5/J#eAQ">"]\MX1R5'UC;j=AW%-X;7<h/&,(*7;qpG%;^4q4VZo]B,rrh?qZ7TGM=FQ*aFN.R"1@!Rlj=0uHYAg)@fNKA^=/]_jP)$ttPX:>u!h"4M2P"@FB3RlE4N%),;$FW*G8oA:hF_ESdEe.o+VsmINT?^Ja1[64EtE"bK^=AQ^>p0bd$5`G[V&:$'<C.!OafkcGE%c@YMA3!W][92soSVObZs576Un%R:PlK"OeS1,;PP+JR*YPQ#0YOp-$[D[MEGD=ZJOupJg.mEm(ds,g%Fq8*CW;OEhaNeOWHR250+tg$,ri)s,VMe_%&R$H,BW8.W7R%X-6'!B'"YY*a)D6<LkBNe3C!,b@VO34uqN"%5O\i$,efU`Z_u1[5WV_QHAL2_Y_Ieg^bG26'9UOAo=r/,$++O,rg7M^@[un.6+J?%J-+KiVStTWkPK9!PNS?kUW+Q%JR$7(aVuZJ(60X6(+QN*o#cCXB-12PNSRjRmF$)0^/</`]?+`KYm\5PfN308<5$o+'%D#Jd2>T.%bZShE7YT6Q/SO$^nD.J%[Of?\`Zu=8l$&oIqk?-S,p0m4g*^iEk)tDFSWW$RRVG5AHh:J6nP68p(L.O%fL&$"+s`ABp0tuc=.ojl%2<:)r4f]HQjJuE3!g>).1%cM\l`;k]%!0?L7an_*n_'/%;i%KpX^8aF%b\E8;%5$9GN[d9po1#@+Uakg&[u-kD]#h(hkj8P$_siu%VPA69gRY1_A6_L0,g.?glc_SMlAjXSAMYl<-<UuLdtTW7pi.Ni$:[KjV*qgeq_-3d.X&hs0H'p4FeJh\s$#c9&:*:tbD>Uds#otA%<kFq]=nY94R*),(^Ggl3aLr1>$@^3`(.SHi[d?lYbBdhE(,,W))##iNfncWg86=dNag=H21t%ihatbcN-/pMfb^7"RpHf(^\cRnT%i9CS1%tMH,ed9NFSLO-rb\(ZH1//gu45?R_f=$>G=)k=,<-3"P9t^;I6:Q`8XTO^f2"uGYH9''H=sUgaqu'_NmY()UI^P#,E7S(!%7Kr;DeqhYRBq#Pg*6W(`>Xcm`b`l5X/AjSRqa7RbgjS6<iVrOmJP^UeG(da(T98F=\N9$`@VmP*J\7HS?tRLrDSLCJ0%U<aTTod+%XBVdn1=[FW0jEika9[,&-4ARC>K[\s\N+uJbkbujBBDY8A/,?N_n9e5fVDtoNi$Lo9Ln$m8h[ajGpuDm,3][n7mDIef;5[#&Re,]%o(\EUYEdKnRL8jB2LnAE^"[#n!m,/UqUVPd/E`#VIZ"K+UU1W/D+:.;=\8^2LK>KOTcW#EUUrmI(W-\fU]<cq"^\FIfm./6iRTm5%WG<#LpgQH4j&IpCAe:0Yf-ni@plU'1p%BQ]d[qgbs6\okO19hO^Yo\%"PggL]R.8K)H`6("1m=uqKS%R9^AM(Q<EHNjF6JPe4-u'%7s+l.X-c;=r<OfReOUo1dZVR0>W]DpM\6AfO:<qs]H:]5$T7"cC)G)O-.i>IW*X?RQdtCcG5e[1BD/`/?40ng;?QZX1p#9AFb**F%@l6AN0MU:^$[qJOp+B@c^D0/IM>g9VMS<\Qn]e@?(PN:DIk,()P6r2cK%9#P5^H_0n-%tY8hDX;$d)f_En,I==LBPfLYP)Q2W)dk%7/3=]TNJJUTcg06*fgPjl1;YRb#E6I#hXS&Tn(s+\^#>Ciugljn^/6\UsUhl_g\uu5kNfl"[kRrVdY'+?AeWt@,Y)Yn/T)cOWUb5%.)(IR1"1+ss5Y-=5$671&RL8jKC7&n$(8@8jk9KQ>0s*e\HXc0.?KeI7?XE36b$!]p0[2!+<&OKAAF#S7Z`L4B/rGp&s3Cs>&jb'%>+2sBhe#pD8H6h3]d:eMFY8@@EJYb^]B!0@Y-'.N1gX_&9.o`@bSM[Kl\Hqm8cc-XdG9i/hr6E?GH6ic?^/)N\1(]b<06T5N:T(@%olH=HkaJ,j15%E;22"l&NC:&B-,m/h@>*p_;0A:=e^8!.Li%-'\Z:`k(/>`A>:WXO6(^h:MMX,k6tBJAM>6-eD9c-2@Q>e*E_eZa%/RWSf7gCWOS3#gDemLcW7(:"T"S8qOG,PbQL71ZX/OmQr`BpA"eVJ!9dZPJ<8L>jAQ9Nuqeqfsoed_nZ9TjKk1oBKeX".%Dd),o;%,!ar&l6ok)M+>?:oMn/*.<I@So=9_C,QO?D;/2l>L[&/tQcSdI0e:F#7cPcY^t$]AoQ&j6&&[?R#:@TP,PMsXJo%nUf1(SSLrda`%I(2l'W9iB$LqKTYRo0BLU#27\=H?Z2:']IBDI&=eBl`9420tD5&Jf#HJ9eN$>Eue#5hFmRkU.$h6+KqY-BYXF@"(<aKrGo[-!Qj_%[RB6AW`ZSZOh_c.Ar@TUC"1i=V;C.h[YNRaL_m@lP<0Jg@<l[^f(4Z?XCM4Uf_8\B#=lS=d)A@mj<FkL-+-7.j:oa.es$#P2F;lK%0qN9t?2=8b5Gim%"RGI%rkZY*AgpELNHm_TcZn-`hu"*PRI;\K\:31rEO.&[;N)\.A`(DLReti^)u_i>Y^H:Chn:H9rDWRb^O8_H%rbig35Q/>mU9fobqA'4^Dg04\ij(4D3.d;X^?OKVr9[joIe1b3s)TWFnG=<9eh-c3/c00,I2$<o<jWIoT5Ukp?>s8KOil]qR3q=0%10FoW&9)2ZN!nPAbqS/GE2Q"[A"2#[P\]D8`Ki9f8HQ([WE_6Wct_9/eJNPpqhA*"_rMN&/,\h<bHCiU1Nh9GqccG%F+e^lanC&9%g=LHV;i=j=8(_Z0n^Ki?0WgON?_rMNqq%5H^iXp3f76O>VW?l%R3F84^9o@e0ht21EP.:3De_Q&4"%s%Mu;?j]cBT<]pQse'V4i(%7/Yi2(V(V3fugWMqrR#S=n\>IPhVY$c,de3W_9]&JP9_BL9l^5T?MjAg5HRd,#B<28ETH+W>K]Zb']E"X)0feCkgmBM!tn^UW"H.%q(V;Sg.D_jM#fr%,9-^h2+Jlc-IQZ!/cV8;p9#+;de64,:NGVrj2]`i<1+u<=@:`l234LcnGj2X"Qd'P@K74UZ=o^:l!olmp5Lg#%\83VmY/)2@jsL[m3cgO5jLRd^Ilgfkn/*B&_N2[sm$_,)FKQJ>/"ijh%qKgnM`S""oC92$5]Y#]d@N-7\JFH9QWU#:T'n9WNU334%^gkSd;P_NR>W4$W>6Y'Mbc``Yar=#W_/:;9N)''r=!:"=o#+91.l]*bFrk$dBu8TCR#!XlUd\L<'$JW&2FW8&J>Kf>*CD<je;$h'%\,&j-$MP#/TiWj:_9^c4'\s+7o!UR#\@:AK-rY);*]1&U2>@,_8AHabL&csOVoi#"R'7/Ks&:7Ka(EcKI<NM+@:T$YnU`J)&%h8Z%WD$/93P*VkQn1$>)I9D%@dKVV7L+(&Of%0GX_<V&D#3toJ\IQtj-^GA@>ks!`C<K)@''?bfkI?BqTtNm2og,g?L1Usml7crRiHjC%@RD4X0(q"'['eXl,K>-:VG&3IFpiV7\cUl^je8aLY%l$moNi@ZqsN=q&(rh!b3./&*ZUA(Ra,-t:3,R)o9Qm"+^oiD9_[QH8C;_V%"*T;b(1uacS:f=Oc7@Y)(3-52D#)GDs(ZTd?phJQ$3J%54*X+%,GrsS>/I[.)F4YIl1l`.7jA",1_`AJ&Zu+?$l:bK7[V%Gb9k>U%jjqBhS((+!X.qt@CHR264\t_Zac82?q\q_X$6U97)3Ie:*AAZQ51Zr7dLVNZ?8X9gL8V#8_aJg+heHBqfHU',q,?H!afiu21.$3$%C1rarT15<+*8[*b5rYOj>b.4Z0V-]\(XW.,PSW^[!TF4MCAR*FYhkc&H,:W7MA2gYE499(+/c$r1/=u7'IGi.:aCA\8(]5HdY:^E%5Sn(:A5nKh</]918#3@DR7gbhY-bb:Wo[J>U*9u2```XlNH3pJIrlb2W1LXB*g;LihiOn.,/7Q6_&0J@dg2I&cg,PNc_e\Lm-E-6%&ba38Y:VqoT:[%!kI^Im-Kfo<cA:=pcGdnudj+9So2SQ*q9#UBRih@V.UST>-Tjn2;cbGH3"Gmq'SXsL-<_Wg\]oN`[ZA'f+]IhY%`i9fHJO&hOQB[!TrP@>Y>-G&Dhbf%0g-0Z?FAIYCVlgHGWl=OP<F2f%I/Bn\1*=$`Gh=pL[r9$WXJfZXk2YU]pR@1e3j(L"HiD7,%a1XM@jC\9cdkr5`nS2`3l0NW]B'N7qLF[ZR/$gc:dTaadn_@Gk#`4/[l)J6Vc/jc^FS>)h(?=UY^:3hB(=FqCls&SE9lglbC`OL<%Q`;1_O(=Fh9^CoSDuQFS[`A=]d.l!cBLKZ3j^]#e7^M`>/Ld43#I16Vc`3AtdIcu'=5!faa4hob%<_Q5Rt4)oQ,4d_B#E4_Rl6]o%!Y/th,ge&DXCA@;cY5S6H<tF)29WjCHKqI+^AJYrZeZ:!MTO'8Ok#C6l#YZY&@49V;F6R\bZ$P7faS,3'.i]k2g3_.Yl8i1nB4bd%g9L!V;jtdpU\7fY?/6Eh(I.`W%j>P.+0baDL`&Lj/6.u/].1`AH#G3_Eh0^p5/XeE-)M4/%Xk@>k(bi,OdM;BNH:aV$=D1[BL4J&%\[qUWI?Ml#gD[>.$L#VrhYFV9e(WH5oGN%"[p1AVYd"F=IbA:Vl#VJo6<PSQ:VM4Y%=["9X*Iuk=AV9H>,\I\8fccKF[2%cGGq[B%@2,#Mp<AA^J(/gj/)'s(VQ%B?MWmHB@\5C)2S+5)!+r5/+eL&JZ5s-`<=!Na'udfj?(A&R_mW,9@&0jO.c2c_gOc-#MOHC`.7@OD%WkUK=6RB.'^lSlrA`jL/5uoJ?$!E,ZDl[,SR":P#p&Uq\#PT.2Ed5^694Bo:dN#MP^$ScQh43rFps?33iF)O%bPETorJ>DM0QH!K%<[SADUEB/dW-Re0Qshue4c*Esdds.]/7t%V+4b<2Hq_$<4fmUbnXCG<f8l(K`9%d)E@lsDAIHgJ=<XkTlM=B+%r*Gagt1(Ys7XLo%TW+H61V=q-XqMS(")lR*1,af#P`cANYUp!#H!Uei*i[n$T+E`d'(&f&6sDo^:6WtgqdnLRegZ_T[!27!Ka;e=WX#_Y5;!ruf.t[n%Vd[$4L5E3k0Ei?4qbo6@_rR'C?"V5D3ie+.LYuJ3pGNY`03<#['$7NLpAaID8mnM>(&N@LMC'Q;;&EluS2&E5Q(*IsMTZB]"^%b\%_O+P$CU!5o[P__]Mn7.DBXTVfknbjiDVtjI/@kO4[76]&-C5Lrr]]V(WaV>WXWKrtDH3fmQjh;;qiKA%I7kDYV*b.X4XL\tNP'jO%!9G-ak^(k>\k_.oYP!3g,-G7^<2?@FNR5Rh<5m8=c9B=JG/@5I>5Fp_IdU?F!hu(_]boI&[IT&,<oRg]K&3D:q2>JE*HB21c>IG%%I&o:S1kpAqK*biZA]4e4eY\&iQY0B\N$XWO!#jW9ir@P%.+8]&W@VW&mRm#J!b6cI@GgWdMHl,h;u-=A$j=Z^UVqT(')05r!NMlZ%\;pZ/8aJ$&C`gC!%V!E4Wp-2N2`mV:aBFMoSXY,13J?H/16WBkmae%6mb@S*TD[J!!6q\(]c.OT`ekM"NRK<)C5A,0l5Z,2STgjI%?Fb-",\U+o9jPK&]'Di],)+j+5]t>WfOX-H_o*iHZT"#=CQ^\4ZP?,'Jk-_'0#DD]mhBAee#7_5dFP3s1'4pMKXMCDRCp5TdRf[;%ac3,$MNWD?bERqjf*L4+DoS#^%,*,da68JN-@l6nHGU)#1a@'dW5H=@3MO!q>f=9sSR,(F'HF\u&L@YVe2EqV9ZsKGhV-sM:lB(a%h3Wp6hN,L4p2+T)p'kq1`al&mD(f?9UE<`c]pgo+RV_8q!uKUn0Li]+A=E;$Z-IEVBH%d\:0>["@Ng]\O6H"R9JNZ0dIf1#IlK-;%:g\2F;<?oMLH>Mlf1$@>WBG<lOiD!r:KEb?Fs#ke67'4e?ljp\^HS3Ig<K;PI1qqd;9=VmcE*N4_&f8p./#$siu&llMe?M3FG]1`%O]eH#MiP<ZO0M`t4s%dkY$RdOft$sicW=uQ_q^)+R<n=lC;jlakVP&mmEm>GW#<DUCC5"UP9$)fL@l/"AS$=!1ki]A^<qH(F^&+k%Bgj?NiA"p4:[6MRra+/b/lRRpcg*9%2'UABe"?FC_t6O4MfS7)`iXn-%#^LV>N_pKUgfSM9[=r.+-ZJcH.Sc89.AV$4$Bt6*t>%D%h8+22@JJ27h?M:"=NP".e`Elr)ZI`lK;^@>a=8tB(?s5a-krn[.jhSCMKJ;VC$d7*=gkK0Z`8JT)tD0bEEJ/XnJ&N>K`la^T+VBr%J-_Apn\fsWW%O\L[(:1=@md?,S"tHkXj3-%9RX0&Zf/"7R(XW7I]^Z5I!_e/ilofr]5?9i/(6:s(\tPaNt'5=prl&,KdEBSN8NAi%_DE^00+2$EilC8`nk+&-VlrnIN?1)$8VTG_Xr5'O9ip>tc>gu.SOghUf0&s7d)p!!7P3@_]:ZYJOh%.`3/mG![I6L*X6b3mWa'"=%6Z#tt;dIQL2t`gP3(tYh0_<]Z3](L2g?@.-R-5@O2e\?YZ)T2i[c-op653#rZ/9Kl6ErUr2D&hFf;Fh;Fb;sPCZZ\e:dTD&pkFd^%IZ:fV7,am8oiFDMkh6Zk5Q@IF,"H!4+,47#LFLkK83bt6b:+G,.[T![":l/=!JnMfc^M6%G2]u2O!#`#(5/bmh/Y9b+LJA_44dkX%IA*g9bh8Plgg7$AW4<jOW%6Y/W?W9?]YjO+lBS_TUeh$[V!9/P=`al9ru7$ZCrk[2!n"Y'+5o?=ETNOfgL#u,=S2JO&5q(u][-TS%/P]CEk@jF1`[?G2/`na"K&*r>&NDgYWD`p@bk]0.ahN(5CpC[ZUhG,*K2gO$_bFG&mpZ;sA;bhg/gST8#*'V2]=*+bT\C8qXmRG7%[57p1Grls@DmiA\fP=t+\_Z(4b2n8T7]Pc.MN4%BQ;J!s$^EctL&d8ZHqaK)SID7>jte]b5i/CX,17q@h+bfZ62NRL`$(G#^.V[+%,eK'@mL,sr:<k3/V/UKO`mlnJW(<,3W$4hLUE#6l`tD3Bas,1A2&(o`&qPUWQl=DJL&\pAY,8[g)[?9Crs)nY%'Yo)P4mND.8[fF%Hg%<(_JkLAJ<L[BdA$ZT4#>BDqqfN$[q,D[=!+5+;Uc7()T53e5gQoOiXkq]V\Q22SQF<cSknko+NCrQS)OJ2D5r=l*K-#=\3pI`%MIQ*mX<VL3#D9ZP*%JcmRaA%u"+7f4kd."?CLF5KP_kG5XB@+PO!i;]-&?E<RMH/3E(]\36a#1/)7VeUn#J,2N#hC7rYfrUSGn\.%..!OZ<Cu1g2V!PRn&_?/6hjh#8N`J1p-Tt&9?`-#:*\g?e<:A;SLN6_U9B*TLi2Aa<f[7AEMjKi1ddQk>K4q@?%EgTXMK[M2S4^W%M^.<U\EDE\L1kJ0,bnI^3W1SP4UZ2GY00eIn57h%HLb_gG%,b*ZNgO%T&S-"*+SPc99?$H1#g5=)J!ouXW-;ZAaE0-f"W74-KA4d%RQDNWo55+;*#FrGM_pBj)iUpGeSuqUr2P?0d]T,r1I8@dcsACq$Yd.lr)(qfAKn2o#`/2Vg9<"==K5KR]rcObNj6XY`W[hWAQ5=[%TJHrVda=/-5(FY,h2bHAa`&j(DKb]PWW&,O9sJ6-3KL(Xc&WY-4.N?bR7/PWA.N^_FP\63.Wa'BaXc76<,`+aDWXg<!NdR1e<9uN%]&>d3`3eXaJ`=PB9<HY]5-qe/'S_EaJO[-0]M:a>pJm(4UIJ!mdc#DN+26]Nb[(G(R1,GE'Z>5OHUjRhIDpZdgjJ7<JAN4*c.#P;%#NJ*3<Z1K1oDBpG*2]a#<VP-+*8FZs.E#mF/5JWJ`*J*P.^2\l?&At1CE<5``gZ/XTe0aCR(orfJS-*9jG.>Lg,=Abas=uOlSt+m%!=gD)0kE<E]S[@G^Ik@n#H5pho!J4ckV]u4F!l2:KNN6>5Di,bM@hdt69=o,[NI)`TY3CNdik=4".cC8[q>?%)W,tZ-K/1qI+%PW%[);8K*#.C>*&__R;WOU7AjHo4;W\ALV)`f.%jqso^cWF<(eV&P.Kqil,"/QW=:uk>I.WT2!?tOVk]`87RRk)t#2rHN!euqbs*)"f%%XJ:C[&u1JGBas0bPJO#7o'9J,\E584/a8hNHgqeo%33toL*Xb,qbQu&kij7gG?5;I)rgko+c55W*g`Pg4eo7^p&l)Im*-CM"#2?%6IR7uh@6J'<f+EtL(@V*1Oehta/0pk^gIhKA->I>:7tMl9ot\_9MQ#?>)4D%\?eOR^p-Z\Dr2h425Pc]6Bi6:\>RuF=A+G@#bmm6%S_[-0_OCcoTNrB7M-Uedc)alK4LIlnYdQlKFdV=P8hr.hR`Bhil:)&9Mp/8\TEdgY"Yu5XMs2Fl%[FGhonlIXa_CE<QgP\@0^YaQ%h?.ZW0^?KI#"W`VW%?8anRUSZS?06G?C@P5>`$OO';9R(N/4-RCNu7b7SoIVj#<=1\?3b\!4A+QTH5BCRA9(83J&15W$q%IKP_t>%_j$>`j+sL=k#mUeMAOagaa8>!caUi3\0[BOUtA/gOo-i*-pP3'21Q7XI=l"/g]?F39!^5bkefR$[/cfhd%t#i7KP1J*`?Ei)%VKV%l@]iE$;6[Sa;Ad6P7oGrY0NB9no:rDY&35A)EERUSsXBd4tI$FYm3tRVi-2("2hMt(89p?QoOkeCS3A9!?Q%/7h4(TY3im+_%A2G%$Qse/bu[=P"FrD-aj@'7U.eGqo;Ejc;imEQ']4DnJ-`9h`O7*pjoLoMJT#=ngZ8"M!K"4ARZLG;U!LHnOb04kN1BU1gcF92=mQ0[%L2VUG\&R\!8QtC#K]dfc[FnBp<d+'K>g#[-?dI/:]-ft;+a/F5Y6DMtEYAkB_o6>dIgqo`ZEYV6\m9h2ki%W"9c'\:r)/+!m'c^j%c,f065<8UTKY3=n=:?HIWK1&$4TQn(.6KT+Wk:2S%&Hce)=b`4`Cc$,Yp`A*L85F;ju#6/[T8H68AMC+j4TcX0RsG(J8SniWAJ@g%*oJ:+1s*`U+?h)P;>MBU]ShlDT^IdJ?kPa4hmO$&eC"Z3)FScsoR(DGK<Ma&I3F(uBO4%+eR2]<@j$FYX`u&4=X]afPYN>0`@cf%%#b]VRX*4$C*@nr7qV>i5=LQHa.@^E<Ia68<NW?)qM-,P\4>Jt$+28X%f]MTQ9Pq^fEpFNiKM0,AL_GT]?F&dmiZUV6\)gh%GT8?;%_L=G[TQmQ>;Uu5[W4[K(7hT4+*q^*Sf5;/l&]`aR.o@BkEP>1jSH#5833f09n?J?K5*`B6RGg^TOlXJlNN%nNCUP4jnTm5+D4C\F%[':fNYdaLn2HD&,H;MW?Hj4-jcrA!b%V8$d,c_n\AV;j];U=N)l_Z:@2u,f:q@Rs<";X\lP.nTYFIm4m4h*L76"JLk`Hdq*^B3a/%4eI1[q!3Y'i:+@F)SUV$K0[^_#+`GF](bTAbeZ?G'#C/@PiT=iGN9:=OIDAGjG<STV@&;7K/\0:AU+:"eaN8_>7ZhY_DKdTi!5Re%+ff<>3YG2V43O#XOb,orLYnsY5g2h4r=cLhF^qTO,n7A)e.PRI@>7e620NQTJ6DV.k'i0HRYUF/+Y33LRqG7^A48`CR<`j;H9cpk%NYI#gg.3Nj,Bn+SYK.Z_#AJelo((_aqs>gbQ9<-?_tE5$5/?;01M>nfrD$>`4%S?X6CuZg=*^2hj1!aB\C?`s[J:Q5.M<`Iq=#aj%VC-QCo@<`-Y!$*Daqp140o#lWP(d>:D+l-p)gR7n7s<D1c#XhnkIlE+5"ibg3P$p$,trI&LmL"u#%nt9MYnkh2K#-/&ptke2\R)N%^V,!hk(iW]pRcn]I/<U!mG5CdLPMLn5.pgkp@QDkbM1j.02I)4gcp5`KOjG95PMqJIs?>9o%3'6QhrGNJ,T\orlFm1_o)?n^VBXVXUoW8~>%AI9_PrivateDataEnd